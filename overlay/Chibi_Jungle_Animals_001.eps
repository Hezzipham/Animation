%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Chibi_Jungle_Animals_001.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Javier  Cortes
%%CreationDate: 11/30/10
%%BoundingBox: 0 0 800 655
%%HiResBoundingBox: 0 0 800 654.7266
%%CropBox: 0 0 800 654.7266
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Chibi_Jungle_Animals_001</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-11-30T01:31:59-08:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-11-30T01:31:59-08:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-11-30T01:31:59-08:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUp1bXhpl3Ck0Ja2mG8y9VYHfam+2anX9qDTZIiUfRLr3O&#xA;bptH4sSQfUOiL+v8r6G2hUSpJGZpJQwoq9ENO/I5l/mryxhEcQMeIm+Q6fNp8GoGR2o1X3/JEJPD&#xA;I7ojqzxmkigglSex8MyI5IyJAIJHPyajAgAkc1+TYuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrZJEjRpJGCooqzHYADucjOYiCSaASASaDCvMXne7W3uBpE&#xA;dWjRjG7D4nYAkBQelT9OclrPaEynwYvTG/q6/Dud3p+ywBc9z3PMIvzG1GLytHrXmy3l+uT3ksNt&#xA;FEhRmiCK6ErK2yhua8tyadO+T1ughqM0Yxlvwky34u6urfhkcYNDbby97J5Y5xeWt7YX9zaNCVkQ&#xA;xOUWWJ6N6c0VWRgR2PQ9DmjhqMmjyThA+V/cf2cnJOOOaIMgyi31nWIraI6dp5WN95J+DStK4JDF&#xA;n/1q5scXaOpjAHDiqJ5yoy4j1JPvcOelxGR8Se/ddUPcy/T2vWtEe9CrcMKsiAgLXoNyd867SHKc&#xA;YOWuM9B0dJmEBIiH0ojMlqdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirFPPN5Mq29oppFIC8lP2qGgH0ZyntNqJARxj6TuXc9k4gbl1DDIZop4llhcSROKo67gj&#xA;xBzkZRMTR5u8BQ9jpEXmq5uNLubFJfqVyKJKQ6UVFdJTQbAiSlPozZ6HT5vEj4B9Uo8+7ejfycbP&#xA;mhGJM+SL1W1Z2vrKSceqPUgmliapVyKEg9iK1zFzY54sxE95CXz/ALWzFKMoAx2FPQPJPl8+XvKm&#xA;m6Oz+pLaxUnk3+KVyZJTv4u5z0zDGoDo8pnnxTJTvLGp2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAavo1rqkAjmqrpUxSr1Un9Y9swNf2fj1MKlsRyPc5Om&#xA;1UsMrDEh5Bv4p5PRMPGVuUktSCxoFqwoTWgAzl5+zmouuKJiPxydxHtXFV0bZJ5c8s2eiLdPExlu&#xA;b2RZbmZqCpVFjVVA6KAv31zqez9DHT4xEbnv+39Lp9VqjllfIPFdAii1D8xbjy67tOdR1Jtcu51F&#xA;YDEsguFhA68WVFHKvtmowYzqc8c+3CLjXzsu2zS8LCY9afQWdK6B2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kpf5ivI7LQNSu5Zvq0dvazStcULcA&#xA;kZPLiNzTwGV5iRA1zpsxC5gebzz8otL0D9K3dzaBpr/SbG0017sghWjdBItB05URa+HTNF2GMp45&#xA;y2jIkgeZJv7nadqSAEYh6nnQundirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqndXVva273FzI&#xA;sUEQ5SSOaKB7nIykIizyZQgZmoiyWC6t+cnl2xm9OC3uLxKH98gVFJFKAcyGp9Ga6XamO6AJd9pv&#xA;ZzNkFkxj5KenfnJpV5ZSyvYyxXSlhHByDIwABBMlBxrX+U5CXa8BEkg2yz+zuSEwOIGPf+z9qeaD&#xA;+YGi6vdJZhXtbpwSiSleLEdlYHc+1Mt0vaePMeHcFwdV2Tlwx4vqj5MmBDAEGoPQjNi6t2KuxV2K&#xA;uxV2KuxV2KuxV2Ksc/MS502Dyff/AKSBazn9K2kQEgn6xMkQGxU0+P4qdq5hdomYwSMPqrZytEAc&#xA;sbSj8o7GKLRr69Nv9Uu726rc2vNXEZihjjRQV6VUBqHxzE7EP7k78QEqB7+v3khyO0z+8HuZ1m4d&#xA;a7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqo3l3BZ2st1cNwhhUvI3sBkMmQQiZHkGePGZyERzL&#xA;wnz35r8weYbuGOLlFYKyi3tIia+r2aQ/tNX7J7fr5nP2gc3kB0e+7K0GHTxJO8+pPd5fpQOv+VtR&#xA;sdIS6n4sdjKF/YOYgsFv0mthPLwxS3QyRFL86ffT+mQzno5Or5hkWqeV76008agzc+K85olHxIKV&#xA;+mmIiQHW4NZGc+BNPys89TRap+ib6cR6bIpNv6lWCyDovOvw8vu+k5tuztQccuGUvSfv8nF7d7KB&#xA;x+JAXMc/d+l7NnQvFOxV2KuxV2KuxV2KuxV2KsJ/Nm+tbbQ9NjuYhMl5qtpAgLceL1aRG2+1xaPp&#xA;ms7YEjp5cJrY/Kjbn9m14qz8qrW6tbfXY51+GfUmuoHBqDHLBElKduJiOUdg54z04iOcebZ2pAjJ&#xA;feGc5unWOxV2KuxVxNNz0xVhnmL84Py/0C7FneamJbnbnHaq0/AHu7JVR8q19siZgN8NPOQsBkmi&#xA;a7o+uaemoaTdx3lm5KrNGduQ6qQaEEeBwg21SgYmij8LF2KuxV2KuxV2KuxV2KsW/M+4+r+SdQkC&#xA;F3PprGBWgZpVFTTw675hdogHCbdt2JDi1UR03+54hpfmR7S7imnh5GM122rtToc5Q4Ooe6z6ITiR&#xA;Es8GpRa/pg9SHjaSkGlT8fE/RtUZHJmly5Og8A4J7H1BSGjaWsfppaxov+QvE1+Y3ynjLM6jITZJ&#xA;b1vzBdW0H1dokKSqVEpr08OPjlviykKRp9LGRu+TD1lt4gEjWi/5IAAwcEjzdsQTuXvvlm+N9oNj&#xA;cmT1WeIBpaEcinwlqHfcrnaaWZljiTvs8BrcfBllGq3TPMhxXYq7FXYq7FXYq7FXYqwb83tR0nTf&#xA;L1rqGppzitLtZYVA5N63pui8RUCtHPX55pu2seTJjjjx/wAUt/dRdl2YQJknoGL/AJM6xrl75gv7&#xA;2cyLoer26S2MMrAmOWBipRUHZgXbl3AGY/ZM8WGfgbeJ1rr1+7o5HaUDKIn0eo6/r+l6BpNxqupy&#xA;+jaWylnIFWPgqqOpPbN7kyxhzPN1OPHKZoPKp/z9vNQ0LWdT0HSBGummP6u96WcSBm+MskZQLxXe&#xA;gc5rdR2iYZoY6Hrv9nzdjj7OBiSTyQOk/nZ53u/J2pa69lZG5tZP3EYSURNGvD1NvU5/CpbfllGf&#xA;tOcNVHFtwyHyO9NsezoGBO7Nvyz/ADPPmzS1n1CzXTrlpGiiKuXil403WoBXc0oa9OuZY7TxjN4M&#xA;jU/s93vcTNoJRjxR3iyzzHp0up+XtU02JuEt9aT20b9OLSxMgP0Fs2JGzhQlUgWJ+X/y9/LXWfL+&#xA;m6kPL9oPrFtG5ATiQxX41alKsrVBOREQQ3TzTiSLZtY2Fjp9pHZ2NvHa2kI4xQQqERR12VaDJtBJ&#xA;Jsq+KHYq7FXYq7FXYq7FXYqwL82wRp9jJ6nFfUdGj5UDAhW6d6Fc0nbcSYxrvd/2B9chXQPLWkiY&#xA;8QvMnYCnX7854QL1IBX/AJp+bdc8k+R/0noNtFJdRyw27SSxiWOCN61lKH4T8QCb92zN7Kxwnmqe&#xA;+x+bzXaWWfAZA9UL578/ebdG/LC080aXaR2+s3MdpJdRvCJktfrCBpaRycxsx4DnWlfHLdFixHVS&#xA;iaMd6adTOfgA9drZHFNeax5Qsb/ULYW+oT20F1c2ygqI5XjDSKFPxCnI7HfNfnqOWQhys07PQ5JD&#xA;hvmQksUNqWDOGaPuEYKfvIb9WRGQg7u3kZdHufkuGGLytpyQtziMXJTUMaOxahK7VFaHOy0Q/cxr&#xA;ueF7RkTnnfO06zKcJ2KuxV2KuxV2KuxV2KvNfzpuNOePQNK1K2W4s9Tu3ifkzKVdU/dleJHViBmm&#xA;7ZExj44GpQs/df2O07MriIKW211BpCRTxtHaQ2nHgSQkaKuwG9AB2zhsOXIMonGzO7793e5IRlEx&#xA;PJL7rUF8y6tf65NeJqOlSRC2tNPRPUiiWOjSDeokZ3Fa08O1M2vanaOXLKIlE45Dfn38nH0umjjj&#xA;sbSjRtQtrfydNealpS6daJ6pm09YtihahrGwH2q9D+rMbUYpS1IjCfHLapX+nyb4n02RTXljzBpO&#xA;v6Zf2ei2v6PW3TgsbRxrGDOH4twSq9VNRh1ukyaecZZTx35npXVGOYkCBsh186DTNctfLJsZJ7lP&#xA;RinuolWNS8gUtKsSg0WrcjuMs/k45MRz8QiNyBz5dL70eJR4aejaJYfmA8Lz6L5iilt3dkls9Wha&#xA;4MBO4aKZGSRhvsrkge+dV2Pq5Z8AJPqjsXSa7HDHOiPPZmflnQoNA0Gz0iCRpktI+JmegZ3Ylncg&#xA;dOTMTTNsBTr5z4jaZ4WDsVdirsVdirsVdirsVdiqRedNN07UtDltLydLdmIe2lf9mRehA6nbY+xz&#xA;C1/hnHUyI93vc/s3LPHlEognv9zxGH/QtTj9ZOIgkHMdeh617+IzlZURs9vL1w26hl92kl1YSpaz&#xA;iGSaNhDchVkCMw+F+DfC1DvQ5jRNHd08geTz/TvL/wCa519oL3zRH9SgEczyRwxszrIzjiIzGqqf&#xA;3ZrvQbdcz55dPwWIbuMIZL3LPtSv4bGyluZfsopIXux7AfPNfGNmnOw4jkkIhiXlvSr7XryK2sBx&#xA;kkJDua8UCipLEA7ZssWmlkkIh2mtzR08TKfL730Fpthb6fp9vY24pDbRrGnjRRSp9z1OdZjgIxER&#xA;yD57mynJMzlzkbROTanYqkHmvWbqxSGC1NJJqlmH2gB4dhXNN2vrTiiIxPDIpAY1pnmLVInWT1ZC&#xA;WqXgmJINDuN/o3Gc3HtXJgkCJmV873Dk4tNLICR0Z3p1/FfWiXMYKhtmU9mHUZ2mk1Mc+MTHVxiK&#xA;ROZKHYq7FXm355+WdQ13Q9JSxYo9vqKPNKNvTjMb1kr4qQKe5zA7SzxxYjOW4HT3uf2dvOu9hvnH&#xA;yzc6/pEdhFeegUkWR2ZeQk4qRRqUpua5wnZ+tjp8hmY3t8noskOIUifK3lu28v6UtjC5kYsZJ5W/&#xA;bkIAJA7CgAAyrXayWoycZ27vcnHDhFJrLFFLG0cqLJGwoyMAVI8CDmKCQbDNZbWlrap6dtCkEda8&#xA;I1CCvyUDDOcpG5G0AUrZFLJ/IlwVu7m3rs8YcD3Q0/42zp/ZjLWScO8X8v7XUdrw9MZdxZnnZuhd&#xA;irsVdirsVdirsVdiq2RA8bISQGBUlTQiopscBFpBo28xtPNnnnRtVGnalA17bRSBHmkjIYxVpzWR&#xA;NjtvVq5ovzubDKp7xH3PTz0GlzY+OB4ZEd/Xur+xletXcU9xYX2l3Kz3iNxitlo3JX+1UdV964dd&#xA;mE5QyYZCUwdo87v7nV6XGYiUMgqPe891fT4tSd5XJSdiWEg36mu/jnMjOeInvL0eDIcYocmMT/4l&#xA;0u6P1cyLaAgcgA8ZHdiPi475lQlCQ35u0gMGSPqri+1W/Tuoi4knDgSSIkbHiKARliKV/wCMhw8A&#xA;qnGGjhdonyxomveY9Qe1uGYxy1IuJq8Ag+1xA/CmWYtP4uQQgaKddqcWngJR5joHtvl7y/pug6ZH&#xA;YWEYSNRWR/2pHp8TsTXc/h0zr8OEY48IeG1mrnqMhnM/sHcmWWuK7FXYqlHmHSfr8UZjiMlyG4I/&#xA;MIqKwNWeoPJR4AVzW9oaCOcDb1e+qSCwtdOkOpvbwuZ2V2igAFKgGnI/QN84GWCWXOcUPUBIj7Xf&#xA;GcMGHYVKX3/segaVYLY2MdsDyZRV28WO5z0bRaYYMQh+LdCSi8ykOxV2KoXVLMXunz2x6yIQpPZh&#xA;up+8Zi63T+NhlDvH29PtbtPl8OYl3PMGVlYqwoymhB7EZ5gQQaL1wNqlraz3U6QQIXlc0VRlmDBP&#xA;LMQgLkWOTJGEeKXJl9j5Is0QNeyNLL3VDxQe3ic6/S+zWMC8pMpeWw/X9zo83a0yfQKCIn8l6PIp&#xA;EXqQt2IbkPpDVzIy+zmnkPTcT7/1tcO1MoO9Fims6FeaXIPU/eQMaRzL0PsR2Ocp2h2Zk0p9W8Ty&#xA;P45O50urjmG2x7kV5NfjraD+dHH4V/hmV7PSrVDzBae0xeE+8M/zv3mnYq7FXYq7FXYq7FXYq7FX&#xA;EAih3B6jFVKG0tICWhhjiLfaKKqk/OgyuGGEN4gD3BnLJKXMkvNLGyhur57YSUBEnoH+ZwDwG/ic&#xA;4TBgjkyGN99eZ6PU5cphDiruv9KXzgGGTkoYBSeJFRsK9MxLpyIndSg0zTJNOhuisTzmR0kjCBeI&#xA;AUrWgoa75eCfCEuLckgju5Uk5piZjvVBnXkTSxFBJfFQof8AdQACnwg/ER9Ip9GdF2DpqBynrsP0&#xA;ui7Vz2RDu3LK86F07sVdirsVS/XdQNjpzyoD6r/u4qdmYHf6AM1XbOtOm05kPqPpHvP6nJ0mHxMg&#xA;B5MS0bUhYNcz+kJbj0/3Kk0FSRWp+L8M5XsfUx04lOrlw7fNs1szLIe4bIvR/OFwrs2pW3pLO1WW&#xA;Ji4iPQnfqDSppm103bnDM8Y9Mj06fs6uJTMgQRUbg9DnVMXYq7FXYqwHzfp31XVDMopFdDmPDn+2&#xA;P4/TnA9v6Tws/EPpnv8AHr+v4vSdm5+PHR5x/ATvyXpqw2TXrj97cVCHuI1NPxIzd+zmjEMXin6p&#xA;8vd+0/ocDtTPxT4Byj97I86N1TsVUL6yhvbWS2mFUkFK9wexHuMo1OnjmxmEuRbMOU45CQ6ML8sW&#xA;0kHmT0ZNnhEit9AI2zi+xcMoa3hPOPE7/X5BLT2OtM7zu3nHYq7FXYq7FXYq7FXYq7FXYq06hlKn&#xA;owI+/ARagsYHkqGC4WaKR3CMGVSQDUGo7Zp8fYmGExK5bfjudjPtPJKJFDdKk8oaotypmRWh5Vfq&#xA;3Ja7ilO+a7F2HlGQGRjw3v7vk5k+1IcBAvipHX/ll54UitYVt+BJ4hOKmvjTNnruyo5IAY+GFeX6&#xA;nC02vlCRM7lfmmflnSdT05HjuZVaA7pEN+LV3IPauT7N0WTACJSuPQdzHW6mGUgxFFPM2jguxV2K&#xA;uxVC6lp8N/atby9K8lbuGHQ5h67RQ1OPgny+4tuHNLHLiDG5PJ16rVimQ+B3Gc8PZzJHaMwfhX62&#xA;zNmjM8VUW4/J9471nmBHeh3+81zIx+z5JvJO/d+to4mU28ckcKo5DFRQU22HTOkAAFBiqYVdirsV&#xA;Yx+YflvVvMHl/wCp6RefUNRSVJIbg9KCoZT7FT9+Yur0kMwAkAa73J0uoOKVonSYNY0/SLKxlYyy&#xA;20EcMswWvN0QKz9/tEVy7FjEIiI2ADTknxSMu9XNzqA3JYf7H+zLGDQub/oCx+iv8MVVFn1PsGPz&#xA;X+zFUm0vyvrcXnq78xXF/wAtOuLYRR6ZSgSakY9QEHuEO3vmJHRwGU5KHEerky1JOIQ7mW5luM7F&#xA;XYq7FXYq7FXYq7FXYq7FUpvNdVHKW6h6dXbp9AGWCDVLL3IVdfvAd1Qjwof64eAMfFKOtNbgmYJK&#xA;PSc7A1qp+ntkTBnHICmWQbHYqoXV9Z2oBuJljr0DHc/IdcIBLEyA5qUOs6VM3GO6jLHoCeJP/BUw&#xA;mJQMkT1RmRZuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAazcmGz&#xA;KqaNKeI+XfJQG7DIaDHMucZ2KuxVM49bmjtUiVQZV29Rt9u22Q4N20ZDSFk1G+c1M7j/AFTx/VTJ&#xA;cIYGZQk8aTuXmHqOersST9+EMSLQc2milYjv/Kf64bYmKbeVNSuRcnT5iWTiTGG6qV6ge1Mhkj1b&#xA;cMzdMqylyXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUk8wsfUhXsAx&#xA;+8j+mWY2nKlGWNLsVdirsVdirsVdiqK0dIhqsUrbNRlB8SRtkZ8meP6mUZS5LsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqTeYk/uH/ANYH8DlmNpypNljS7FXYq7FUDea9&#xA;oNjf2enX2pW1rqOokrYWcr8ZJiDSiClN2PFakVOw3wGQDMQJFo7CwS3zJ5i0vy3oV7ruqmT6hYoH&#xA;mWFQ0jF3WNEQEqKs7qNzTBI0GUY2W/KXmnSfMej2Ov6S0n1K6q6LOoSVGjco6OAWFVZD0NO+AGwk&#xA;jhL0MEEVG4PQ5S5LsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqC1mAy&#xA;2LECrRnmPo6/hkoHdhkFhjWXOM7FXYq7FWDedvyq03zV5m0fzDLeSW11pLRAxqodJYoZTMEO6lTy&#xA;Y/EPHpkTG2yM6ZzkmtB6xo+mazpk+manAtzYXS8Z4GJAYAhhupBFCAQQcSEg0hdF0LSvLPl6LSdK&#xA;iMNhZq/oozFzWR2kYlmJJq7nGIROXVOfJ+tSCUadO3JGFbcnsRuV+VOmDLDqnBk6Fl+UOW7FXYq7&#xA;FXYq7FXYq7FWJfmB56l8s21vb6dYNquu3/P6lYBxGgSMD1JppDskaFlHixIA8RVlyiAbcWPiLx+7&#xA;/Nb/AJyETVUtk0jTqTVaMxxs0AVaV5SGaq/7I1PbMb8yXJ/Lxelfl5+ZOt6vf/oPzVpcel600bS2&#xA;k9s/O0ulSnMR1LMjqDXgxNRU5fiziWzRlw8O45PQ8vaHYq7FXYq7FXYq7FXYq7FXYq7FXEAgg7g9&#xA;RirHL/Sp4JSYkZ4SfhKipHsaZdGVuPKBCy10m7nYVQxp3dxT7h3xMgERgSqarpv1Uq8YJhIAJO9G&#xA;Hj88YytM4Ul+Sa3YqskkZdljZz7UA/EjCq1ZZf2oSPkVP8Rii0Lq83GBYx1c1PyGGIY5DsldvO8F&#xA;xHOn24mDr81NcmRbUDRt6nHIskayLurgMp9iK5hO0BXYq7FXYq7FXYq7FUq816he6f5c1C9slrdQ&#xA;QlozTlw7GSnfgtWp7ZGZIBIZQAJALx+PU73UvNd7Nd3hvzDYWaQzsIhxDzXJdR6Kxr+yp6VzVZJm&#xA;W5djGAjyWwSwWUT6e897PIZSv1h4ZpGBuXLrxkSPhwj58eX2UA+I7YOe6eWylfvc6Umgvb3ki3dn&#xA;dwxxX0hRpTWGSJ3YuCjM0bNyqtPbDGZBsKYgii9Y8haxqOq6PNNeyfWPRuXhgvKKvrxqqkv8AVPh&#xA;dmj+Efs+ObLDMyjZcDNERlQZJlrU7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlXmlmXQrllJDD06Ef8&#xA;ZFyeP6mrN9JYK+u3ECAuqyCtD2P4f0zJ4LcLxCE1sb+C9iMkJPw0Dqeqk9K/dkCKbIyBVn9SnwAV&#xA;8WJ/hgZLV9YfbKke1R+uuFUkvrj17hmH2B8KfIZMBokbKHwsXoflrUobzTIkU0mt0WOVO/wigb6c&#xA;xckaLsMMwYptkG12KuxV2KuxV5F+YX533+jebJfK/l+zspLqyEX6Q1DVLgW9rHJOoaOJd15MVYft&#xA;bb7UUnKZ5aNBvhisWUk1r/nI2+s/J2trcaamm+ddLu00x7Nm9aESyepWdP5lT0H23FeO5BwHNt5p&#xA;GDcdzC/yh81w31lerqlxy1m5umklup2q9xyAI+NupUk0Xw6d81+Q7ubEUHob/wC98P8Axil/4lHk&#xA;OisN/NXzNZ6d5cmghnpqrPH9VMLUkhYOD6nIbp8NR47/ADyUOakbPU/yF/MK886eSRNqTq+r6bKb&#xA;S8dQF9QBQ0cvFQFHJTQ07g5tMU+IOvzQ4S9IyxqdirsVdirsVdirsVdirsVdirsVdirsVSvzOhfQ&#xA;rsDsFP8AwLqf4ZPH9TVm+kvOJIkkpy3ANaZl268hNtO1ex0zR7xTC011cOOK9FUBaKxPsSchKJJD&#xA;bDIIxPejlZLiJJEc+m4qCppUH8cjyZ81WA6ZFJxvpGSCRWXcu25FP8ojrgN9EjhHNjtzHFHPIkUn&#xA;qxKxCSAEch40OWhxyN1MAkgDqdhir0u10fT7f0pEgRZ41VfUUcSaCm9PHMQyJdjHGAjcizdirsVd&#xA;irsVYd5n/Kf8uvMGqtrutaIt7qSqvKVZJ0MgiHwho43RJDQU+IGo26ZCWOJ3LOOSQFAvkSKDVPzF&#xA;87RQwNXV/MeoSz3Kj+7hjJqpp4QxiQ/6vvmH9R97nbRHuZx+bfkbS/JHme2stPeNNN1C1ia1i5gy&#xA;CW3jWGUyL1/ecQ/L9pi3hkNVio2F0+TiG7FVvbxU4LPIEAoFDsBTwpXMRyWXfk/5S0jzd5vlsNSe&#xA;OSytLWaS6tS6iSQzRtAoRftfB6nPkPskL4jMrS47Nlx9Tk4RsyT8hbK/8kfmx5k8i37VWeAS20h6&#xA;S/V25Quv+vDMxPyp2zKxDhkQ4+Y8UQX0ZmS4rsVdirsVdirsVdirsVdirsVdirsVdiqXeYiBol3X&#xA;+T9ZGThzDXl+kvN8ynXLrqN7WCKadSqz1MQ7sB1anhiN0kUN29K1WOCT0gT6DH7B/ZJ7r/TGUVhO&#xA;k5vIFu7cGJgSN0PY+2QBpukLCjc6TFHoFtqCsRM8jRyoTt1YD6RxxEvVTEw9AKWQyenMklK8GDU+&#xA;Rrky1gvVIpEljWSM8kcBlYdwRUZhOzBtdil2KuxV2KuxV2KvmmD8vodQ/wCchvMumeW9Qn8siws1&#xA;vEurEcqTTJbmRACRRHNwxK17U6ZjcHrNbOXx1AXu8z0zyr5l8+fmjJoF7qM1xffWJYbzUromSSOG&#xA;1JVmIJ7BaKvjtlQiZSptMhGNvpSP/nHT8tk0v6kYr15uPH6+byYTdKV4giH/AJJ5f+Xh3ON+Ym+c&#xA;/MnlvXPyq/NS0gsp3mmtpYbvTLgfC08ErFeLDp8VGjfsd+2UmJhJyIyE4vcvOyiy/wCclPJF8KKL&#xA;uxmtpN+IYhblRXx/vR+GXy+sOPD+7L2jLmh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjfnWS6NnHDE&#xA;reiTymYd6dB8stxVbRqLrZhWZDgp7faO+rWVpI8hiuIYhGoI+HiOgI7ZSMnCS5csPHEHkUrbypc2&#xA;0bXEk6ERfHxQEk0+dMsGYHZpOmIFkqAdgCoJCnqK7HJNaY2cV1fWDWiPRIH9RA1aVYEEfhlciIm2&#xA;6ETKNdzo/L2pO4QKorsDWv6qnHxQv5eTPNKtGs9Pgtnbm0a0LfTX8Mx5GzbmQjQpFYGTsVdirsVd&#xA;iqjeTTQWc80MJuJoo3eOAEKZGVSQgJ6cjtiofNHk3SPzlTz/AOZPMUmmjTNX1mynjhuZ+DW0Uskk&#xA;TxjYyV4LHRdj798xoxlZLlTlDhATz8q/yj87+VvO8vmjWNYtLiaZZRcrH6tw9yZzycySSrCUPMK/&#xA;IciTkseIg2WOTKCKAe2/pW4/lT7j/XL3HeMfnF+VPnHzp5os9d0rVLWA2sSxQwzCSBoPTbmrJLEs&#xA;zOS7M24XjtSuUZMZkbDkYsoiKLGvPOgfnTceafKeqi0XVta0O1j9S9tqC3kuIrqVxy5GL7cXp89l&#xA;qa0yM4ysM4ShRHe+l9MuLq5020uLu3NndzQxyXFoWDmKRlBePkNm4MaVGZAcUonCh2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuIBFCKjwOKoY6bYklhCqse6jj+rDaKCxtKgP2WZfuOBKi+kvT4XDA9mFP64q&#xA;gm8rW7NVooh8qj8AMlxnvazij3I230SCFQoIVf5UAGAm2YAHJHQ28MIpGoHie/34EqmKuxV2KuxV&#xA;2KuxV2KrHhhf7aKx8SN8VUW061b9nj8icVUm0mOvwuQPeh/pirl0mP8AakJ+QA/riqIhtIIjVF+L&#xA;+Y7nFVbFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYqoX99a2FlcX13J6VraxtNPKQSFjQcmagBOwGGMSTQSBbHvLPn/S/MWq3tpYxP9UtUtmhv3IW&#xA;Oc3UAnVEVuL81QmoptTLsunMACWcsZiE4i8waNLqh0uK6SS9W2F4yLUqIGYoH5j4NyDtWuVnHKrr&#xA;bkx4TVoXzP5u0jy7ol5rF2WuLew4C5ituDyqZJBEvwsyD7ZpucliwmchEdVjAk0mb39igDPcRKG6&#xA;EuoBoadz45XwlFILUfMujaff2Wn3NwBeX8hit4V+I1CsxZ6fZUBDucnHFIgkcgkRJFpmjpIiyRsH&#xA;RwGR1NQQdwQRlbFvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUPqNjBqGn3VhcCsF3FJBKPFJFKN+ByUZUQR0SDReE6V+XGiNY2lpF5wsjccLq3kEpkhk+syUgie&#xA;BGkic8eMce4oabZtZ6mVk8B6OWch7kVP5ajD3kEOs+WbG3vre2+stbPUF4Jq/V4oQ4b03R6v/vxu&#xA;OwqciMvLaZq/x+OSOLyKHh8maLEotI/OelRaPqczSagpaMPNDBdC5hrLVf31HClHO25Wu9JHNLnw&#xA;SsfqpeM9xtSl/LPR7e2Eq+ZdIupSWeGJ544/UiVoDHwkLN+8dLNlZ6dWPhhGpkT9Mvxf60+Ke4qO&#xA;heR7bUNFuJJdZ0/S5WuRcRXUt1FLM/r26xmKYpIfhZvUFS3JuRPEHbDPORLkTt3eaynR5M5F4lhZ&#xA;6bY6Z5x02zt7OCKAQwus6O8ZYSseRmdatSiluikfzZiVZJMCbaqvmGY+S5bt9EVbvWbfXbmKR0k1&#xA;C14cDvyCsIyVDKGzGzAcWw4fJrnz5UnuVMHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FWPT/8AKv8A61b+v+ifrVV+qc/q3qV5Jw9Ou9eXp0p34+2XDxK/i+1n6vNB&#xA;yf8AKq/rcfqfof1aJ6XL6vwr+74cK/Bz/u6U+KnHtTJfvq/i+1Pr81WL/lWn6L/6VP6M5Px9X0PR&#xA;+18XH1Ph41pSm1KU2pgPi3/Fa+q+rc3/ACrL0IPW/Qvoemv1Xn9U4elWXj6dduNfWpTb7fviPF/p&#xA;fb+O5fX5qFz/AMqu+pty/RX1T6zb+r6HpcfrFW+r+r6P+ypz2pXtXCPFv+JRx+bcf/KqfrFxw/Qn&#xA;r8/3/wDvLXnVq9e/LnX3r3rifGr+L7V9fmnegf4b+pv/AIf+p/UvUPqfUPS9L1eK1r6Pw8uPH3pT&#xA;KsnFfqu/NjK+r//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:02801174072068118F629A4A358CE8DE</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:02801174072068118F629A4A358CE8DE</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F1174072068118DBBE862170372AD</stEvt:instanceID>
                  <stEvt:when>2010-11-22T01:42:50-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118F629A4A358CE8DE</stEvt:instanceID>
                  <stEvt:when>2010-11-30T01:31:59-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:100fcd93-bb75-9b47-a897-d1997cb6c97a</stRef:instanceID>
            <stRef:documentID>xmp.did:F77F1174072068118DBBE862170372AD</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Splash</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -654.727 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 654.727 li
800 654.727 li
800 0 li
cp
clp
[1 0 0 1 0 0 ]ct
650.096 561.994 mo
660.871 577.168 611.671 591.037 584.94 585.145 cv
560.866 579.714 511.12 577.313 525.238 565.997 cv
530.504 564.11 561.225 558.657 593.257 559.951 cv
625.34 561.281 648.95 556.92 650.096 561.994 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.084596 .0613107 .0657664 3.0518e-05 cmyk
f
666.749 313.341 mo
666.749 318.135 640.207 322.821 604.65 322.821 cv
569.097 322.821 540.273 318.936 540.273 314.14 cv
540.273 309.345 569.097 305.458 604.65 305.458 cv
640.207 305.458 666.749 308.545 666.749 313.341 cv
cp
f
433.477 310.373 mo
433.477 314.155 419.565 317.22 402.405 317.22 cv
385.247 317.22 371.335 314.155 371.335 310.373 cv
371.335 306.593 385.247 303.528 402.405 303.528 cv
419.565 303.528 433.477 306.593 433.477 310.373 cv
cp
f
375.117 255.843 mo
372.282 255.721 371.03 258.83 372.261 261.076 cv
372.53 261.484 372.759 261.916 372.946 262.37 cv
373.625 264.075 371.226 264.007 370.539 264.011 cv
369.763 264.016 369.086 264.05 368.332 264.229 cv
366.827 264.584 366.383 266.148 365.715 267.328 cv
365.381 267.915 366.285 268.441 366.617 267.854 cv
367.344 266.573 367.878 265.681 368.972 265.286 cv
369.129 266.155 369.232 267.365 368.658 267.955 cv
368.188 268.439 368.925 269.178 369.396 268.695 cv
370.257 267.809 370.204 266.286 369.994 265.078 cv
370.166 265.065 370.344 265.056 370.539 265.056 cv
371.367 265.062 372.627 265.09 373.257 264.425 cv
373.928 263.715 374.092 263.037 373.955 262.093 cv
373.88 261.566 373.424 260.978 373.164 260.548 cv
372.243 259.037 373.104 256.802 375.117 256.889 cv
375.791 256.917 375.789 255.873 375.117 255.843 cv
cp
.502922 .201114 1 .0197147 cmyk
f
382.317 284.69 mo
386.514 272.333 425.772 240.091 382.186 239.452 cv
385.542 241.979 391.26 244.033 389.456 251.655 cv
387.54 259.75 382.438 261.666 377.893 261.316 cv
378.812 263.533 379.122 266.219 378.26 269.434 cv
374.974 281.689 368.49 289.328 366.981 293.323 cv
365.513 297.21 360.427 314.178 397.958 313.563 cv
393.037 313.091 386.521 309.093 382.495 305.561 cv
378.647 302.185 379.12 294.104 382.317 284.69 cv
cp
.00155642 .206119 1 3.0518e-05 cmyk
f
391.159 254.314 mo
392.964 246.691 385.941 241.13 384.028 240.903 cv
384.028 240.903 385.527 247.616 385.512 250.096 cv
385.494 253.228 385.226 255.024 382.387 256.777 cv
380.245 258.099 378.569 258.771 376.233 258.808 cv
377.293 259.92 377.882 261.188 378.41 262.847 cv
382.956 263.196 389.244 262.409 391.159 254.314 cv
cp
3.0518e-05 .423285 1 3.0518e-05 cmyk
f
400.85 293.012 mo
406.385 294.473 408.391 290.946 408.185 286.441 cv
406.474 286.12 404.688 285.926 402.985 286.027 cv
392.039 288.775 397.525 292.136 400.85 293.012 cv
cp
.502922 .201114 1 .0197147 cmyk
f
412.646 287.518 mo
411.88 285.853 409.563 280.681 408.17 278.586 cv
407.595 277.723 404.167 274.217 404.908 275.708 cv
406.075 278.06 408.075 284.041 408.185 286.441 cv
408.391 290.946 406.385 294.473 400.85 293.012 cv
397.525 292.136 392.838 288.599 402.985 286.027 cv
402.998 286.024 403.007 286.017 403.017 286.012 cv
403.017 286.012 402.98 286.019 402.921 286.034 cv
394.852 286.306 392.255 290.676 392.574 293.307 cv
393.166 298.19 398.364 300.063 400.905 300.434 cv
404.412 300.944 411.864 301.067 413.826 296.391 cv
414.659 294.408 414.505 291.563 412.646 287.518 cv
cp
.251286 .0126955 .922515 3.0518e-05 cmyk
f
412.646 287.518 mo
412.755 287.758 412.859 287.993 412.958 288.225 cv
413.445 288.187 413.943 288.148 414.447 288.112 cv
413.832 287.888 413.226 287.689 412.646 287.518 cv
cp
.325109 .0402533 1 3.0518e-05 cmyk
f
422.412 308.138 mo
428.896 301.831 422.679 294.814 419.572 294.992 cv
417.505 295.11 415.484 296.598 414.357 297.584 cv
414.425 298.758 413.016 299.583 412.107 300.03 cv
409.552 301.289 406.407 301.905 403.581 302.046 cv
398.809 302.285 394.34 300.303 391.463 296.464 cv
389.376 293.68 388.391 289.357 388.241 286.819 cv
387.687 277.434 395.034 272.066 400.564 265.062 cv
404.561 260 409.146 252.166 407.137 246.323 cv
405.551 241.711 398.138 235.803 394.347 232.912 cv
389.861 229.49 384.739 227.525 378.803 228.032 cv
374.573 228.395 368.592 232.147 366.063 235.687 cv
365.459 236.53 365.444 238.25 365.042 239.175 cv
363.973 241.626 364.059 241.828 362.574 244.025 cv
359.578 248.458 360.693 255.374 365.836 257.425 cv
368.799 258.606 372.192 258.793 375.344 258.812 cv
375.647 258.813 375.943 258.813 376.233 258.808 cv
378.569 258.771 381.098 258.292 383.168 256.861 cv
385.693 255.115 387.49 251.852 387.509 248.721 cv
387.524 246.242 384.134 239.396 384.134 239.396 cv
421.635 241.706 386.057 271.566 381.026 286.376 cv
377.829 295.792 378.6 304.228 382.447 307.604 cv
386.473 311.136 392.695 313.17 397.617 313.644 cv
398.016 313.682 398.408 313.714 398.789 313.732 cv
404.473 313.999 410.661 313.491 416.37 311.649 cv
417.999 311.125 419.67 310.39 421.151 309.401 cv
421.524 309.014 421.939 308.596 422.412 308.138 cv
cp
.251286 .0126955 .922515 3.0518e-05 cmyk
f
424.656 305.831 mo
427.147 301.601 424.811 294.992 421.694 292.172 cv
419.775 290.436 417.021 289.048 414.447 288.112 cv
413.943 288.148 413.445 288.187 412.958 288.225 cv
414.52 291.896 414.608 294.525 413.826 296.391 cv
414.048 296.643 414.217 296.936 414.312 297.28 cv
414.339 297.384 414.351 297.486 414.357 297.584 cv
415.484 296.598 417.505 295.11 419.572 294.992 cv
422.679 294.814 428.896 301.831 422.412 308.138 cv
421.939 308.596 421.524 309.014 421.151 309.401 cv
422.563 308.457 423.802 307.282 424.656 305.831 cv
cp
.325109 .0402533 1 3.0518e-05 cmyk
f
367.478 237.458 mo
364.912 236.231 li
363.653 237.187 362.841 238.694 362.841 240.392 cv
362.841 243.084 364.884 245.3 367.51 245.59 cv
367.344 244.882 367.228 243.295 367.228 241.449 cv
367.228 239.725 367.33 238.225 367.478 237.458 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
373.346 240.263 mo
367.97 237.693 li
368.097 238.509 368.178 239.887 368.178 241.449 cv
368.178 243.319 368.06 244.924 367.891 245.618 cv
367.959 245.621 368.026 245.623 368.095 245.623 cv
370.997 245.623 373.348 243.281 373.348 240.392 cv
373.348 240.35 373.346 240.306 373.346 240.263 cv
cp
f
381.082 237.458 mo
383.717 236.231 li
385.009 237.187 385.844 238.694 385.844 240.392 cv
385.844 243.084 383.746 245.3 381.048 245.59 cv
381.219 244.882 381.338 243.295 381.338 241.449 cv
381.338 239.725 381.233 238.225 381.082 237.458 cv
cp
f
375.055 240.263 mo
380.576 237.693 li
380.447 238.509 380.362 239.887 380.362 241.449 cv
380.362 243.319 380.483 244.924 380.658 245.618 cv
380.588 245.621 380.518 245.623 380.449 245.623 cv
377.468 245.623 375.053 243.281 375.053 240.392 cv
375.053 240.35 375.055 240.306 375.055 240.263 cv
cp
f
367.536 245.446 mo
367.693 244.637 367.792 243.116 367.792 241.449 cv
367.792 240.116 367.729 238.86 367.619 237.996 cv
372.758 240.376 li
372.758 240.392 li
372.758 243.174 370.418 245.437 367.536 245.446 cv
cp
367.11 245.604 mo
367.114 245.604 367.12 245.604 367.125 245.605 cv
367.116 245.635 li
367.11 245.604 li
cp
362.283 240.392 mo
362.283 238.84 363.001 237.405 364.258 236.439 cv
366.678 237.56 li
366.532 238.394 366.442 239.861 366.442 241.449 cv
366.442 243.067 366.537 244.558 366.685 245.381 cv
364.158 244.991 362.283 242.888 362.283 240.392 cv
cp
373.119 240.15 mo
366.902 237.261 li
366.902 237.27 li
364.214 236.024 li
364.124 236.09 li
362.72 237.124 361.915 238.691 361.915 240.392 cv
361.915 243.152 364.058 245.462 366.896 245.766 cv
367.079 245.787 li
367.079 245.788 li
367.101 245.789 li
367.155 245.794 li
367.153 245.791 li
367.305 245.796 li
367.376 245.798 367.449 245.801 367.521 245.801 cv
370.613 245.801 373.127 243.375 373.127 240.392 cv
373.127 240.357 373.125 240.323 373.123 240.258 cv
373.119 240.15 li
cp
.502922 .201114 1 .0197147 cmyk
f
381.127 245.381 mo
381.28 244.559 381.376 243.067 381.376 241.449 cv
381.376 239.861 381.285 238.394 381.136 237.56 cv
383.621 236.439 li
384.911 237.405 385.649 238.84 385.649 240.392 cv
385.649 242.888 383.723 244.991 381.127 245.381 cv
cp
380.677 245.605 mo
380.683 245.604 380.687 245.604 380.692 245.604 cv
380.685 245.634 li
380.677 245.605 li
cp
374.89 240.392 mo
374.89 240.376 li
380.167 237.996 li
380.057 238.86 379.991 240.116 379.991 241.449 cv
379.991 243.116 380.093 244.637 380.253 245.446 cv
377.295 245.437 374.89 243.174 374.89 240.392 cv
cp
383.759 236.09 mo
383.666 236.024 li
380.05 237.65 li
380.053 237.653 li
374.519 240.15 li
374.512 240.392 li
374.512 243.375 377.095 245.801 380.27 245.801 cv
380.343 245.801 380.417 245.798 380.492 245.796 cv
380.646 245.791 li
380.646 245.794 li
380.7 245.789 li
380.724 245.788 li
380.724 245.787 li
380.91 245.766 li
383.827 245.462 386.028 243.152 386.028 240.392 cv
386.028 238.691 385.2 237.124 383.759 236.09 cv
cp
f
380.451 271.407 mo
380.451 271.407 384.858 271.848 386.695 271.627 cv
386.695 271.627 383.682 273.317 380.451 271.407 cv
cp
3.0518e-05 .423285 1 3.0518e-05 cmyk
f
378.32 278.166 mo
378.32 278.166 382.14 278.607 383.536 278.534 cv
383.536 278.534 380.649 279.195 378.32 278.166 cv
cp
f
375.161 284.777 mo
380.451 285.219 li
380.451 285.219 377.879 285.952 375.161 284.777 cv
cp
f
370.827 291.978 mo
370.827 291.978 378.32 292.417 378.761 292.344 cv
378.761 292.344 375.162 293.227 370.827 291.978 cv
cp
f
368.403 301.234 mo
368.403 301.234 375.234 301.969 378.32 301.382 cv
378.32 301.382 371.194 302.483 368.403 301.234 cv
cp
f
375.123 257.245 mo
375.123 257.245 376.553 255.407 377.659 254.845 cv
377.659 254.845 375.329 255.559 375.123 257.245 cv
cp
.502922 .201114 1 .0197147 cmyk
f
369.205 257.102 mo
369.205 257.102 368.164 255.018 367.192 254.25 cv
367.192 254.25 369.336 255.408 369.205 257.102 cv
cp
f
692.619 171.275 mo
694.104 168.968 699.475 168.832 699.475 168.832 cv
691.425 164.807 681.294 172.841 680.514 173.475 cv
666.685 173.384 673.311 187.138 676.137 196.357 cv
676.995 199.159 677.091 203.657 675.766 206.433 cv
673.521 211.133 668.578 209.877 664.326 208.32 cv
658.521 206.192 652.823 202.055 646.415 204.398 cv
643.639 205.413 644.837 209.88 647.644 208.854 cv
653.792 206.605 660.345 212.258 666.189 213.742 cv
672.131 215.25 677.779 211.375 679.514 205.591 cv
680.874 201.063 678.529 195.82 677.184 191.558 cv
676.244 188.587 675.288 185.561 675.111 182.433 cv
674.873 178.24 678.273 177.932 681.688 178.129 cv
682.301 178.165 682.78 177.99 683.14 177.698 cv
683.14 177.708 683.145 177.714 683.145 177.723 cv
683.145 179.266 689.599 179.078 694.829 179.407 cv
704.261 180.001 708.251 172.677 708.251 172.677 cv
697.021 166.375 692.934 171.835 692.619 171.275 cv
cp
.37937 .788144 .696986 .407721 cmyk
f
614.094 184.314 mo
578.908 183.496 566.588 195.651 553.632 212.928 cv
549.313 216.707 523.399 172.438 537.975 111.435 cv
548.775 66.2295 557.21 58.2949 555.367 44.5659 cv
561.088 46.8198 571.563 47.8359 573.605 46.6523 cv
577.379 44.4653 579.421 38.436 583.514 35.2109 cv
584.35 34.5508 582.172 33.585 581.416 34.0225 cv
580.661 34.4595 577.739 35.502 572.45 33.5146 cv
567.163 31.5293 558.591 37.0259 557.47 37.5933 cv
556.876 37.8945 555.207 38.5078 553.773 39.0166 cv
553.002 37.3838 551.956 35.8857 550.624 34.5078 cv
552.799 32.0029 555.31 29.1885 557.001 27.5303 cv
558.406 28.2261 560.115 27.9795 561.16 26.7954 cv
562.422 25.3672 562.23 23.1382 560.736 21.8174 cv
559.237 20.4961 557.004 20.582 555.743 22.0107 cv
554.938 22.9204 554.73 24.1519 555.063 25.2686 cv
553.827 26.4238 550.665 29.3125 547.455 31.8423 cv
544.806 30.0098 541.418 28.4429 537.193 27.103 cv
538.163 24.0464 539.283 20.6782 540.134 18.5801 cv
541.704 18.6577 543.174 17.752 543.66 16.2505 cv
544.249 14.4375 543.186 12.4692 541.288 11.8525 cv
539.387 11.2358 537.373 12.2061 536.785 14.0171 cv
536.411 15.1704 536.707 16.3843 537.461 17.2754 cv
536.802 18.7856 535.128 22.5234 533.252 26.0376 cv
531.684 25.6982 530.078 25.4395 528.436 25.2773 cv
527.722 24.4492 526.165 22.6323 525.779 22.0381 cv
525.278 21.2607 521.847 14.562 517.748 13.9199 cv
513.65 13.2793 512.174 11.5342 511.854 10.9751 cv
511.536 10.415 509.794 10.2471 510.083 10.9814 cv
511.499 14.5698 510.576 19.2319 512.173 22.0298 cv
512.65 22.8662 515.018 24.2056 517.79 25.3428 cv
488.311 28.3315 444.61 62.7007 467.189 81.4692 cv
499.151 108.042 512.972 73.8164 519.081 67.707 cv
524.479 62.3081 531.344 66.5771 530.417 71.4854 cv
529.491 76.3945 510.982 171.359 515.302 232.903 cv
517.065 258.047 539.737 298.225 544.025 313.341 cv
551.441 313.341 li
555.04 287.084 569.541 256.656 603.567 256.656 cv
637.78 256.656 654.739 287.784 658.317 313.164 cv
665.215 313.164 li
665.215 313.164 683.737 185.934 614.094 184.314 cv
cp
3.0518e-05 .317967 .991211 3.0518e-05 cmyk
f
524.095 36.9214 mo
521.169 36.3271 518.167 38.3647 516.528 41.7246 cv
518.005 39.6543 520.132 38.5054 522.207 38.9277 cv
525.387 39.5742 527.242 43.6655 526.347 48.0649 cv
525.518 52.1465 522.613 55.0576 519.657 54.9399 cv
519.894 55.0254 520.137 55.0967 520.387 55.1479 cv
524.092 55.9004 527.926 52.4307 528.949 47.3984 cv
529.973 42.3662 527.797 37.6753 524.095 36.9214 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
526.347 48.0649 mo
527.242 43.6655 525.387 39.5742 522.207 38.9277 cv
520.132 38.5054 518.005 39.6543 516.528 41.7246 cv
516.09 42.6201 515.749 43.6108 515.533 44.6704 cv
514.58 49.3623 516.404 53.7559 519.657 54.9399 cv
522.613 55.0576 525.518 52.1465 526.347 48.0649 cv
cp
.37937 .788144 .696986 .407721 cmyk
f
507.086 30.3926 mo
504.161 29.7983 501.159 31.8359 499.52 35.1958 cv
500.996 33.1265 503.123 31.978 505.198 32.3994 cv
508.379 33.0469 510.234 37.1372 509.34 41.5366 cv
508.509 45.6177 505.604 48.5293 502.648 48.4121 cv
502.885 48.4976 503.128 48.5679 503.38 48.6191 cv
507.084 49.3726 510.917 45.9023 511.941 40.8706 cv
512.964 35.8374 510.789 31.1465 507.086 30.3926 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
509.34 41.5366 mo
510.234 37.1372 508.379 33.0469 505.198 32.3994 cv
503.123 31.978 500.996 33.1265 499.52 35.1958 cv
499.082 36.0923 498.74 37.082 498.525 38.1421 cv
497.57 42.8345 499.396 47.2271 502.648 48.4121 cv
505.604 48.5293 508.509 45.6177 509.34 41.5366 cv
cp
.37937 .788144 .696986 .407721 cmyk
f
508.218 65.2451 mo
508.323 65.2085 508.424 65.168 508.525 65.1333 cv
509.678 64.7388 508.946 62.6006 507.797 62.9937 cv
506.295 63.5078 504.855 64.1265 503.655 65.2461 cv
502.75 66.0879 503.918 67.9971 504.83 67.146 cv
505.348 66.668 505.898 66.3008 506.478 65.9946 cv
508.276 72.0264 508.299 79.5801 505.543 84.6133 cv
506.771 83.4995 507.917 82.3115 508.985 81.0952 cv
510.128 76.1016 509.745 70.2397 508.218 65.2451 cv
cp
f
479.347 70.9951 mo
479.755 71.4448 479.199 72.6113 478.107 73.6001 cv
477.015 74.5889 475.799 75.0264 475.392 74.5771 cv
474.984 74.1265 475.54 72.96 476.631 71.9717 cv
477.724 70.9819 478.939 70.5449 479.347 70.9951 cv
cp
f
484.685 75.3896 mo
485.093 75.8398 484.536 77.0063 483.445 77.9956 cv
482.352 78.9839 481.137 79.4209 480.729 78.9712 cv
480.322 78.5215 480.876 77.3555 481.969 76.3657 cv
483.062 75.377 484.276 74.9404 484.685 75.3896 cv
cp
f
576.659 210.792 mo
582.128 211.475 li
582.811 218.08 li
579.166 222.408 li
573.698 220.813 li
576.659 210.792 li
cp
f
623.148 206.083 mo
627.543 207.339 li
627.857 212.048 li
623.462 213.932 li
623.148 206.083 li
cp
f
539.639 234.336 mo
543.514 224.605 li
556.687 219.896 li
557.979 224.919 li
560.044 228.686 li
555.137 234.022 li
549.973 238.732 li
542.738 237.791 li
539.639 234.336 li
cp
f
599.962 215.678 mo
610.221 215.429 li
612.473 219.682 li
612.225 224.187 li
605.467 226.939 li
600.461 227.189 li
595.957 225.938 li
595.207 219.183 li
599.962 215.678 li
cp
f
635.405 213.891 mo
644.917 213.659 li
647.006 217.603 li
646.773 221.779 li
640.51 224.333 li
635.869 224.563 li
631.691 223.403 li
630.996 217.14 li
635.405 213.891 li
cp
f
527.839 201.544 mo
522.307 206.353 li
517.815 203.913 li
517.012 200.426 li
518.584 194.016 li
527.207 188.889 li
531.833 192.654 li
527.839 201.544 li
cp
530.201 138.272 mo
530.517 142.981 li
526.121 144.865 li
525.809 137.017 li
530.201 138.272 li
cp
3.0518e-05 .317967 .991211 3.0518e-05 cmyk
f
548.41 58.8462 mo
552.012 64.3887 li
553.983 58.5957 555.247 54.3335 555.532 50.0952 cv
547.783 53.1948 li
548.41 58.8462 li
cp
.37937 .788144 .696986 .407721 cmyk
f
530.829 186.619 mo
534.91 192.897 li
540.344 191.759 li
538.995 187.773 537.74 183.293 536.684 178.375 cv
530.202 180.968 li
530.829 186.619 li
cp
f
544.956 35.6147 mo
546.602 31.2949 li
544.485 29.9512 541.943 28.7554 538.929 27.6934 cv
536.793 29.3359 li
544.956 35.6147 li
cp
f
534.909 83.0195 mo
533.969 73.915 li
530.029 73.4229 li
529.518 76.1226 528.559 81.2759 527.357 88.2466 cv
529.887 88.9839 li
534.909 83.0195 li
cp
f
520.305 162.428 mo
517.336 162.012 li
516.707 168.607 516.158 175.283 515.722 181.941 cv
521.411 174.388 li
520.305 162.428 li
cp
f
579.897 204.041 mo
586.868 195.763 li
586.007 187.428 li
580.301 189.149 575.546 191.525 571.379 194.435 cv
569.442 200.99 li
579.897 204.041 li
cp
f
530.517 142.981 mo
530.201 138.272 li
525.809 137.017 li
526.121 144.865 li
530.517 142.981 li
cp
f
544.643 77.0547 mo
542.445 83.9619 li
543.072 88.6709 li
543.875 89.1592 li
545.536 83.54 547.081 78.792 548.469 74.6875 cv
547.781 74.229 li
544.643 77.0547 li
cp
f
528.004 103.425 mo
528.004 99.0298 li
525.519 99.2788 li
524.863 103.329 524.177 107.721 523.48 112.385 cv
527.062 111.274 li
528.004 103.425 li
cp
f
538.679 88.6709 mo
533.654 89.6118 li
532.398 96.833 li
534.909 106.251 li
539.226 106.251 li
540.411 101.522 541.562 97.23 542.668 93.3281 cv
541.502 90.8677 li
538.679 88.6709 li
cp
f
597.447 203.067 mo
605.724 203.067 li
610.516 189.997 li
607.822 184.31 li
603.019 184.422 598.695 184.813 594.752 185.445 cv
593.96 189.997 li
597.447 203.067 li
cp
f
518.584 194.016 mo
517.012 200.426 li
517.815 203.913 li
522.307 206.353 li
527.839 201.544 li
531.833 192.654 li
527.207 188.889 li
518.584 194.016 li
cp
f
523.293 147.376 mo
520.47 141.412 li
519.638 140.765 li
519.006 145.992 518.404 151.354 517.85 156.794 cv
519.84 156.794 li
523.293 147.376 li
cp
f
622.352 201.178 mo
630.628 201.178 li
634.902 189.52 li
630.356 187.104 625.229 185.449 619.452 184.726 cv
618.865 188.107 li
622.352 201.178 li
cp
f
530.516 127.598 mo
532.398 134.819 li
534.154 134.727 li
534.658 129.013 535.492 123.086 536.732 116.973 cv
532.084 117.866 li
530.516 127.598 li
cp
f
562.851 212.362 mo
564.071 200.567 li
561.262 203.344 558.663 206.395 556.102 209.669 cv
556.886 212.675 li
562.851 212.362 li
cp
f
526.435 123.832 mo
525.493 119.122 li
522.461 119.365 li
521.913 123.201 521.366 127.185 520.829 131.283 cv
526.435 128.226 li
526.435 123.832 li
cp
f
529.887 154.283 mo
530.201 164.016 li
535.127 169.789 li
534.136 163.133 533.546 155.854 533.556 148.057 cv
531.458 148.318 li
529.887 154.283 li
cp
f
521.726 225.233 mo
520.783 221.78 li
517.957 211.106 li
514.632 211.904 li
514.614 219.19 514.813 226.243 515.28 232.903 cv
515.55 236.751 516.172 240.955 517.055 245.363 cv
526.12 233.082 li
521.726 225.233 li
cp
f
658.305 313.164 mo
665.203 313.164 li
665.203 313.164 665.415 310.305 665.632 305.466 cv
656.89 305.466 li
657.467 308.044 657.947 310.621 658.305 313.164 cv
cp
f
551.431 313.341 mo
551.795 310.687 552.252 307.991 552.787 305.288 cv
541.872 305.288 li
542.663 308.415 543.392 311.146 544.016 313.341 cv
551.431 313.341 li
cp
f
148.233 307.501 mo
148.345 311.788 168.737 318.778 193.051 320.592 cv
224.125 322.911 245.65 314.841 240.536 310.213 cv
237.355 307.335 215.406 301.969 191.035 302.604 cv
166.662 303.238 148.122 303.214 148.233 307.501 cv
cp
.084596 .0613107 .0657664 3.0518e-05 cmyk
f
195.087 285.629 mo
198.071 279.564 205.714 279.825 210.176 283.075 cv
207.869 288.089 206.131 291.396 206.921 292.326 cv
208.052 293.66 211.895 296.583 211.381 301.422 cv
211.094 303.389 202.566 303.647 200.155 303.514 cv
198.862 303.441 197.222 303.398 195.793 303.066 cv
194.842 296.832 195.087 285.629 195.087 285.629 cv
cp
.0280156 .457618 1 9.15541e-05 cmyk
f
155.118 240.603 mo
157.309 232.515 169.436 220.986 179.584 218.054 cv
185.452 216.359 191.715 214.545 198.541 214.368 cv
221.937 213.759 241.376 226.722 242.875 243.588 cv
244.298 249.417 244.41 255.282 243.64 260.115 cv
242.654 266.312 242.282 274.069 237.801 283.8 cv
233.319 293.53 229.324 299.947 230.799 301.488 cv
232.274 303.026 239.604 306.415 238.594 311.747 cv
238.077 313.915 227.343 314.706 224.028 314.425 cv
220.145 314.095 214.373 312.81 214.136 309.229 cv
213.899 305.648 213.369 295.158 213.546 289.166 cv
213.619 286.716 212.235 284.578 210.176 283.075 cv
205.714 279.825 198.071 279.564 195.087 285.629 cv
195.087 285.629 194.842 296.832 195.793 303.066 cv
195.939 304.028 196.113 304.877 196.324 305.543 cv
197.889 310.525 196.557 313.672 193.091 315.059 cv
187.99 317.1 178.979 315.633 176.511 314.549 cv
174.044 313.464 174.041 309.424 175.542 306.515 cv
177.045 303.606 177.011 302.313 176.389 300.465 cv
175.988 299.272 172.654 290.767 170.709 281.517 cv
169.603 283.621 168.979 284.246 168.25 285.468 cv
166.25 288.82 167.067 292.142 167.391 294.674 cv
167.663 296.808 169.716 297.886 169.716 297.886 cv
169.716 297.886 172.027 299.54 172.476 303.124 cv
172.981 307.167 168.751 308.704 167.42 309.021 cv
163.502 309.957 157.636 309.702 153.77 308.853 cv
145.376 307.007 151.008 298.023 151.514 294.652 cv
152.175 290.24 151.082 283.904 150.4 279.362 cv
148.883 269.251 153.041 248.274 155.118 240.603 cv
cp
.000213626 .348486 .871305 3.0518e-05 cmyk
f
117.224 271.854 mo
122.046 274.426 126.385 278.01 133.434 277.299 cv
138.233 276.815 142.74 274.325 146.466 270.754 cv
149.848 267.514 150.562 264.146 148.987 261.346 cv
147.411 258.545 144.219 256.906 142.552 254.157 cv
142.063 253.352 141.803 252.41 142.171 251.389 cv
142.209 251.285 142.261 251.207 142.638 250.861 cv
142.035 251.416 143.204 250.548 142.427 251.015 cv
142.566 250.931 143.719 250.401 143.034 250.688 cv
144.4 250.118 145.345 249.968 146.967 249.729 cv
148.717 249.472 150.453 249.506 152.096 249.575 cv
155.253 249.707 158.31 250.44 160.523 251.938 cv
160.724 252.074 160.834 252.186 161.002 252.348 cv
162.659 253.944 169.172 250.791 167.345 249.028 cv
163.2 245.033 155.093 244.509 147.896 245.569 cv
144.491 246.069 140.696 247.322 137.784 249.767 cv
134.984 252.12 134.997 254.729 135.899 256.874 cv
137.613 260.955 148.967 265.734 138.972 271.848 cv
133.24 275.355 127.044 270.474 123.641 268.387 cv
123.362 268.215 123.076 268.049 122.781 267.891 cv
120.691 266.776 114.554 270.428 117.224 271.854 cv
117.224 271.854 li
cp
f
106.493 256.69 mo
108.616 258.849 110.88 260.881 113.229 262.7 cv
109.78 260.375 106.734 257.661 103.327 255.507 cv
100.618 253.792 98.4561 253.037 98.4487 253.05 cv
98.6348 256.142 99.0508 259.519 100.752 262.072 cv
103.655 266.429 105.451 267.888 110.991 269.623 cv
106.758 268.483 105.366 268.478 101.919 265.79 cv
104.885 270.501 109.372 273.038 110.75 273.196 cv
118.295 274.058 120.595 270.271 120.56 270.164 cv
123.793 268.152 124.241 264.561 120.532 261.47 cv
118.252 259.569 112.228 258.819 106.493 256.69 cv
cp
.0215457 .705226 .908934 .000488289 cmyk
f
272.829 240.444 mo
275.276 234.826 277.786 229.229 280.356 223.652 cv
259.121 215.04 237.083 207.939 214.386 202.496 cv
213.671 203.967 212.961 205.44 212.256 206.914 cv
233.597 216.695 253.825 227.948 272.829 240.444 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
267.73 161.847 mo
262.594 157.468 257.352 153.167 252.004 148.95 cv
236.831 165.753 222.865 183.242 210.137 201.26 cv
211.344 202.4 212.544 203.545 213.738 204.695 cv
230.397 189.431 248.418 175.074 267.73 161.847 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
275.506 200.09 mo
273.957 194.01 272.343 187.937 270.665 181.87 cv
250.43 187.352 230.876 194.111 212.1 202.012 cv
212.487 203.589 212.87 205.167 213.251 206.746 cv
233.661 203.147 254.451 200.904 275.506 200.09 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
268.204 216.148 mo
268.303 209.953 268.391 203.758 268.468 197.562 cv
249.754 198.182 231.225 199.926 212.957 202.749 cv
212.918 204.366 212.878 205.984 212.841 207.603 cv
231.504 209.331 249.987 212.191 268.204 216.148 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
218.786 141.53 mo
212.195 141.627 205.607 141.851 199.025 142.2 cv
201.516 162.272 203.846 182.359 206.018 202.458 cv
207.573 202.579 209.127 202.708 210.68 202.844 cv
213.071 182.384 215.772 161.941 218.786 141.53 cv
cp
.0215457 .705226 .908934 .000488289 cmyk
f
241.959 143.359 mo
235.141 141.346 228.262 139.468 221.329 137.729 cv
215.845 158.896 210.921 180.153 206.56 201.473 cv
208.14 202.07 209.713 202.675 211.282 203.287 cv
220.482 183 230.712 162.991 241.959 143.359 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
256.279 155.664 mo
250.47 152.008 244.563 148.453 238.56 145.002 cv
226.355 163.744 215.223 182.929 205.179 202.445 cv
206.534 203.417 207.885 204.392 209.226 205.373 cv
223.581 188.065 239.28 171.43 256.279 155.664 cv
cp
.0215457 .705226 .908934 .000488289 cmyk
f
271.526 174.029 mo
267.536 168.843 263.438 163.707 259.235 158.621 cv
241.328 171.688 224.587 185.72 209.067 200.532 cv
210.028 201.87 210.98 203.209 211.927 204.553 cv
230.695 193.162 250.592 182.918 271.526 174.029 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
279.771 188.939 mo
277.419 183.038 274.983 177.151 272.464 171.284 cv
250.67 179.645 229.908 189.464 210.279 200.531 cv
210.854 202.056 211.428 203.583 211.995 205.111 cv
233.839 198.113 256.479 192.667 279.771 188.939 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
280.398 211.325 mo
280.346 205.121 280.274 198.916 280.182 192.708 cv
257.597 193.455 235.312 195.827 213.463 199.733 cv
213.46 201.355 213.458 202.977 213.457 204.6 cv
235.906 205.217 258.268 207.466 280.398 211.325 cv
cp
.0215457 .705226 .908934 .000488289 cmyk
f
274.351 231.216 mo
276.006 225.568 277.699 219.928 279.426 214.298 cv
257.609 208.635 235.343 204.542 212.771 202.089 cv
212.284 203.569 211.802 205.052 211.323 206.535 cv
233.168 213.274 254.22 221.558 274.351 231.216 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
265.246 249.565 mo
268.46 244.399 271.76 239.271 275.145 234.178 cv
255.735 222.425 235.182 211.951 213.608 202.975 cv
212.649 204.314 211.698 205.657 210.754 207.002 cv
230.291 220.042 248.486 234.315 265.246 249.565 cv
cp
.0215457 .705226 .908934 .000488289 cmyk
f
255.589 250.097 mo
259.158 245.186 262.821 240.322 266.58 235.507 cv
249.893 223.818 232.187 213.075 213.536 203.45 cv
212.471 204.711 211.414 205.974 210.364 207.243 cv
226.604 220.737 241.695 235.081 255.589 250.097 cv
cp
f
248.67 261.169 mo
252.983 257.05 257.402 252.999 261.921 249.021 cv
247.254 233.269 231.261 218.262 214.002 204.209 cv
212.687 205.229 211.377 206.252 210.074 207.282 cv
224.219 224.659 237.096 242.677 248.67 261.169 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
236.526 270.171 mo
241.463 267.084 246.492 264.087 251.612 261.184 cv
240.467 242.085 228.012 223.422 214.273 205.363 cv
212.747 206.057 211.224 206.756 209.709 207.465 cv
219.685 228.083 228.628 249.018 236.526 270.171 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
223.218 274.362 mo
228.54 272.268 233.928 270.28 239.385 268.402 cv
231.792 247.535 223.201 226.872 213.618 206.5 cv
211.978 206.878 210.342 207.266 208.71 207.663 cv
214.105 229.815 218.941 252.056 223.218 274.362 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
212.909 279.946 mo
218.373 278.614 223.881 277.395 229.429 276.29 cv
224.59 255.216 219.113 234.227 213.004 213.354 cv
211.347 213.5 209.688 213.654 208.033 213.817 cv
209.785 235.854 211.413 257.896 212.909 279.946 cv
cp
.0215457 .705226 .908934 .000488289 cmyk
f
194.985 277.019 mo
200.628 277.257 206.256 277.612 211.867 278.083 cv
212.116 255.562 212.479 233.04 212.957 210.517 cv
211.321 210.177 209.678 209.847 208.037 209.525 cv
203.009 231.951 198.658 254.461 194.985 277.019 cv
cp
f
170.514 259.379 mo
175.914 261.785 181.231 264.292 186.465 266.9 cv
193.443 247.491 201.368 228.257 210.232 209.287 cv
208.86 208.357 207.479 207.436 206.093 206.52 cv
193.004 223.63 181.138 241.304 170.514 259.379 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
179.317 267.526 mo
184.914 269.024 190.453 270.638 195.931 272.362 cv
200.203 251.258 205.162 230.222 210.807 209.292 cv
209.292 208.599 207.77 207.912 206.243 207.232 cv
196.146 227.031 187.169 247.168 179.317 267.526 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
161.297 254.223 mo
166.318 257.485 171.243 260.834 176.071 264.27 cv
186.328 245.491 197.854 227.089 210.625 209.229 cv
209.449 208.074 208.265 206.923 207.074 205.777 cv
190.435 221.093 175.159 237.317 161.297 254.223 cv
cp
.0215457 .705226 .908934 .000488289 cmyk
f
148.536 239.042 mo
152.613 243.586 156.595 248.185 160.487 252.836 cv
175.438 237.482 191.723 222.923 209.283 209.378 cv
208.501 207.943 207.716 206.51 206.924 205.079 cv
186.356 215.093 166.861 226.486 148.536 239.042 cv
cp
f
138.761 222.092 mo
141.656 227.514 144.489 232.961 147.261 238.434 cv
164.664 227.584 182.997 217.784 202.182 209.19 cv
201.778 207.619 201.371 206.048 200.962 204.478 cv
179.741 208.917 158.968 214.816 138.761 222.092 cv
cp
f
145.29 186.838 mo
144.666 193.056 144.088 199.271 143.554 205.486 cv
164.995 204.931 186.263 205.875 207.238 208.249 cv
207.744 206.701 208.252 205.154 208.768 203.608 cv
188.339 196.624 167.139 190.982 145.29 186.838 cv
cp
f
137.588 202.231 mo
138.604 208.328 139.621 214.425 140.633 220.522 cv
162.348 214.944 184.449 210.951 206.793 208.587 cv
206.933 206.969 207.073 205.354 207.213 203.735 cv
184.257 201.507 160.995 200.982 137.588 202.231 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
146.851 179.339 mo
145.417 185.238 144.047 191.144 142.739 197.052 cv
164.229 199.029 185.286 202.485 205.788 207.305 cv
206.462 205.884 207.143 204.464 207.829 203.046 cv
188.416 193.874 168.054 185.912 146.851 179.339 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
152.305 162.361 mo
148.992 167.983 145.784 173.637 142.673 179.32 cv
164.512 186.981 185.362 196.115 205.114 206.509 cv
206.19 205.254 207.273 204.003 208.362 202.757 cv
190.964 188.251 172.252 174.714 152.305 162.361 cv
cp
.0177615 .602472 .983154 3.0518e-05 cmyk
f
170.412 149.056 mo
165.217 153.472 160.131 157.967 155.157 162.538 cv
172.878 175.899 189.456 190.192 204.834 205.243 cv
206.242 204.339 207.656 203.44 209.076 202.55 cv
197.272 184.237 184.376 166.367 170.412 149.056 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
190.312 138.825 mo
183.75 141.526 177.267 144.352 170.865 147.299 cv
183.201 165.774 194.563 184.68 204.937 203.929 cv
206.561 203.46 208.189 203.001 209.822 202.551 cv
203.917 181.19 197.413 159.939 190.312 138.825 cv
cp
.0215457 .705226 .908934 .000488289 cmyk
f
208.408 137.697 mo
201.309 138.861 194.248 140.171 187.226 141.625 cv
193.994 162.39 200.213 183.283 205.881 204.272 cv
207.57 204.16 209.261 204.056 210.951 203.963 cv
210.134 181.874 209.286 159.784 208.408 137.697 cv
cp
3.0518e-05 .866026 .984649 .000335698 cmyk
f
175.654 219.154 mo
175.807 218.667 178.938 179.661 208.8 178.84 cv
238.663 178.019 243.93 216.794 244.11 217.274 cv
245.938 222.135 249.58 225.47 249.712 230.249 cv
250.112 244.807 232.764 257.095 210.968 257.693 cv
189.169 258.293 171.174 246.977 170.774 232.418 cv
170.643 227.642 174.096 224.112 175.654 219.154 cv
cp
.00637827 .307744 .785885 3.0518e-05 cmyk
f
196.692 233.86 mo
196.798 237.722 208.189 240.541 210.494 240.478 cv
212.797 240.414 224.016 236.974 223.911 233.111 cv
223.804 229.249 196.586 229.998 196.692 233.86 cv
cp
.477943 .734768 .837125 .681575 cmyk
f
222.048 202.956 mo
225.388 202.865 228.226 207.582 228.388 213.491 cv
228.409 214.23 228.387 214.951 228.325 215.65 cv
228.324 215.617 228.325 215.583 228.324 215.551 cv
228.192 210.776 225.433 206.978 222.162 207.067 cv
218.888 207.157 216.342 211.102 216.474 215.876 cv
216.474 215.909 216.477 215.942 216.478 215.977 cv
216.379 215.281 216.316 214.562 216.297 213.824 cv
216.134 207.914 218.71 203.047 222.048 202.956 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
222.162 207.067 mo
225.433 206.978 228.192 210.776 228.324 215.551 cv
228.325 215.583 228.324 215.617 228.325 215.65 cv
227.896 220.543 225.559 224.279 222.637 224.359 cv
219.714 224.44 217.175 220.837 216.478 215.977 cv
216.477 215.942 216.474 215.909 216.474 215.876 cv
216.342 211.102 218.888 207.157 222.162 207.067 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
197.009 207.758 mo
193.738 207.848 191.19 211.791 191.321 216.568 cv
191.322 216.602 191.326 216.634 191.326 216.667 cv
191.227 215.973 191.165 215.254 191.145 214.516 cv
190.981 208.605 193.556 203.739 196.896 203.646 cv
200.234 203.556 203.073 208.273 203.236 214.183 cv
203.256 214.922 203.234 215.642 203.173 216.341 cv
203.173 216.309 203.173 216.275 203.173 216.242 cv
203.042 211.467 200.282 207.669 197.009 207.758 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
191.326 216.667 mo
191.326 216.634 191.322 216.602 191.321 216.568 cv
191.19 211.791 193.738 207.848 197.009 207.758 cv
200.282 207.669 203.042 211.467 203.173 216.242 cv
203.173 216.275 203.173 216.309 203.173 216.341 cv
202.744 221.234 200.407 224.969 197.484 225.051 cv
194.561 225.131 192.023 221.528 191.326 216.667 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
210.038 240.253 mo
210.388 240.304 210.693 240.335 210.936 240.345 cv
210.94 241.808 210.962 243.334 211.006 244.904 cv
211.14 249.82 211.449 254.298 211.846 257.678 cv
211.784 257.681 211.724 257.684 211.667 257.686 cv
211.138 257.7 210.613 257.705 210.09 257.706 cv
210.299 254.311 210.359 249.833 210.225 244.926 cv
210.181 243.313 210.118 241.749 210.038 240.253 cv
cp
.477943 .734768 .837125 .681575 cmyk
f
182.679 188.971 mo
185.504 189.665 189.519 187.983 191.603 185.235 cv
192.284 184.338 li
194.365 181.589 194.899 177.268 193.465 174.736 cv
188.775 166.438 li
187.342 163.907 183.844 162.376 179.745 164.833 cv
176.083 167.027 170.556 174.32 169.436 178.438 cv
168.177 183.051 170.596 186.003 173.421 186.697 cv
182.679 188.971 li
cp
.00637827 .307744 .785885 3.0518e-05 cmyk
f
183.132 186.793 mo
185.302 187.317 188.399 186.002 190.012 183.871 cv
190.541 183.176 li
192.155 181.046 192.584 177.709 191.493 175.76 cv
187.918 169.375 li
186.826 167.427 184.142 166.261 180.977 168.175 cv
178.151 169.885 173.867 175.537 172.983 178.72 cv
171.998 182.285 173.846 184.554 176.017 185.079 cv
183.132 186.793 li
cp
.00387579 .186313 .507164 3.0518e-05 cmyk
f
235.672 187.656 mo
232.889 188.505 228.787 187.046 226.557 184.417 cv
225.828 183.558 li
223.597 180.928 222.829 176.643 224.12 174.036 cv
228.347 165.493 li
229.639 162.886 233.047 161.167 237.275 163.395 cv
241.05 165.383 246.971 172.363 248.316 176.412 cv
249.826 180.948 247.573 184.029 244.789 184.876 cv
235.672 187.656 li
cp
.00637827 .307744 .785885 3.0518e-05 cmyk
f
235.101 185.506 mo
232.962 186.149 229.798 185.006 228.068 182.968 cv
227.504 182.303 li
225.775 180.264 225.163 176.955 226.145 174.95 cv
229.366 168.379 li
230.348 166.373 232.964 165.061 236.229 166.799 cv
239.145 168.35 243.733 173.761 244.788 176.889 cv
245.969 180.394 244.248 182.761 242.11 183.403 cv
235.101 185.506 li
cp
.00387579 .186313 .507164 3.0518e-05 cmyk
f
354.617 558.089 mo
359.965 573.924 301.229 596.991 265.917 588.994 cv
234.116 581.623 168.402 578.363 187.054 563.001 cv
194.007 560.44 234.59 553.038 276.904 554.795 cv
319.285 556.6 353.105 551.201 354.617 558.089 cv
cp
.084596 .0613107 .0657664 3.0518e-05 cmyk
f
269.21 544.637 mo
269.207 544.638 275.089 552.274 273.25 558.625 cv
273.055 559.29 272.84 559.978 272.616 560.673 cv
268.99 563.428 262.047 563.83 257.648 564.495 cv
251.293 565.464 242.351 562.869 237.164 557.676 cv
232.134 552.632 238.787 544.354 240.624 540.443 cv
248.324 537.972 258.575 538.023 269.21 544.637 cv
cp
.457343 .162905 .16144 3.0518e-05 cmyk
f
194.492 550.532 mo
196.186 546.667 196.02 530.6 195.774 525.206 cv
195.487 518.974 193.073 503.845 194.05 484.703 cv
198.724 397.301 290.052 415.622 307.013 417.229 cv
345.041 421.607 352.324 472 353.168 485.814 cv
356.981 492.942 362.148 499.901 368.542 502.52 cv
376.422 505.753 361.534 504.27 360.265 504.032 cv
357.432 503.521 354.884 502.526 352.617 501.38 cv
351.137 511.025 348.293 523.506 348.172 526.583 cv
348.006 530.998 346.821 538.418 352.958 549.465 cv
359.111 560.507 350.467 564.145 344.958 566.028 cv
339.456 567.913 326.106 568.016 318.472 564.315 cv
311.384 560.882 314.911 553.239 316.622 547.098 cv
318.329 540.962 312.598 533.652 312.601 533.651 cv
310.841 532.579 309.099 531.696 307.376 530.973 cv
306.756 534.083 306.314 536.523 306.259 537.682 cv
306.04 542.257 304.736 549.937 311.002 561.448 cv
317.287 572.96 308.264 576.644 302.516 578.534 cv
296.776 580.438 282.894 580.402 274.993 576.489 cv
268.431 573.24 270.741 566.582 272.616 560.673 cv
272.84 559.978 273.055 559.29 273.25 558.625 cv
275.09 552.274 269.207 544.638 269.21 544.637 cv
258.575 538.023 248.324 537.972 240.624 540.443 cv
234.556 542.396 230.077 545.914 228.314 549.037 cv
224.315 556.121 229.234 558.721 229.872 566.758 cv
230.51 574.796 218.37 575.096 211.75 576.018 cv
205.131 576.952 195.859 574.162 190.526 568.718 cv
185.198 563.279 192.803 554.398 194.492 550.532 cv
cp
.362127 .115175 .128847 3.0518e-05 cmyk
f
296.46 435.273 mo
293.011 450.47 287.481 470.098 279.984 483.695 cv
278.588 486.229 277.336 488.557 276.188 490.745 cv
276.357 490.64 276.496 490.541 276.556 490.467 cv
276.556 490.467 279.303 495.966 281.616 497.58 cv
286.201 500.783 292.061 506.777 278.814 505.651 cv
275.52 505.369 272.567 504.22 270.354 502.794 cv
263.409 519.008 276.239 527.096 282.441 532.915 cv
290.514 540.507 279.06 537.763 277.859 539.588 cv
275.559 543.099 272.221 540.818 270.385 540.515 cv
265.514 539.741 236.596 519.698 230.483 502.789 cv
229.919 501.249 229.123 499.764 228.174 498.318 cv
227.161 500.063 225.842 501.813 224.194 503.389 cv
213.447 513.633 213.77 504.868 215.716 499.067 cv
216.503 496.725 216.952 490.033 217.104 487.461 cv
211.739 483.564 205.486 480.042 199.403 476.806 cv
197.945 476.715 196.545 476.588 195.185 476.438 cv
204.981 430.466 266.747 432.671 296.46 435.273 cv
cp
.457343 .162905 .16144 3.0518e-05 cmyk
f
295.269 503.813 mo
295.268 503.813 297.556 509.272 299.68 510.963 cv
303.894 514.321 309.147 520.442 296.444 518.554 cv
289.513 517.516 284.419 512.581 284.92 509.986 cv
285.425 507.384 294.524 504.615 295.269 503.813 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
238.261 496.347 mo
238.261 496.347 237.183 505.66 236.046 508.41 cv
233.792 513.874 232.904 522.278 243.933 513.078 cv
249.943 508.053 252.203 500.677 250.39 498.683 cv
248.575 496.688 239.378 496.608 238.261 496.347 cv
cp
f
298.576 447.146 mo
291.809 460.249 277.044 470.136 268.409 469.323 cv
248.132 467.431 236.028 410.042 241.786 384.129 cv
247.519 358.064 258.136 343.037 281.979 345.269 cv
299.3 346.89 317.002 355.677 317.31 373.27 cv
317.645 392.352 307.282 430.398 298.576 447.146 cv
cp
.316777 .101595 .122774 3.0518e-05 cmyk
f
165.162 334.429 mo
186.899 336.966 202.873 347.368 208.683 366.314 cv
222.035 356.9 238.643 352.007 256.167 353.647 cv
294.215 357.241 327.967 382.725 323.649 430.441 cv
323.502 432.104 313.799 474.59 299.021 497.513 cv
278.357 529.475 292.044 536.612 299.354 544.399 cv
306.626 552.188 295.766 548.855 294.487 550.539 cv
292.034 553.774 288.969 551.382 287.22 550.977 cv
282.577 549.942 254.816 529.505 250.035 512.876 cv
246.964 502.368 234 493.556 221.772 486.032 cv
196.172 482.803 187.588 470.904 180.708 454.335 cv
169.85 467.371 156.664 473.67 145.805 472.392 cv
120.261 469.395 105.934 404.224 113.605 375.35 cv
121.233 346.296 135.254 330.91 165.162 334.429 cv
cp
.193729 .0502022 .0624399 3.0518e-05 cmyk
f
300.54 469.796 mo
300.51 469.792 282.504 458.197 259.106 469.395 cv
259.123 469.417 287.07 463.657 300.54 469.796 cv
cp
.388281 .131502 .153231 3.0518e-05 cmyk
f
294.625 489.347 mo
294.608 489.346 280.607 481.039 263.158 490.1 cv
263.168 490.11 284.231 485.042 294.625 489.347 cv
cp
f
289.499 506.921 mo
289.484 506.92 277.689 499.426 262.908 508.725 cv
262.917 508.733 280.738 503.144 289.499 506.921 cv
cp
f
239.72 420.395 mo
236.202 421.145 234.204 425.61 235.268 430.374 cv
235.579 431.773 236.126 433.033 236.823 434.107 cv
235.426 432.541 234.329 430.453 233.789 428.04 cv
232.493 422.207 234.909 416.745 239.176 415.833 cv
243.444 414.925 247.963 418.896 249.287 424.725 cv
250.262 429.021 249.211 433.118 246.873 435.35 cv
248.197 433.434 248.706 430.595 248.037 427.642 cv
246.958 422.882 243.237 419.639 239.72 420.395 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
236.823 434.107 mo
236.126 433.033 235.579 431.773 235.268 430.374 cv
234.204 425.61 236.203 421.145 239.72 420.395 cv
243.237 419.639 246.957 422.882 248.037 427.642 cv
248.706 430.595 248.197 433.434 246.873 435.35 cv
246.041 436.141 245.048 436.704 243.922 436.944 cv
241.405 437.484 238.806 436.327 236.823 434.107 cv
cp
.725765 .66601 .651911 .781613 cmyk
f
299.103 415.527 mo
295.557 416.126 293.36 420.501 294.198 425.305 cv
294.445 426.715 294.932 427.995 295.577 429.103 cv
294.254 427.477 293.26 425.346 292.835 422.91 cv
291.809 417.026 294.473 411.676 298.768 410.951 cv
303.068 410.227 307.396 414.397 308.447 420.276 cv
309.219 424.611 307.98 428.662 305.545 430.784 cv
306.954 428.928 307.593 426.115 307.064 423.136 cv
306.207 418.332 302.646 414.931 299.103 415.527 cv
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
295.577 429.103 mo
294.932 427.995 294.445 426.715 294.198 425.305 cv
293.36 420.501 295.557 416.126 299.103 415.527 cv
302.646 414.93 306.207 418.332 307.064 423.136 cv
307.593 426.115 306.954 428.928 305.545 430.784 cv
304.676 431.539 303.661 432.059 302.525 432.25 cv
299.99 432.675 297.452 431.408 295.577 429.103 cv
cp
.725765 .66601 .651911 .781613 cmyk
f
584.621 521.861 mo
583.641 520.495 581.082 519.741 579.434 520.787 cv
569.896 526.819 556.854 530.875 544.812 529.488 cv
540.63 529.006 536.411 527.651 534.071 524.568 cv
532.008 521.852 532.129 518.409 532.96 515.368 cv
533.938 511.789 536.37 508.679 537.304 505.075 cv
538.215 501.556 538.23 497.754 536.918 494.311 cv
533.806 486.144 521.634 483.083 513.224 487.704 cv
509.39 489.81 506.458 493.448 506.219 497.343 cv
506.001 500.88 508.08 504.453 511.993 505.979 cv
515.014 507.159 518.852 507.163 521.673 505.556 cv
525.076 503.615 525.486 500.032 523.256 497.271 cv
520.551 493.924 514.145 497.11 516.716 500.474 cv
515.982 500.546 515.261 500.367 514.686 499.944 cv
511.455 497.573 516.093 493.234 518.9 492.304 cv
522.208 491.209 526.74 492.21 528.473 494.195 cv
530.411 496.413 530.677 499.626 530.224 502.347 cv
529.598 506.077 527.443 508.837 526.074 512.456 cv
524.653 516.216 524.409 520.35 525.654 524.156 cv
528.652 533.325 540.41 536.226 550.514 536.053 cv
562.086 535.855 574.119 532.054 583.333 526.223 cv
584.979 525.182 585.766 523.458 584.621 521.861 cv
cp
.477943 .734768 .837125 .681575 cmyk
f
650.096 561.994 mo
649.68 561.276 647.356 558.361 645.844 556.221 cv
646.172 555.953 646.243 554.866 646.243 554.358 cv
646.243 553.539 644.93 551.438 644.9 551.44 cv
644.427 545.952 643.151 528.943 642.718 526.372 cv
642.193 523.276 634.718 494.343 633.172 490.152 cv
628.914 478.607 611.59 471.635 598.531 470.058 cv
595.11 468.809 591.411 468.126 587.552 468.126 cv
583.65 468.126 579.916 468.825 576.463 470.101 cv
562.877 471.799 549.337 478.607 542.784 490.152 cv
540.579 494.038 533.764 523.276 533.239 526.372 cv
532.805 528.943 531.529 545.952 531.058 551.44 cv
531.027 551.438 529.714 553.539 529.714 554.358 cv
529.714 554.866 529.786 555.953 530.113 556.221 cv
528.6 558.361 526.33 561.276 525.913 561.994 cv
525.475 562.748 522.86 563.46 523.648 566.604 cv
523.896 567.258 523.564 568.728 524.266 568.999 cv
524.447 569.069 526.752 570.315 529.251 569.403 cv
530.731 570.27 533.651 569.648 534.264 569.587 cv
534.622 569.852 537.438 569.937 538.185 569.813 cv
539.14 569.658 541.492 569.69 541.655 569.085 cv
542.636 568.771 541.1 562.031 541.1 560.61 cv
541.1 559.192 540.012 553.14 539.87 551.856 cv
539.453 548.072 540.458 530.153 542.225 525.345 cv
544.701 518.604 552.151 506.879 555.822 500.583 cv
556.068 508.405 559.191 515.507 564.184 520.883 cv
560.276 523.615 546.505 534.799 554.317 552.189 cv
554.317 552.189 546.914 557.351 545.104 560.014 cv
543.294 562.678 542.909 565.591 545.952 565.692 cv
549.029 565.692 560.583 566.788 562.228 565.123 cv
563.874 563.459 562.812 562.274 566.958 561.775 cv
571.127 561.843 567.919 557.392 566.165 556.588 cv
564.907 554.646 565.557 531.553 587.552 531.048 cv
587.926 531.048 588.296 531.034 588.668 531.021 cv
588.678 531.048 li
610.673 531.553 611.321 554.646 610.064 556.588 cv
608.311 557.392 605.103 561.843 609.271 561.775 cv
613.419 562.274 612.354 563.459 614.002 565.123 cv
615.647 566.788 627.2 565.692 630.277 565.692 cv
633.319 565.591 632.934 562.678 631.124 560.014 cv
629.314 557.351 621.911 552.189 621.911 552.189 cv
630.312 533.491 613.762 521.968 611.345 520.411 cv
616.296 514.863 619.304 507.575 619.304 499.588 cv
619.304 499.433 619.3 499.278 619.297 499.124 cv
622.525 504.885 631.05 518.043 633.732 525.345 cv
635.499 530.153 636.503 548.072 636.086 551.856 cv
635.945 553.14 634.857 559.192 634.857 560.61 cv
634.857 562.031 633.319 568.771 634.3 569.085 cv
634.464 569.69 636.817 569.658 637.772 569.813 cv
638.519 569.937 641.334 569.852 641.693 569.587 cv
642.306 569.648 645.225 570.27 646.706 569.403 cv
649.205 570.315 651.51 569.069 651.691 568.999 cv
652.393 568.728 652.062 567.258 652.31 566.604 cv
653.097 563.46 650.532 562.748 650.096 561.994 cv
cp
f
616.808 499.104 mo
616.808 515.478 603.984 528.753 588.167 528.753 cv
572.349 528.753 559.526 515.478 559.526 499.104 cv
559.526 482.728 572.349 469.454 588.167 469.454 cv
603.984 469.454 616.808 482.728 616.808 499.104 cv
cp
.391699 .641047 .934417 .35581 cmyk
f
633.055 465.957 mo
633.055 470.97 631.29 475.103 624.37 475.103 cv
617.451 475.103 615.684 470.97 615.684 465.957 cv
615.684 460.941 617.451 456.81 624.37 456.81 cv
631.29 456.81 633.055 460.941 633.055 465.957 cv
cp
.477943 .734768 .837125 .681575 cmyk
f
545.748 465.957 mo
545.748 470.97 547.515 475.103 554.434 475.103 cv
561.352 475.103 563.12 470.97 563.12 465.957 cv
563.12 460.941 561.352 456.81 554.434 456.81 cv
547.515 456.81 545.748 460.941 545.748 465.957 cv
cp
f
630.927 465.957 mo
630.927 470.318 629.467 473.914 623.754 473.914 cv
618.04 473.914 616.58 470.318 616.58 465.957 cv
616.58 461.594 618.04 457.997 623.754 457.997 cv
629.467 457.997 630.927 461.594 630.927 465.957 cv
cp
.185275 .297612 .481025 3.0518e-05 cmyk
f
547.876 465.957 mo
547.876 470.318 549.337 473.914 555.05 473.914 cv
560.764 473.914 562.224 470.318 562.224 465.957 cv
562.224 461.594 560.764 457.997 555.05 457.997 cv
549.337 457.997 547.876 461.594 547.876 465.957 cv
cp
f
619.607 464.154 mo
619.607 447.319 613.291 433.67 589.739 433.67 cv
566.187 433.67 559.87 447.319 559.87 464.154 cv
559.87 467.64 560.104 470.985 560.689 474.104 cv
559.096 476.749 558.524 479.794 558.524 483.039 cv
558.524 493.159 572.147 501.364 588.954 501.364 cv
605.759 501.364 619.383 493.159 619.383 483.039 cv
619.383 480.672 619.27 476.88 618.486 474.803 cv
619.436 471.072 619.607 468.483 619.607 464.154 cv
cp
f
619.765 464.154 mo
619.765 447.319 613.429 433.67 589.799 433.67 cv
589.796 433.67 589.793 433.67 589.789 433.67 cv
589.787 433.67 589.785 433.67 589.783 433.67 cv
589.769 433.67 589.758 433.67 589.744 433.67 cv
566.162 433.692 559.835 447.331 559.835 464.154 cv
559.835 467.64 560.069 470.985 560.658 474.104 cv
559.937 475.297 559.425 476.573 559.079 477.913 cv
560.084 476.228 560.934 475.309 562.499 474.474 cv
561.95 471.396 561.73 468.097 561.73 464.659 cv
561.73 458.744 562.482 453.229 564.449 448.577 cv
564.406 448.692 564.36 448.806 564.317 448.923 cv
567.092 444.678 572.02 441.852 577.64 441.852 cv
582.475 441.852 586.799 443.943 589.678 447.229 cv
592.558 443.943 596.882 441.852 601.716 441.852 cv
607.66 441.852 612.834 445.012 615.501 449.671 cv
617.143 454.084 617.782 459.201 617.782 464.659 cv
617.782 468.93 617.621 471.482 616.73 475.162 cv
617.929 475.662 618.707 477.215 619.383 478.804 cv
619.258 477.304 619.032 475.84 618.641 474.803 cv
619.594 471.072 619.765 468.483 619.765 464.154 cv
cp
.477943 .734768 .837125 .681575 cmyk
f
581.283 456.646 mo
581.283 458.193 580.305 459.447 579.097 459.447 cv
577.891 459.447 576.911 458.193 576.911 456.646 cv
576.911 455.099 577.891 453.844 579.097 453.844 cv
580.305 453.844 581.283 455.099 581.283 456.646 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
602.857 456.646 mo
602.857 458.193 601.878 459.447 600.672 459.447 cv
599.464 459.447 598.485 458.193 598.485 456.646 cv
598.485 455.099 599.464 453.844 600.672 453.844 cv
601.878 453.844 602.857 455.099 602.857 456.646 cv
cp
f
.75 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
589.346 474.689 mo
589.346 474.689 592.035 485.113 589.346 500.37 cv
@
588.673 470.207 mo
588.673 470.207 587.232 469.023 585.423 469.086 cv
582.173 469.198 581.499 471.552 583.519 471.215 cv
585.407 470.9 585.086 469.197 588.673 470.207 cv
cp
f
590.221 470.207 mo
590.221 470.207 591.663 469.023 593.473 469.086 cv
596.721 469.198 597.395 471.552 595.378 471.215 cv
593.488 470.9 593.808 469.197 590.221 470.207 cv
cp
f
639.399 615.922 mo
637.399 618.597 635.655 622.283 634.165 626.979 cv
633.491 629.131 632.617 632.546 631.541 637.225 cv
629.521 637.776 627.715 638.437 626.124 639.203 cv
625.281 636.396 624.445 633.59 623.611 630.783 cv
622.472 626.769 621.854 623.411 621.761 620.707 cv
622.404 620.575 623.296 620.272 624.427 619.795 cv
625.708 619.262 626.756 618.724 627.569 618.181 cv
627.569 624.336 628.044 629.534 628.987 633.772 cv
629.37 630.076 629.909 626.326 630.601 622.517 cv
631.425 618.008 632.211 615.042 632.959 613.619 cv
634.447 614.396 636.593 615.163 639.399 615.922 cv
cp
.745205 .985168 .00939956 .00228885 cmyk
f
642.751 629.515 mo
642.751 628.286 642.716 627.423 642.643 626.93 cv
642.48 625.731 642.12 625.153 641.563 625.194 cv
640.647 625.268 639.862 626.95 639.207 630.243 cv
640.178 629.726 641.121 629.467 642.035 629.467 cv
642.27 629.467 642.508 629.483 642.751 629.515 cv
cp
645.117 631.36 mo
644.941 631.369 644.625 631.356 644.171 631.324 cv
643.637 631.292 643.226 631.275 642.934 631.275 cv
641.388 631.275 640.053 631.652 638.928 632.404 cv
638.918 632.607 638.914 632.798 638.914 632.975 cv
638.914 634.772 639.375 635.683 640.3 635.707 cv
640.955 635.715 641.392 635.504 641.609 635.076 cv
641.78 634.606 641.95 634.137 642.12 633.667 cv
642.921 634.533 643.762 635.251 644.646 635.815 cv
644.435 636.213 644.221 636.608 644.002 637.006 cv
643.646 637.53 643.188 637.948 642.628 638.255 cv
641.878 638.653 640.898 638.884 639.692 638.948 cv
638.349 639.02 637.24 638.35 636.365 636.933 cv
635.653 635.792 635.305 634.703 635.321 633.667 cv
635.354 631.734 635.778 629.812 636.596 627.9 cv
637.843 624.979 639.699 623.518 642.168 623.518 cv
643.366 623.518 644.261 624.133 644.851 625.363 cv
645.298 626.311 645.52 627.501 645.52 628.933 cv
645.52 630.341 645.386 631.15 645.117 631.36 cv
cp
f
656.554 626.541 mo
655.493 627.197 654.725 627.868 654.247 628.557 cv
654.247 628.273 654.041 627.876 653.628 627.366 cv
653.184 626.832 652.795 626.565 652.463 626.565 cv
651.482 626.565 650.744 627.391 650.241 629.041 cv
649.878 630.232 649.695 631.518 649.695 632.901 cv
649.695 635.217 650.343 636.451 651.637 636.605 cv
652.213 636.669 652.742 636.351 653.228 635.646 cv
653.624 635.079 653.908 634.42 654.077 633.667 cv
654.466 634.744 655.145 635.694 656.117 636.519 cv
655.713 637.409 655.072 638.167 654.199 638.79 cv
653.301 639.43 652.389 639.749 651.468 639.749 cv
649.792 639.749 648.439 638.932 647.412 637.297 cv
646.572 635.961 646.15 634.562 646.15 633.097 cv
646.15 631.203 646.68 629.229 647.741 627.171 cv
648.994 624.737 650.491 623.518 652.233 623.518 cv
653.77 623.518 655.21 624.525 656.554 626.541 cv
cp
f
666.63 635.063 mo
666.492 637.167 665.866 638.874 664.748 640.186 cv
663.85 641.247 662.988 641.776 662.162 641.776 cv
661.296 641.776 660.457 641.364 659.643 640.538 cv
658.829 639.714 658.356 638.773 658.217 637.722 cv
658.152 637.228 658.12 636.576 658.12 635.768 cv
658.12 633.938 658.27 631.48 658.569 628.398 cv
657.89 628.625 657.277 628.819 656.735 628.98 cv
656.76 627.233 li
657.399 626.933 658.075 626.643 658.788 626.358 cv
659.119 623.372 659.419 621.208 659.686 619.864 cv
661.751 619.605 663.449 619.169 664.785 618.554 cv
664.274 619.953 663.655 622.099 662.929 624.986 cv
664.125 624.671 665.174 624.477 666.07 624.404 cv
666.07 625.716 li
665.748 625.829 664.529 626.27 662.418 627.038 cv
661.415 631.304 660.912 634.299 660.912 636.022 cv
660.912 636.41 660.94 636.719 660.997 636.944 cv
661.183 637.688 661.507 638.062 661.97 638.062 cv
662.454 638.062 662.785 637.819 662.964 637.333 cv
663.069 637.042 663.133 636.593 663.158 635.985 cv
663.191 635.298 663.232 634.849 663.279 634.638 cv
663.563 634.581 663.866 634.554 664.19 634.554 cv
665.185 634.554 665.998 634.724 666.63 635.063 cv
cp
f
674.059 630.135 mo
674.059 627.813 673.869 626.649 673.489 626.649 cv
673.456 626.649 673.428 626.654 673.404 626.663 cv
671.607 627.271 670.71 629.604 670.71 633.667 cv
670.71 635.73 670.977 636.764 671.51 636.764 cv
671.575 636.764 671.644 636.743 671.718 636.702 cv
672.445 636.322 673.04 635.311 673.501 633.667 cv
673.874 632.363 674.059 631.187 674.059 630.135 cv
cp
677.301 630.619 mo
677.357 632.813 676.75 634.832 675.48 636.678 cv
674.152 638.604 672.595 639.558 670.808 639.542 cv
669.495 639.526 668.531 638.729 667.917 637.151 cv
667.497 636.099 667.293 635.01 667.311 633.886 cv
667.326 632.268 667.784 630.495 668.682 628.568 cv
669.937 625.882 671.623 624.537 673.745 624.537 cv
675.21 624.537 676.204 625.198 676.73 626.517 cv
677.055 627.343 677.244 628.71 677.301 630.619 cv
cp
f
687.911 627.998 mo
687.831 627.981 687.745 627.974 687.656 627.974 cv
686.709 627.974 685.479 628.483 683.967 629.503 cv
684.298 628.638 684.463 627.913 684.463 627.33 cv
684.463 626.464 684.229 626.032 683.759 626.032 cv
683.023 626.032 682.363 626.82 681.781 628.396 cv
681.854 629.48 682.057 631.206 682.387 633.577 cv
682.672 635.613 682.829 637.308 682.861 638.658 cv
681.972 638.609 680.57 638.952 678.659 639.688 cv
678.758 638.943 678.807 637.985 678.807 636.813 cv
678.807 635.872 678.764 634.335 678.679 632.198 cv
678.595 630.062 678.552 628.495 678.552 627.501 cv
678.552 626.374 678.587 625.425 678.66 624.646 cv
679.385 624.041 680.425 623.673 681.781 623.543 cv
681.733 624.227 681.705 624.897 681.696 625.558 cv
683.29 624.182 684.687 623.493 685.885 623.493 cv
686.014 623.493 686.139 623.506 686.26 623.531 cv
686.777 623.636 687.146 624.223 687.365 625.291 cv
687.551 626.198 687.733 627.1 687.911 627.998 cv
cp
f
699.813 615.771 mo
699.56 619.988 699.306 624.205 699.053 628.42 cv
698.604 632.833 697.602 635.851 696.046 637.471 cv
694.875 638.699 693.194 639.313 691.001 639.313 cv
689.418 639.313 688.151 638.868 687.199 637.978 cv
686.248 637.087 685.128 635.293 683.834 632.594 cv
685.5 631.845 687.15 630.824 688.78 629.531 cv
689.09 630.71 689.394 631.892 689.695 633.072 cv
690.116 634.553 690.561 635.288 691.029 635.278 cv
692.116 635.251 692.931 634.075 693.475 631.751 cv
693.944 629.803 694.177 627.291 694.177 624.219 cv
694.177 621.465 694.004 619.047 693.657 616.967 cv
695.371 616.967 697.424 616.567 699.813 615.771 cv
cp
f
710.521 624.573 mo
710.569 625.497 710.594 626.366 710.594 627.185 cv
710.594 630.916 710.104 633.788 709.125 635.804 cv
708.622 636.831 707.924 637.661 707.031 638.292 cv
706.136 638.924 705.207 639.239 704.245 639.239 cv
703.476 639.239 702.726 638.717 701.999 637.674 cv
700.954 636.176 700.432 633.979 700.432 631.081 cv
700.432 629.309 700.634 627.318 701.039 625.108 cv
701.972 625.108 703.435 624.773 705.434 624.102 cv
705.216 624.757 704.957 626.112 704.656 628.168 cv
704.31 630.506 704.136 632.4 704.136 633.85 cv
704.136 635.419 704.353 636.204 704.791 636.204 cv
706.166 636.204 706.854 634.769 706.854 631.895 cv
706.854 631.166 706.799 630.037 706.685 628.507 cv
706.579 627.116 706.538 626.169 706.563 625.668 cv
707.932 625.537 709.25 625.174 710.521 624.573 cv
cp
f
723.971 625.546 mo
724.003 627.091 723.611 629.628 722.794 633.157 cv
722.356 634.93 721.919 636.706 721.482 638.486 cv
720.382 638.714 719.625 638.884 719.212 638.997 cv
718.371 639.223 717.757 639.478 717.367 639.762 cv
717.473 639.04 717.925 637.136 718.727 634.044 cv
719.43 631.341 719.782 629.471 719.782 628.435 cv
719.782 627.423 719.544 626.916 719.066 626.916 cv
718.646 626.916 718.091 627.318 717.403 628.118 cv
716.788 628.848 716.303 629.592 715.946 630.354 cv
715.963 631.285 715.95 632.546 715.911 634.141 cv
715.87 635.815 715.849 636.94 715.849 637.517 cv
715.065 637.419 713.918 637.791 712.414 638.632 cv
712.382 636.253 712.346 633.87 712.305 631.48 cv
712.239 628.212 712.05 626.209 711.735 625.473 cv
712.478 625.229 713.146 625.007 713.737 624.806 cv
715.153 624.311 716.052 623.946 716.432 623.712 cv
716.488 624.125 716.464 625.339 716.359 627.354 cv
716.869 626.675 717.711 625.942 718.884 625.157 cv
719.961 624.429 720.746 624.021 721.238 623.931 cv
721.369 623.905 721.52 623.895 721.688 623.895 cv
722.247 623.895 722.737 624.013 723.156 624.247 cv
723.692 624.545 723.963 624.979 723.971 625.546 cv
cp
f
731.293 626.408 mo
730.87 626.408 730.285 626.793 729.537 627.561 cv
728.788 628.329 728.356 628.949 728.244 629.418 cv
728.171 629.758 728.135 630.135 728.135 630.547 cv
728.135 631.672 728.309 632.235 728.658 632.235 cv
728.737 632.235 728.827 632.183 728.924 632.076 cv
730.834 629.899 731.789 628.317 731.789 627.33 cv
731.789 626.716 731.623 626.408 731.293 626.408 cv
cp
731.231 640.404 mo
731.467 639.781 731.584 639.26 731.584 638.839 cv
731.584 638.394 731.467 637.965 731.231 637.551 cv
731.117 637.341 730.955 637.208 730.746 637.151 cv
730.592 637.11 730.377 637.103 730.101 637.126 cv
729.705 637.167 729.475 637.188 729.41 637.188 cv
728.675 637.188 727.946 637.722 727.225 638.79 cv
726.538 639.811 726.193 640.757 726.193 641.631 cv
726.193 642.423 726.533 642.819 727.213 642.819 cv
727.326 642.819 727.443 642.809 727.563 642.783 cv
728.471 642.63 729.127 642.457 729.531 642.262 cv
730.348 641.874 730.915 641.254 731.231 640.404 cv
cp
738.6 624.865 mo
737.839 625.311 737.167 625.999 736.585 626.93 cv
736.48 626.598 736.372 626.27 736.263 625.945 cv
736.153 625.622 735.993 625.344 735.783 625.108 cv
735.402 625.198 735.046 625.505 734.715 626.032 cv
735.258 626.525 735.528 627.022 735.528 627.524 cv
735.528 627.598 735.52 627.67 735.506 627.742 cv
735.366 628.552 735.201 629.144 735.007 629.515 cv
734.748 630.025 734.274 630.56 733.587 631.118 cv
733.659 631.515 733.843 631.871 734.132 632.186 cv
734.423 632.502 734.595 632.773 734.642 633 cv
734.682 633.161 734.533 633.396 734.193 633.704 cv
733.772 634.085 733.485 634.536 733.331 635.063 cv
734.035 635.193 734.705 635.607 735.34 636.308 cv
735.976 637.008 736.293 637.677 736.293 638.316 cv
736.293 638.948 736.029 639.636 735.506 640.381 cv
734.979 641.125 734.334 641.728 733.574 642.188 cv
731.673 643.33 729.767 643.901 727.855 643.901 cv
727.522 643.901 727.188 643.885 726.848 643.852 cv
723.968 643.553 722.38 642.521 722.091 640.757 cv
722.057 640.586 722.041 640.417 722.041 640.246 cv
722.041 638.717 723.009 637.483 724.942 636.545 cv
726.981 635.54 729.187 635.039 731.56 635.039 cv
731.647 634.837 731.837 634.513 732.129 634.067 cv
732.339 633.745 732.444 633.501 732.444 633.339 cv
732.444 633.048 732.134 632.765 731.51 632.489 cv
730.521 633.104 729.385 633.411 728.099 633.411 cv
726.949 633.411 726.101 633.214 725.55 632.817 cv
724.934 632.38 724.626 631.647 724.626 630.619 cv
724.626 629.245 725.513 627.855 727.286 626.455 cv
728.913 625.179 730.305 624.537 731.461 624.537 cv
732.271 624.537 733.193 624.905 734.229 625.643 cv
734.691 624.81 735.116 624.206 735.506 623.834 cv
735.924 623.444 736.33 623.251 736.719 623.251 cv
736.792 623.251 736.859 623.259 736.924 623.276 cv
737.499 623.462 738.058 623.992 738.6 624.865 cv
cp
f
745.203 617.509 mo
744.354 619.768 743.273 626.784 741.962 638.559 cv
741.315 638.559 740.424 638.762 739.292 639.166 cv
739.486 630.475 739.582 624.862 739.582 622.328 cv
739.582 620.701 739.557 619.614 739.509 619.063 cv
741.459 618.715 743.358 618.197 745.203 617.509 cv
cp
f
751.346 629.515 mo
751.346 628.286 751.311 627.423 751.236 626.93 cv
751.074 625.731 750.713 625.153 750.157 625.194 cv
749.242 625.268 748.456 626.95 747.802 630.243 cv
748.773 629.726 749.715 629.467 750.631 629.467 cv
750.865 629.467 751.103 629.483 751.346 629.515 cv
cp
753.714 631.36 mo
753.535 631.369 753.22 631.356 752.769 631.324 cv
752.232 631.292 751.82 631.275 751.528 631.275 cv
749.982 631.275 748.647 631.652 747.522 632.404 cv
747.515 632.607 747.509 632.798 747.509 632.975 cv
747.509 634.772 747.971 635.683 748.895 635.707 cv
749.551 635.715 749.986 635.504 750.206 635.076 cv
750.375 634.606 750.545 634.137 750.713 633.667 cv
751.515 634.533 752.356 635.251 753.24 635.815 cv
753.029 636.213 752.815 636.608 752.596 637.006 cv
752.24 637.53 751.782 637.948 751.225 638.255 cv
750.473 638.653 749.494 638.884 748.287 638.948 cv
746.944 639.02 745.836 638.35 744.96 636.933 cv
744.249 635.792 743.899 634.703 743.917 633.667 cv
743.948 631.734 744.375 629.812 745.191 627.9 cv
746.438 624.979 748.295 623.518 750.764 623.518 cv
751.961 623.518 752.855 624.133 753.445 625.363 cv
753.892 626.311 754.115 627.501 754.115 628.933 cv
754.115 630.341 753.979 631.15 753.714 631.36 cv
cp
f
756.51 638.93 mo
756.285 638.93 756.088 638.859 755.923 638.719 cv
755.758 638.578 755.674 638.421 755.674 638.245 cv
755.674 638.066 755.758 637.904 755.923 637.761 cv
756.088 637.617 756.285 637.547 756.51 637.547 cv
756.75 637.547 756.947 637.614 757.104 637.749 cv
757.258 637.884 757.336 638.049 757.336 638.245 cv
757.336 638.425 757.256 638.583 757.094 638.723 cv
756.931 638.86 756.736 638.93 756.51 638.93 cv
cp
f
764.367 633.008 mo
764.063 633.008 763.839 632.847 763.693 632.526 cv
763.626 632.375 763.559 632.284 763.49 632.253 cv
763.439 632.229 763.306 632.218 763.091 632.218 cv
762.665 632.218 762.173 632.549 761.616 633.211 cv
760.836 634.136 760.446 635.002 760.446 635.809 cv
760.446 636.178 760.569 636.492 760.815 636.756 cv
761.062 637.02 761.357 637.151 761.703 637.151 cv
762.037 637.151 762.376 637.063 762.72 636.889 cv
762.843 636.823 763.099 636.658 763.49 636.391 cv
763.754 636.216 763.953 636.128 764.088 636.128 cv
764.292 636.128 764.462 636.202 764.605 636.352 cv
764.735 636.489 764.803 636.647 764.803 636.827 cv
764.803 637.026 764.715 637.2 764.539 637.35 cv
763.61 638.133 762.665 638.524 761.703 638.524 cv
760.941 638.524 760.301 638.247 759.777 637.694 cv
759.278 637.16 759.027 636.531 759.027 635.809 cv
759.027 634.678 759.523 633.523 760.512 632.344 cv
761.354 631.345 762.212 630.845 763.091 630.845 cv
763.238 630.845 763.374 630.851 763.494 630.86 cv
763.614 630.871 763.719 630.886 763.811 630.906 cv
763.959 630.761 764.137 630.688 764.347 630.688 cv
764.691 630.688 764.903 630.886 764.985 631.28 cv
765.042 631.564 765.07 631.895 765.07 632.273 cv
765.07 632.442 765.021 632.597 764.923 632.734 cv
764.795 632.917 764.609 633.008 764.367 633.008 cv
cp
f
769.625 632.102 mo
768.872 632.102 768.227 632.466 767.69 633.195 cv
767.186 633.878 766.936 634.634 766.936 635.464 cv
766.936 636.025 767.152 636.481 767.588 636.831 cv
768.007 637.17 768.535 637.339 769.174 637.339 cv
769.917 637.339 770.536 636.974 771.033 636.244 cv
771.489 635.58 771.717 634.822 771.717 633.976 cv
771.717 633.267 771.558 632.773 771.24 632.497 cv
770.937 632.232 770.398 632.102 769.625 632.102 cv
cp
769.174 638.712 mo
768.174 638.712 767.324 638.425 766.622 637.851 cv
765.871 637.235 765.496 636.44 765.496 635.464 cv
765.496 634.315 765.855 633.27 766.576 632.323 cv
767.383 631.26 768.399 630.729 769.625 630.729 cv
770.804 630.729 771.686 631 772.273 631.539 cv
772.861 632.079 773.154 632.892 773.154 633.976 cv
773.154 635.123 772.824 636.164 772.162 637.097 cv
771.399 638.173 770.402 638.712 769.174 638.712 cv
cp
f
776.153 634.401 mo
776.001 634.948 775.79 635.773 775.516 636.877 cv
775.451 637.26 775.389 637.64 775.329 638.017 cv
775.19 638.497 774.936 638.736 774.563 638.736 cv
774.33 638.736 774.146 638.658 774.011 638.498 cv
773.896 638.364 773.839 638.203 773.839 638.017 cv
773.839 637.471 773.955 636.804 774.188 636.018 cv
774.536 634.839 774.724 634.186 774.751 634.057 cv
774.849 633.536 774.948 633.017 775.05 632.497 cv
775.202 631.781 775.367 631.304 775.544 631.064 cv
775.721 630.826 775.945 630.708 776.214 630.708 cv
776.521 630.708 776.748 630.863 776.894 631.175 cv
777.028 631.469 777.174 632.068 777.328 632.978 cv
777.477 633.858 777.699 634.808 777.994 635.824 cv
778.377 634.821 778.736 633.721 779.066 632.521 cv
779.351 631.356 li
779.532 630.873 779.813 630.633 780.195 630.633 cv
780.564 630.633 780.838 630.912 781.016 631.473 cv
781.091 631.698 781.17 632.121 781.254 632.739 cv
781.45 634.178 781.696 635.411 781.994 636.437 cv
782.295 637.48 782.444 638.048 782.444 638.139 cv
782.444 638.338 782.365 638.506 782.208 638.64 cv
782.058 638.762 781.891 638.823 781.706 638.823 cv
781.336 638.823 781.063 638.559 780.886 638.033 cv
780.602 636.807 li
780.438 636.198 780.264 635.326 780.073 634.188 cv
779.923 634.641 779.671 635.352 779.318 636.321 cv
779.016 637.253 li
778.891 637.621 778.761 637.924 778.625 638.159 cv
778.447 638.474 778.196 638.631 777.876 638.631 cv
777.56 638.631 777.315 638.442 777.147 638.068 cv
776.862 637.125 li
776.6 636.262 776.364 635.353 776.153 634.401 cv
cp
f
626.913 645.189 mo
632.139 645.189 li
632.139 646.477 li
628.434 646.477 li
628.434 648.162 li
631.682 648.162 li
631.682 649.436 li
628.434 649.436 li
628.434 652.508 li
626.913 652.508 li
626.913 645.189 li
cp
f
636.028 646.962 mo
636.047 646.964 636.089 646.966 636.151 646.969 cv
636.151 648.421 li
636.062 648.411 635.981 648.405 635.912 648.401 cv
635.843 648.397 635.787 648.396 635.743 648.396 cv
635.173 648.396 634.79 648.583 634.594 648.953 cv
634.484 649.162 634.431 649.484 634.431 649.917 cv
634.431 652.508 li
633.004 652.508 li
633.004 647.088 li
634.355 647.088 li
634.355 648.033 li
634.574 647.672 634.766 647.426 634.928 647.292 cv
635.194 647.07 635.538 646.959 635.962 646.959 cv
635.988 646.959 636.011 646.96 636.028 646.962 cv
cp
f
638.394 648.422 mo
638.192 648.63 638.067 648.908 638.016 649.261 cv
640.457 649.261 li
640.432 648.886 640.305 648.601 640.079 648.405 cv
639.854 648.21 639.572 648.112 639.238 648.112 cv
638.875 648.112 638.593 648.217 638.394 648.422 cv
cp
640.514 647.198 mo
640.892 647.367 641.203 647.635 641.45 648 cv
641.672 648.321 641.816 648.695 641.881 649.12 cv
641.92 649.369 641.935 649.729 641.929 650.196 cv
637.98 650.196 li
638.003 650.74 638.192 651.12 638.548 651.339 cv
638.764 651.477 639.023 651.543 639.329 651.543 cv
639.652 651.543 639.915 651.461 640.115 651.295 cv
640.226 651.206 640.323 651.082 640.407 650.923 cv
641.854 650.923 li
641.816 651.243 641.64 651.57 641.329 651.901 cv
640.844 652.429 640.164 652.692 639.29 652.692 cv
638.568 652.692 637.932 652.47 637.381 652.025 cv
636.829 651.581 636.554 650.857 636.554 649.855 cv
636.554 648.916 636.803 648.197 637.301 647.695 cv
637.798 647.195 638.444 646.944 639.238 646.944 cv
639.71 646.944 640.135 647.028 640.514 647.198 cv
cp
f
644.058 648.422 mo
643.857 648.63 643.73 648.908 643.679 649.261 cv
646.12 649.261 li
646.095 648.886 645.969 648.601 645.743 648.405 cv
645.518 648.21 645.237 648.112 644.902 648.112 cv
644.538 648.112 644.258 648.217 644.058 648.422 cv
cp
646.177 647.198 mo
646.555 647.367 646.867 647.635 647.113 648 cv
647.335 648.321 647.479 648.695 647.545 649.12 cv
647.583 649.369 647.598 649.729 647.593 650.196 cv
643.645 650.196 li
643.666 650.74 643.855 651.12 644.211 651.339 cv
644.428 651.477 644.687 651.543 644.992 651.543 cv
645.315 651.543 645.578 651.461 645.779 651.295 cv
645.889 651.206 645.987 651.082 646.07 650.923 cv
647.518 650.923 li
647.479 651.243 647.305 651.57 646.992 651.901 cv
646.507 652.429 645.827 652.692 644.953 652.692 cv
644.232 652.692 643.596 652.47 643.045 652.025 cv
642.492 651.581 642.217 650.857 642.217 649.855 cv
642.217 648.916 642.466 648.197 642.964 647.695 cv
643.462 647.195 644.107 646.944 644.902 646.944 cv
645.373 646.944 645.799 647.028 646.177 647.198 cv
cp
f
654.148 646.962 mo
654.167 646.964 654.207 646.966 654.271 646.969 cv
654.271 648.421 li
654.181 648.411 654.101 648.405 654.031 648.401 cv
653.962 648.397 653.905 648.396 653.863 648.396 cv
653.293 648.396 652.91 648.583 652.714 648.953 cv
652.604 649.162 652.55 649.484 652.55 649.917 cv
652.55 652.508 li
651.122 652.508 li
651.122 647.088 li
652.475 647.088 li
652.475 648.033 li
652.694 647.672 652.885 647.426 653.048 647.292 cv
653.313 647.07 653.656 646.959 654.081 646.959 cv
654.108 646.959 654.13 646.96 654.148 646.962 cv
cp
f
658.486 651.063 mo
658.709 650.769 658.82 650.348 658.82 649.806 cv
658.82 649.264 658.709 648.846 658.486 648.553 cv
658.265 648.259 657.946 648.112 657.532 648.112 cv
657.118 648.112 656.798 648.259 656.575 648.553 cv
656.351 648.846 656.239 649.264 656.239 649.806 cv
656.239 650.348 656.351 650.769 656.575 651.063 cv
656.798 651.356 657.118 651.504 657.532 651.504 cv
657.946 651.504 658.265 651.356 658.486 651.063 cv
cp
659.621 651.846 mo
659.163 652.41 658.469 652.692 657.537 652.692 cv
656.604 652.692 655.911 652.41 655.454 651.846 cv
654.996 651.28 654.767 650.602 654.767 649.806 cv
654.767 649.024 654.996 648.347 655.454 647.774 cv
655.911 647.2 656.604 646.914 657.537 646.914 cv
658.469 646.914 659.163 647.2 659.621 647.774 cv
660.077 648.347 660.307 649.024 660.307 649.806 cv
660.307 650.602 660.077 651.28 659.621 651.846 cv
cp
f
661.535 653.548 mo
661.714 653.558 li
661.853 653.563 661.985 653.56 662.111 653.543 cv
662.238 653.525 662.343 653.488 662.43 653.428 cv
662.513 653.371 662.59 653.255 662.66 653.075 cv
662.732 652.896 662.763 652.787 662.754 652.747 cv
660.761 647.088 li
662.337 647.088 li
663.521 651.087 li
664.64 647.088 li
666.146 647.088 li
664.288 652.419 li
663.93 653.446 663.646 654.084 663.437 654.331 cv
663.227 654.578 662.809 654.7 662.182 654.7 cv
662.057 654.7 661.955 654.7 661.878 654.699 cv
661.802 654.697 661.688 654.69 661.535 654.682 cv
661.535 653.548 li
cp
f
669.997 649.873 mo
669.907 649.93 669.815 649.975 669.723 650.01 cv
669.63 650.045 669.503 650.077 669.343 650.107 cv
669.02 650.166 li
668.717 650.219 668.5 650.284 668.367 650.36 cv
668.145 650.489 668.034 650.689 668.034 650.963 cv
668.034 651.203 668.103 651.379 668.238 651.486 cv
668.375 651.595 668.54 651.648 668.735 651.648 cv
669.045 651.648 669.33 651.56 669.591 651.38 cv
669.853 651.2 669.987 650.874 669.997 650.4 cv
669.997 649.873 li
cp
669.13 649.212 mo
669.395 649.18 669.584 649.137 669.697 649.088 cv
669.9 649.001 670.002 648.867 670.002 648.685 cv
670.002 648.463 669.925 648.309 669.77 648.225 cv
669.612 648.141 669.383 648.098 669.081 648.098 cv
668.74 648.098 668.5 648.181 668.359 648.347 cv
668.258 648.47 668.191 648.635 668.158 648.844 cv
666.791 648.844 li
666.821 648.369 666.953 647.979 667.189 647.675 cv
667.566 647.198 668.212 646.959 669.127 646.959 cv
669.724 646.959 670.253 647.077 670.717 647.313 cv
671.178 647.547 671.41 647.992 671.41 648.645 cv
671.41 651.131 li
671.41 651.304 671.413 651.514 671.42 651.758 cv
671.43 651.943 671.458 652.069 671.505 652.136 cv
671.551 652.202 671.619 652.257 671.713 652.299 cv
671.713 652.508 li
670.172 652.508 li
670.129 652.399 670.099 652.296 670.082 652.199 cv
670.064 652.104 670.052 651.994 670.043 651.872 cv
669.845 652.083 669.619 652.265 669.362 652.414 cv
669.055 652.589 668.708 652.678 668.321 652.678 cv
667.829 652.678 667.42 652.537 667.099 652.258 cv
666.777 651.978 666.616 651.581 666.616 651.066 cv
666.616 650.4 666.875 649.917 667.393 649.62 cv
667.677 649.457 668.094 649.341 668.645 649.271 cv
669.13 649.212 li
cp
f
674.096 652.508 mo
672.679 652.508 li
672.679 645.179 li
674.096 645.179 li
674.096 652.508 li
cp
f
674.921 648.148 mo
674.921 647.139 li
675.676 647.139 li
675.676 645.627 li
677.078 645.627 li
677.078 647.139 li
677.959 647.139 li
677.959 648.148 li
677.078 648.148 li
677.078 651.012 li
677.078 651.234 677.106 651.372 677.162 651.427 cv
677.219 651.481 677.392 651.509 677.68 651.509 cv
677.723 651.509 677.769 651.509 677.816 651.506 cv
677.865 651.505 677.913 651.503 677.959 651.499 cv
677.959 652.559 li
677.288 652.583 li
676.617 652.606 676.16 652.49 675.914 652.235 cv
675.756 652.072 675.676 651.822 675.676 651.484 cv
675.676 648.148 li
674.921 648.148 li
cp
f
679.082 653.548 mo
679.261 653.558 li
679.399 653.563 679.532 653.56 679.659 653.543 cv
679.784 653.525 679.89 653.488 679.977 653.428 cv
680.06 653.371 680.137 653.255 680.208 653.075 cv
680.279 652.896 680.311 652.787 680.301 652.747 cv
678.309 647.088 li
679.885 647.088 li
681.069 651.087 li
682.187 647.088 li
683.694 647.088 li
681.836 652.419 li
681.477 653.446 681.193 654.084 680.983 654.331 cv
680.774 654.578 680.356 654.7 679.729 654.7 cv
679.604 654.7 679.502 654.7 679.425 654.699 cv
679.349 654.697 679.233 654.69 679.082 654.682 cv
679.082 653.548 li
cp
f
689.604 645.113 mo
689.677 645.117 689.776 645.124 689.901 645.134 cv
689.901 646.289 li
689.822 646.278 689.688 646.271 689.502 646.266 cv
689.313 646.261 689.185 646.302 689.114 646.39 cv
689.043 646.478 689.007 646.574 689.007 646.682 cv
689.007 646.787 689.007 646.939 689.007 647.139 cv
689.937 647.139 li
689.937 648.138 li
689.007 648.138 li
689.007 652.508 li
687.6 652.508 li
687.6 648.138 li
686.804 648.138 li
686.804 647.139 li
687.58 647.139 li
687.58 646.79 li
687.58 646.21 687.677 645.811 687.873 645.592 cv
688.078 645.268 688.574 645.104 689.359 645.104 cv
689.449 645.104 689.531 645.106 689.604 645.113 cv
cp
f
693.763 646.962 mo
693.78 646.964 693.821 646.966 693.884 646.969 cv
693.884 648.421 li
693.794 648.411 693.715 648.405 693.645 648.401 cv
693.576 648.397 693.52 648.396 693.477 648.396 cv
692.906 648.396 692.523 648.583 692.329 648.953 cv
692.219 649.162 692.165 649.484 692.165 649.917 cv
692.165 652.508 li
690.736 652.508 li
690.736 647.088 li
692.089 647.088 li
692.089 648.033 li
692.308 647.672 692.498 647.426 692.661 647.292 cv
692.928 647.07 693.271 646.959 693.695 646.959 cv
693.722 646.959 693.744 646.96 693.763 646.962 cv
cp
f
696.126 648.422 mo
695.925 648.63 695.801 648.908 695.748 649.261 cv
698.189 649.261 li
698.164 648.886 698.038 648.601 697.813 648.405 cv
697.587 648.21 697.308 648.112 696.972 648.112 cv
696.608 648.112 696.327 648.217 696.126 648.422 cv
cp
698.246 647.198 mo
698.624 647.367 698.937 647.635 699.183 648 cv
699.404 648.321 699.549 648.695 699.614 649.12 cv
699.652 649.369 699.668 649.729 699.662 650.196 cv
695.714 650.196 li
695.736 650.74 695.925 651.12 696.28 651.339 cv
696.497 651.477 696.757 651.543 697.062 651.543 cv
697.385 651.543 697.648 651.461 697.85 651.295 cv
697.959 651.206 698.057 651.082 698.141 650.923 cv
699.587 650.923 li
699.549 651.243 699.373 651.57 699.063 651.901 cv
698.576 652.429 697.896 652.692 697.023 652.692 cv
696.302 652.692 695.664 652.47 695.114 652.025 cv
694.563 651.581 694.287 650.857 694.287 649.855 cv
694.287 648.916 694.535 648.197 695.033 647.695 cv
695.531 647.195 696.178 646.944 696.972 646.944 cv
697.443 646.944 697.869 647.028 698.246 647.198 cv
cp
f
701.79 648.422 mo
701.59 648.63 701.465 648.908 701.412 649.261 cv
703.854 649.261 li
703.828 648.886 703.701 648.601 703.477 648.405 cv
703.25 648.21 702.971 648.112 702.636 648.112 cv
702.272 648.112 701.991 648.217 701.79 648.422 cv
cp
703.91 647.198 mo
704.287 647.367 704.6 647.635 704.847 648 cv
705.067 648.321 705.213 648.695 705.278 649.12 cv
705.316 649.369 705.332 649.729 705.325 650.196 cv
701.377 650.196 li
701.399 650.74 701.588 651.12 701.945 651.339 cv
702.16 651.477 702.421 651.543 702.726 651.543 cv
703.048 651.543 703.312 651.461 703.513 651.295 cv
703.622 651.206 703.72 651.082 703.804 650.923 cv
705.251 650.923 li
705.213 651.243 705.038 651.57 704.726 651.901 cv
704.24 652.429 703.561 652.692 702.687 652.692 cv
701.965 652.692 701.329 652.47 700.778 652.025 cv
700.226 651.581 699.951 650.857 699.951 649.855 cv
699.951 648.916 700.199 648.197 700.697 647.695 cv
701.194 647.195 701.841 646.944 702.635 646.944 cv
703.106 646.944 703.532 647.028 703.91 647.198 cv
cp
f
712.21 647.088 mo
713.732 647.088 li
711.774 652.508 li
710.281 652.508 li
708.336 647.088 li
709.928 647.088 li
711.056 651.087 li
712.21 647.088 li
cp
f
715.946 648.422 mo
715.745 648.63 715.619 648.908 715.568 649.261 cv
718.009 649.261 li
717.983 648.886 717.858 648.601 717.632 648.405 cv
717.406 648.21 717.125 648.112 716.792 648.112 cv
716.428 648.112 716.146 648.217 715.946 648.422 cv
cp
718.066 647.198 mo
718.444 647.367 718.756 647.635 719.003 648 cv
719.225 648.321 719.369 648.695 719.434 649.12 cv
719.473 649.369 719.487 649.729 719.481 650.196 cv
715.534 650.196 li
715.556 650.74 715.745 651.12 716.101 651.339 cv
716.316 651.477 716.576 651.543 716.882 651.543 cv
717.205 651.543 717.466 651.461 717.668 651.295 cv
717.778 651.206 717.876 651.082 717.96 650.923 cv
719.406 650.923 li
719.369 651.243 719.192 651.57 718.881 651.901 cv
718.396 652.429 717.716 652.692 716.842 652.692 cv
716.122 652.692 715.484 652.47 714.934 652.025 cv
714.382 651.581 714.106 650.857 714.106 649.855 cv
714.106 648.916 714.355 648.197 714.853 647.695 cv
715.352 647.195 715.997 646.944 716.792 646.944 cv
717.263 646.944 717.688 647.028 718.066 647.198 cv
cp
f
723.439 649.033 mo
723.413 648.831 723.345 648.648 723.235 648.485 cv
723.075 648.268 722.827 648.157 722.492 648.157 cv
722.014 648.157 721.687 648.395 721.511 648.868 cv
721.417 649.12 721.371 649.454 721.371 649.87 cv
721.371 650.268 721.417 650.586 721.511 650.827 cv
721.68 651.278 721.999 651.504 722.468 651.504 cv
722.799 651.504 723.036 651.414 723.176 651.236 cv
723.314 651.056 723.399 650.825 723.43 650.54 cv
724.877 650.54 li
724.844 650.971 724.688 651.378 724.408 651.762 cv
723.965 652.383 723.305 652.692 722.432 652.692 cv
721.56 652.692 720.917 652.434 720.506 651.917 cv
720.095 651.399 719.89 650.729 719.89 649.905 cv
719.89 648.975 720.116 648.252 720.571 647.735 cv
721.025 647.218 721.653 646.959 722.452 646.959 cv
723.133 646.959 723.689 647.112 724.121 647.417 cv
724.555 647.722 724.812 648.261 724.892 649.033 cv
723.439 649.033 li
cp
f
725.305 648.148 mo
725.305 647.139 li
726.06 647.139 li
726.06 645.627 li
727.463 645.627 li
727.463 647.139 li
728.343 647.139 li
728.343 648.148 li
727.463 648.148 li
727.463 651.012 li
727.463 651.234 727.49 651.372 727.546 651.427 cv
727.603 651.481 727.775 651.509 728.063 651.509 cv
728.106 651.509 728.152 651.509 728.2 651.506 cv
728.249 651.505 728.296 651.503 728.343 651.499 cv
728.343 652.559 li
727.671 652.583 li
727.002 652.606 726.544 652.49 726.298 652.235 cv
726.14 652.072 726.06 651.822 726.06 651.484 cv
726.06 648.148 li
725.305 648.148 li
cp
f
732.639 651.063 mo
732.861 650.769 732.972 650.348 732.972 649.806 cv
732.972 649.264 732.861 648.846 732.639 648.553 cv
732.416 648.259 732.099 648.112 731.685 648.112 cv
731.27 648.112 730.951 648.259 730.727 648.553 cv
730.502 648.846 730.392 649.264 730.392 649.806 cv
730.392 650.348 730.502 650.769 730.727 651.063 cv
730.951 651.356 731.27 651.504 731.685 651.504 cv
732.099 651.504 732.416 651.356 732.639 651.063 cv
cp
733.772 651.846 mo
733.314 652.41 732.62 652.692 731.688 652.692 cv
730.758 652.692 730.063 652.41 729.605 651.846 cv
729.148 651.28 728.919 650.602 728.919 649.806 cv
728.919 649.024 729.148 648.347 729.605 647.774 cv
730.063 647.2 730.758 646.914 731.688 646.914 cv
732.62 646.914 733.314 647.2 733.772 647.774 cv
734.23 648.347 734.459 649.024 734.459 649.806 cv
734.459 650.602 734.23 651.28 733.772 651.846 cv
cp
f
738.482 646.962 mo
738.5 646.964 738.542 646.966 738.605 646.969 cv
738.605 648.421 li
738.516 648.411 738.436 648.405 738.366 648.401 cv
738.297 648.397 738.24 648.396 738.197 648.396 cv
737.627 648.396 737.244 648.583 737.049 648.953 cv
736.939 649.162 736.885 649.484 736.885 649.917 cv
736.885 652.508 li
735.458 652.508 li
735.458 647.088 li
736.811 647.088 li
736.811 648.033 li
737.029 647.672 737.22 647.426 737.381 647.292 cv
737.646 647.07 737.991 646.959 738.417 646.959 cv
738.442 646.959 738.465 646.96 738.482 646.962 cv
cp
f
745.429 650.97 mo
745.656 650.719 745.771 650.32 745.771 649.773 cv
745.771 649.26 745.662 648.868 745.446 648.601 cv
745.229 648.332 744.939 648.197 744.577 648.197 cv
744.082 648.197 743.74 648.431 743.552 648.898 cv
743.453 649.147 743.403 649.454 743.403 649.818 cv
743.403 650.133 743.457 650.413 743.562 650.659 cv
743.752 651.116 744.097 651.345 744.592 651.345 cv
744.922 651.345 745.201 651.22 745.429 650.97 cv
cp
744.946 647.083 mo
745.29 647.226 745.568 647.488 745.78 647.868 cv
745.78 647.088 li
747.162 647.088 li
747.162 652.23 li
747.162 652.93 747.044 653.456 746.81 653.811 cv
746.406 654.421 745.63 654.727 744.482 654.727 cv
743.789 654.727 743.225 654.59 742.787 654.318 cv
742.35 654.047 742.107 653.64 742.062 653.101 cv
743.603 653.101 li
743.643 653.267 743.707 653.385 743.797 653.458 cv
743.948 653.588 744.205 653.652 744.566 653.652 cv
745.076 653.652 745.418 653.481 745.591 653.139 cv
745.703 652.921 745.761 652.552 745.761 652.036 cv
745.761 651.688 li
745.624 651.92 745.479 652.094 745.322 652.21 cv
745.04 652.425 744.675 652.533 744.224 652.533 cv
743.527 652.533 742.972 652.288 742.557 651.799 cv
742.14 651.312 741.932 650.649 741.932 649.814 cv
741.932 649.007 742.132 648.33 742.532 647.782 cv
742.934 647.233 743.501 646.959 744.236 646.959 cv
744.506 646.959 744.744 647 744.946 647.083 cv
cp
f
751.495 646.962 mo
751.514 646.964 751.555 646.966 751.617 646.969 cv
751.617 648.421 li
751.528 648.411 751.447 648.405 751.379 648.401 cv
751.31 648.397 751.253 648.396 751.21 648.396 cv
750.64 648.396 750.257 648.583 750.062 648.953 cv
749.951 649.162 749.896 649.484 749.896 649.917 cv
749.896 652.508 li
748.47 652.508 li
748.47 647.088 li
749.822 647.088 li
749.822 648.033 li
750.042 647.672 750.231 647.426 750.395 647.292 cv
750.66 647.07 751.004 646.959 751.429 646.959 cv
751.455 646.959 751.477 646.96 751.495 646.962 cv
cp
f
755.461 649.873 mo
755.369 649.93 755.277 649.975 755.186 650.01 cv
755.093 650.045 754.967 650.077 754.807 650.107 cv
754.483 650.166 li
754.181 650.219 753.964 650.284 753.832 650.36 cv
753.608 650.489 753.496 650.689 753.496 650.963 cv
753.496 651.203 753.565 651.379 753.701 651.486 cv
753.837 651.595 754.003 651.648 754.199 651.648 cv
754.508 651.648 754.794 651.56 755.055 651.38 cv
755.315 651.2 755.451 650.874 755.461 650.4 cv
755.461 649.873 li
cp
754.595 649.212 mo
754.858 649.18 755.047 649.137 755.16 649.088 cv
755.364 649.001 755.466 648.867 755.466 648.685 cv
755.466 648.463 755.388 648.309 755.231 648.225 cv
755.075 648.141 754.846 648.098 754.543 648.098 cv
754.204 648.098 753.964 648.181 753.823 648.347 cv
753.722 648.47 753.655 648.635 753.621 648.844 cv
752.255 648.844 li
752.283 648.369 752.417 647.979 752.653 647.675 cv
753.029 647.198 753.676 646.959 754.591 646.959 cv
755.187 646.959 755.717 647.077 756.179 647.313 cv
756.642 647.547 756.874 647.992 756.874 648.645 cv
756.874 651.131 li
756.874 651.304 756.876 651.514 756.883 651.758 cv
756.893 651.943 756.921 652.069 756.967 652.136 cv
757.014 652.202 757.083 652.257 757.177 652.299 cv
757.177 652.508 li
755.635 652.508 li
755.591 652.399 755.562 652.296 755.546 652.199 cv
755.529 652.104 755.516 651.994 755.506 651.872 cv
755.31 652.083 755.082 652.265 754.826 652.414 cv
754.519 652.589 754.172 652.678 753.785 652.678 cv
753.292 652.678 752.885 652.537 752.563 652.258 cv
752.24 651.978 752.08 651.581 752.08 651.066 cv
752.08 650.4 752.338 649.917 752.855 649.62 cv
753.14 649.457 753.558 649.341 754.109 649.271 cv
754.595 649.212 li
cp
f
761.581 648.69 mo
761.39 648.368 761.077 648.208 760.645 648.208 cv
760.126 648.208 759.769 648.451 759.574 648.938 cv
759.474 649.197 759.424 649.525 759.424 649.923 cv
759.424 650.553 759.592 650.994 759.932 651.25 cv
760.132 651.399 760.37 651.474 760.645 651.474 cv
761.043 651.474 761.346 651.321 761.557 651.017 cv
761.766 650.712 761.87 650.306 761.87 649.798 cv
761.87 649.381 761.774 649.012 761.581 648.69 cv
cp
762.668 647.671 mo
763.11 648.138 763.332 648.823 763.332 649.729 cv
763.332 650.684 763.117 651.412 762.685 651.912 cv
762.252 652.412 761.695 652.662 761.016 652.662 cv
760.581 652.662 760.221 652.555 759.934 652.34 cv
759.776 652.22 759.624 652.046 759.473 651.816 cv
759.473 654.642 li
758.07 654.642 li
758.07 647.088 li
759.429 647.088 li
759.429 647.889 li
759.583 647.654 759.746 647.468 759.92 647.332 cv
760.235 647.09 760.612 646.969 761.05 646.969 cv
761.687 646.969 762.227 647.202 762.668 647.671 cv
cp
f
768.227 647.118 mo
768.499 647.234 768.723 647.412 768.897 647.651 cv
769.047 647.854 769.137 648.062 769.17 648.276 cv
769.203 648.49 769.219 648.839 769.219 649.323 cv
769.219 652.508 li
767.773 652.508 li
767.773 649.209 li
767.773 648.915 767.723 648.681 767.625 648.502 cv
767.497 648.249 767.252 648.123 766.894 648.123 cv
766.521 648.123 766.24 648.249 766.047 648.498 cv
765.854 648.749 765.759 649.107 765.759 649.571 cv
765.759 652.508 li
764.342 652.508 li
764.342 645.204 li
765.759 645.204 li
765.759 647.789 li
765.963 647.475 766.2 647.255 766.47 647.131 cv
766.737 647.006 767.021 646.944 767.318 646.944 cv
767.651 646.944 767.954 647.003 768.227 647.118 cv
cp
f
770.572 647.088 mo
772.009 647.088 li
772.009 652.508 li
770.572 652.508 li
770.572 647.088 li
cp
772.009 646.442 mo
770.572 646.442 li
770.572 645.134 li
772.009 645.134 li
772.009 646.442 li
cp
f
776.623 649.033 mo
776.597 648.831 776.528 648.648 776.418 648.485 cv
776.259 648.268 776.011 648.157 775.676 648.157 cv
775.197 648.157 774.87 648.395 774.694 648.868 cv
774.602 649.12 774.554 649.454 774.554 649.87 cv
774.554 650.268 774.602 650.586 774.694 650.827 cv
774.863 651.278 775.183 651.504 775.651 651.504 cv
775.982 651.504 776.22 651.414 776.359 651.236 cv
776.498 651.056 776.583 650.825 776.612 650.54 cv
778.06 650.54 li
778.026 650.971 777.87 651.378 777.592 651.762 cv
777.147 652.383 776.488 652.692 775.615 652.692 cv
774.743 652.692 774.101 652.434 773.69 651.917 cv
773.278 651.399 773.072 650.729 773.072 649.905 cv
773.072 648.975 773.301 648.252 773.755 647.735 cv
774.209 647.218 774.836 646.959 775.636 646.959 cv
776.316 646.959 776.873 647.112 777.306 647.417 cv
777.739 647.722 777.994 648.261 778.074 649.033 cv
776.623 649.033 li
cp
f
780.143 650.778 mo
780.174 651.03 780.238 651.209 780.338 651.315 cv
780.515 651.504 780.841 651.599 781.317 651.599 cv
781.598 651.599 781.819 651.557 781.984 651.474 cv
782.149 651.392 782.231 651.268 782.231 651.101 cv
782.231 650.943 782.165 650.821 782.032 650.738 cv
781.899 650.655 781.405 650.513 780.551 650.311 cv
779.935 650.158 779.5 649.967 779.249 649.739 cv
778.996 649.513 778.87 649.188 778.87 648.765 cv
778.87 648.264 779.067 647.833 779.461 647.474 cv
779.855 647.114 780.408 646.935 781.123 646.935 cv
781.8 646.935 782.354 647.069 782.778 647.339 cv
783.207 647.61 783.452 648.076 783.514 648.739 cv
782.098 648.739 li
782.078 648.557 782.025 648.413 781.943 648.308 cv
781.786 648.114 781.521 648.019 781.145 648.019 cv
780.837 648.019 780.615 648.066 780.483 648.162 cv
780.354 648.259 780.288 648.372 780.288 648.501 cv
780.288 648.663 780.357 648.78 780.497 648.854 cv
780.637 648.931 781.13 649.062 781.977 649.246 cv
782.542 649.379 782.964 649.58 783.246 649.848 cv
783.524 650.12 783.664 650.46 783.664 650.867 cv
783.664 651.404 783.464 651.843 783.063 652.183 cv
782.663 652.522 782.044 652.692 781.207 652.692 cv
780.354 652.692 779.724 652.513 779.316 652.152 cv
778.909 651.794 778.707 651.336 778.707 650.778 cv
780.143 650.778 li
cp
f
686.741 650.139 mo
683.608 650.139 li
683.608 649.14 li
686.741 649.14 li
686.741 650.139 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 9.0%%AI8_CreatorVersion: 14.0.0%%For: (Javier  Cortes) ()%%Title: (Chibi_Jungle_Animals_001.eps)%%CreationDate: 11/30/10 1:34 AM%%Canvassize: 16383%AI9_DataStream%Gb",Kl!do:[I+^l*BJs80aB8uR]Dg-7KO0Q@&ASgd[&Uq5Z:i!3Lm"^lWZaDh(;bfRI9n0F9$H+m2B'.q5\r4hY-d<g!T?Ce*Zc,%H##=^*i(Wn__B9OY]9-gDi[+e>i)Ck2iH"-;Jl1+nG76HG4k+jr,?Y$\T<4?^:\i/[e%uGD"dDs.K)#orGcgtErPgdp<!7%LWLd%%XtMD&NYb48ch[6sSpkHu6*4BEY%Cm.kDpG:SLf4pSG;Q]5"mcAl"B5JNNpV2++O%$Edi+(/^_n^qTmpu&*Li/)@*[5WEQg>g4q%'%f9]R^q:5:=Hb6uJ`Vf"9YrpJr[s*+Bq2FJ$l.:7)YF!St=AN\*=prj4GPfE.MuE8/l25:^2RtB[fY=qlZ.!aQD^k\Tm-s*4B^mN'%k2M2pG)7<`GPq31`RP^2:J9rNpRRBFpq,e1clR(j1jDOjc)'M?plE7<>2@F]\/]/U^\M^9oU&_?q#'L5f;TWk3Z62;`Pl*)W?:DW%552=b]8J'.l]Wh:k%q+fIpTfPj(8#H!X4qg:aT(\r#,,Ohd#OPp3GTcs0:;&^[S_)Kj!JS55fR>?$Q0.&$qYe=0M;QF5"Bi6"4gu%?^tGmbc_dUmr91&l06d_hikg_-LDZ%U8;p[<`5Nc>336`9ItWT?MsaR3XCM]B348_cX[nX4[,*Ihca>L3rWL?hgV.nqUtP`@en!r%nJ/0l7o>Jj5!D27SFFP`Zhl+km.>Bgpto!.oD.tAiX1J,j;Mg[]uX!a^HOfJs0Pm7C2<4K:G*DqT:^VTUO>sp%,)8tNkWo?nYOHW%k4W;P\_&6UVCgeQ4Di=Yg5Smb*^<dK5<V2W9*\J\`#^"[1g9gYb.i2VRs"9tZ[ZM91fl_bB0'G`^YAR/Ckjq3j%%VZhV$<%q'hW$%cG[D5U>n$Rs-*&Pnlu-`J"aod04a_QrO^sZ;f159C3/G0r(I"Ve!"SDl%A*nou2]!:X1oeo.chb^;Q$qSUL)(qo'_@pjF_2s*Ad8%I'qUs+()[0B1"MXj^KQ$d_l"5rqk]Ql.cm"(a#*m]ea,ek80=oHcc3PB_Ku(H1BmkM8,S*QSU8_/KYu48AEA_NQ/EIZBo6HIeAZ<%^uF_EZF;8i=5/qE(Us/&O;[V*H[1&8D"d]#q+5LJor$ZX(3:qis53&#;irT&SB1iglq&_/pI%.%s'.3VqtWD%O8kPNhjL+,*'[`S%0:j1+hU]Lp^\=>\\"?#i5Fju%5<6G?*U.99o'(OIFaSG>GkBJHe`-5(f!$&gNmE`A&=MdAUHLiTJGqHRoPAu]i&7d1m;pNB]ts=]%0ub[.Hgor'Seu+pB9Sr^s*BS_f)1?Viq_rAB,JM*g3;QEI^X[3n]f(X3RIeX]B^"'`7_im[[31JAp=.r+$WCDQUmFjP9^[QqZi_J%^APP?rM.&G?e`2@'5TCA?f-LrZN]r1.A7J_0,`C:SW,r7k6=/(+V'>mGpl$#)L]&Km9sY[*VS=ISF\ACk`X,l\E]O;EnbJe5.b^Y%m<d7rIIM6o-_GhWc#<Dp^Z0P:T&1&8Tb'O!.HF;l%4uCOSZj(,_L<K!M]p*-@ZDbc\.uL5:>ChUEM#_\2c<1$V3FnM/T%?O[%$d[%OBqQ?jHrju\`T3enoim3]6Q'u(RdU/`KsD18L9^$C2%7[CmU]u]2A:EIN>GhSj&iGQSm;u9<GVLB<,q%S[r&"l@.Qe<H*pEdmAtP%qJWnZ<,/OP[;Gd,[%32bg\0j;htFNmagTt?c$_+hLZYm26f+QRD,L%3eFlr'&,s&_T,mdpdV"V*qcisP_o=U:qmOt7k>1#3jA4c2%k"jr3j\P37Xo@;ZD/A\)B3.<EqUq4]`d8pZ#VgiL5S0%a_FS.:PJlmna(-n;`]@gMDbOgHeDW\88fmX@!qAl,,EZfEP0$2cG>O17%PFY[Q'$GIP!PtR[-CL!01<='[ksd'kBnr[#Q$/+4P^\F9N.;l]:f%3;'&&`"OAO=q8%2>nl."4M/sN)dTTl613_d-k>mY)%ZmF3J%oJNJLXU1Q_B7gM.qUo0Q]K@WZ.k0h-r\3FF.m.9N_Bc"3!&Ad_+UAt@63ttWgd299#%#DZPn61b,9[=1(a6PB'T<lfPo);3EnF_B%#N7%EK38PK8mNTr]bQ-<SL?t5a@[5K7'XAOWFBBq6RRe]KTRVB0p9V2:c9ZMZ:ZiD1TR>@0DaRUYX(5DGl7dD`%LCAcn!mgitgdc%0(k$jQ)B1p_9[dj6,Gt(+C>_&],P0SV&TaVj9i&tcQ"GJO]L0aOQSe>Amg2@L^nWcrZ"dA,+<:8BmW6XJLISK[R$.b8+[IN?4'QO%:>;PKHeS6gqm]A@Gb=bL+RW<eGdbHWGD7-Q'8a.*nWtg?"ZnfX4+"odh/:l))g!tF0rmbP@!d*1GB\7LGCOP`o6W=d4d*9J$N'_t%Hi(GP4!ZMgL]T*SIGRcsEBigeICDH-mI0H0mI'A'@+c_RXi)VD4WLF5^ZY<Fh0j$]Q^Zg/DVB!aTKY1)*,,\M"u>Q3n*JH+G%c,)%1sAREbr^c:*GFq[B-:'Z8!DW".;dJN.SVSF,U6%6dtEJcP+R(Xq]/jm/R"!'Un6f^6ol0V%a%$AB9*PM%\9OM>.7,)QY?mRXe_kY%37,e&UGKJKB6B,-D;Cl8cEu_r<o2=$*pB]od@&mcZbJr@;JC&)m80U,o!DU'EK*-8\K0D=/_\09H^SS<,OMP0h&SE%54P:Og?rh3%oL<%lL]A'M5p3o'dLc/0O6mR2C_N3n,*kP@PDIfo&q2GC@@rqF/ht7\3peNK%H<M<Lb07]Gp9r<mh6<$&h.]38N%d:6@:['R0Fj9%k6JIlS9UAkGah77&P3c_m6i3@Lt%ujj$XhX-\,6eNWUj>*KEeuKt=/A6]1=_;KtV;Y=RUe.GQ&"M&H;ed"+0ND]7S!o==n%-MV6G%fDK/oK!1M[]<=ot=!m\m'E"+%rlP@nAV.ZP_-`VgY>"Feb4[?tlP1k],)'*on5#P3OM:`4ZhQb!m_?+8roi$_Gp/$?ZS.B3Sh7*)%g#1FjRSEP^Et2MZn#rhe=4[7!li!+ArlTP:A\GjahHsFSYOqHg-JL%KGXVtC8DtZ"hLTZuc'pV,$"bfn(6U8N"gr1CFJG:ir`o?5%L!<:8p)gTfmFf,<oUgaZ@#1=\ZNP1J]Dgf73Bt'-.Be6GU>&@/Bf"p18]'YY)^5X+X@+PZRAOu+s,=b-YCGQ8+46_<;rQVHEVAqh%Rr=)8&XS"G)?"3]iR:Ad[QQ^fP-9#<>%g\RgsRChcFCbfGd2;sY$mHFDaaQ5H=;3#OoHP(G:3lMo.<!fqg)"SppsUCn?]d\!\$K!%Ah,C"HM:-h7pd`_kcKR4oYE+2U?i1"g(nPQG@;>#>>$#cXAHZ^*,TZqC"tK?1/J4K*q)`q.&f%J=(V$LVbK3tZ]I*r*HE47Q2*m*%/cZd#bosH^0:ORj*Tt9dfeEC%Th^7T_`Us<BQ:<J1`Kf+.om50Ah$0pa0[Psc'fYfd=T_RSjcfc@VOU8m9Jo[r"qoQ=rqJDOCR'f%`6)]XdlPu)*&cL4`f^o]ne"Mak#UO&2%7F@(un.l'M)?[)VTGcnJPAo/t$LEoQ-S"MDM8JedFXcJ#GJIC6p866br576eP-FA(1RJ%^Y<kJUfIT(.Bth\^M@2$aNAOt4f+G.N>*:NTIoS;=TN_X"7!:1aM"/;M2eS0cP'J,qIjudB]ho_nX<UCbF=nNj&r-;'+rURD3?X%%AsLr#%%[A<_l7aL;t@W'&D)n0G1MCrf5C(K0;AK4&80Q^E7j()Mgjakeq%L3+1aA72O2!KE]e,%T!QalQ@JYp/O&2:0t?rGBLt]P%=gFJSM-VtQKpEC*N_@=A4:$:ipg/iq=5"uEZ._)TSOe24XHL:Z:L!&CAg@a*o.R*=R0S!GhH%2<aCVa5<6&ne*aH'g7Z<.qTp;;>%ppu)8ULTa.Yp)`9g1[.t`*C^'7'Esn6]u#0`2c=s(DpafN#6]#6ohDiD`$-$X+<_]*<^@M3@(`Qni_?QJ6(n?">3?$I\T'#,LXBF%!h#[*L6N&Em`5b&r>.t:)gk/J6iV6n@]!X2ARnQ&):cj)ounDOm6CotDj$PW;^H_L;ALIom0aA68>e29MDRUHaX8(==Can#kg@^a%FL4P#$f\%Op8Ka<fS#8C/(@c+o;+s5+(C3;[2*I3oS=l+$.:JY_p[tkbUm@7fJ>S.U_69IFA0K[BO#Wrdk"R`?.:<[9fF>`7A8/l%PBb<jaYVG)O.fsmJXGc)5TE)4'CF>5n=?pCO3,1cfp@l5BA0-2U%?8S8_qoj9i2f#^KE2=4WQ\E(bCKoTOHA:Rmf5hGRmf>AI1c5%W0.O:-RjR;Q6O(&qAI/47h!*H+?VP<'+CFd<gdsShKjR9Fdm37&mp44"sP0u+Ih8A:^[XXjqaNk!u@5:_;cqs8h3HI&(k&L0%;MQ%+_V,(ME3"SW*NT3KY#Y[#qO_,Se;Pod9_qf6-[2.Jh$C+oCPFuP\D1BVlZ7*Yt>DM=p5&XXC?bE][DD-_)4oLqJ=g49S\+nE!ug?%6pcJ>A!nV0J#.Rd`?d7[$O/!(//,o'YFs>_*@@>RGNC%md>7pi2'O&gO0fKU/,2SR_MDM;-Jd*@'e[kmO@ha4s'e<l?kB:_kQ["N%2+&Z6\HJ??TOPHfK1#l2).4h?11dd]*#dQ$VK2dS3$oJe:9e6HiJ%J2-bD*koRe-Z/p:qTM:kjm&L7%;97fW#h)bnVL(u$f7Gjl3%UdqmC@&cWoo/['I@`M1"d6,Le$/j.BDPtrMbSqa^%%L$9PLOjlOW>I(_=n#[Y#9@O/`MX/e7QtXGO+QkUp?64EGf[FgRp,B`]`S.%$:MGOnap"5)VWF3ZqP4dCp5TmDZHCkSX'FW5j@4rH"t"X,je^9-E](P589u#EZ!!`+LPWk]oE"sqdJokAKXhYg=cg#QDD+aIdB.[%NfM*$Col4-qL&9Zg&]Eg>\3Lt@2=Sj12mnU?PE]Vg/R!%G2j^MnAP#hf&l4EJ56QH&8NF>*381*XfR8h8CJfS-P!Xh":\F9$PMB&%TL-+RBN&OQm%"kg?Wl`@VO\-p*a(XW=PR=_Tn=1r7j'3NdSVU#<oQFHll3$TJ9$E&,fp/-Pl%2=T*cM\d5NC`16S"o!dJU8<2,/I%.i.pYbRVu8,)[riJ(!qQ7HO2=;MeOC3Mof6fLD<lkGbZu6A%UtA&?R)BE9So]>9`*Q)^3oUcC?32'us-p!EZ)#[2"==Q)Yaic1-N%U!$/c;0ZRH-9.QO[NIW08PU*k;HlR;=3A'sg$'^Q&:/(@4<LP>5Xm/=)_4mc\kT+KlScO>J/LT[kb.nbZ>VIK\_LF03[Jn3h!41/%(n@a([\dna81s#Z-C\Ys,RGEIZhAL4i;>](RqII7!6iLG#rTr9nj3P@TUlr=L2#_We*&Qd^0om8Oa[:+5o%/M3Wl8^(8>FOiNaIs%/+^W;f^:'!"scAtC:,I)NdXucl_.rp):XU'Br$6FN_C*P;'ZO?PdHi9&Y[Z>/_4h+HaggG(+\aH[8tkVoP`c(AD%HX<(cSVW0Ko%%-djNdPUH,`cPgn=;XRrHj.J>5$)HJ*1Sq$]6-LK>!K=sX8.`\E,X!Bu,()AGO5bL5Kb+,I-TVqD#-o/J$^on>=<.c+YY/4SQ"11l%]kCmHciJ[^'hKLFU'<3,rek@*8/c:`>1ZSO[&?UZ#&Pf[LqoUg#0@iMZ*5s=pC[4I*dUi#K,o!ZltM5i,jmtp)-IaZ?A"Wt\04Qj%@S,5&U+/p@`$rL*=iDRKfJ7:j'ekVgf.HM:`ELM.iJ$YF%rZ(!62%PT,#-tD8LFS7&Hm+5W&F>4[NkIkHORn=7GGqTdeRK=Ft27c%EgV(WD*c$J;laoXAef1CQ`B2aJORmrpnV<+7XQSS!/pi?kSd\RAart>I3qDYrh\6R;AQ'e<::5nUdZ^D[f(Oa2/>_9p#q<IK:d^C%N"&P-r*s%OV$c$IKgHh(D)Bj*_+`O^E7bf-g\&P\d1iR0S_o"N.1lT8)I+#BSX,G`U'(Xc($7th2-.N/(hf"o`&^.1[AZY<`A`pP%r6Ask)%&g,Z\&3X=I!uEBh_1\WlD_]+oNq-jpGA6iN-IES@!jr)emK/s5XIF";`*qM,dko3i+ZV:cnUl9amhl:q$o%$!#s:KM+UY%Naupf#RP1R>;@XH[r*[r@3q"d%2*16$^2`YkJ1XHS:pa:,KSb*Cpb%tasU2Q\X0]mX<ZYn;4gObVc(MA*Gp7UJ"qS-$G/W/+_?AA%2eG!FWFPhO8i:hq=AsgCj_?_IaBi?ERg9?+;8m,^geX$]c,KZfZkV4;<:+hl^qsuBG9oS""NQ,c')kMX1:A%938)+\i:)H'_Odps%nMG?<-n5llGZ`KAAW]#^UVfI@EpS`[CmBes"\'I:k._(H/rrjQg-?g'?3agTL(n<F@6WqgoW&foFVAIO]aCK'T(INrGH=Y'#SIb$%!WJWp<#6meK_li8hSK2FmY6YuBO9%<D_1e2^Wi:!if"pd!^P>+=$'HmmGMIE3ce=i+kud@79,k#8S#0#`arJ!=h[1D>;u]i,nmS>%fl1=4i)&$WeJpP%4o=`J;k+<lG$3l!+?/O)C5D6l+(>a.[[1AjAo#8_:(F+j?%H-`/(,<j2c)[%9KN_,&G]adK97HW8rsC];]_rb%)i-;d#UrN8K3:Zo##KQ.)gF5'c.b-VYTqFIbYulD*M3a_#C`WX)X0^0rO9$Z4GtDA)CpfPNJh,fDZtRF(U7B#E@"o=WX$%0]aTo8%-W+U%FbS@[5&aK@)kDS5P=k6n7gZDkE0lc['lt;\`C.X4:D$G?Y#XDpK"8)G07A*U*UT6N%SI[W>Rnm'^;=iKd*b;C7KQF'e21f5%@W]T74=FOg&(ksmmm,R"XlG!QE70?jEhi.)cNW\KN[/_7;e807>=\9(_";mdYW3o6*LJ_2bpmL:bg[+sJVSdrR`+?]4gA'FR)q:;%HlXka1U$G#N]Y/S8#l_.@rt0P>*uAW2p?8+%'9ICAd&9k6)7om)I84SlE-"umSM#[[oVk-F`f)^MNlLs`;-VqWqt1j7oj"@6QT"+%eRtT#gmFBF*r(;pVR"7Oq`_)8+^@j^Ch^h#^uJmUdnR]=Bi:Z]p0cFaOJ_%Wd9kn^cIr_Im*^5B'Ytkn@Fkd[2$31lIMV=n$B0pg%7(lWn8612H5-mFa%V8[A9IggT;_<Zi81IPG=VG;FLkB^N%kNq,jOlrc"s5QCGWVm`eQ4[%W>3i3`0X"GJBgaTaga.T:M4rLJ],CA%.ac/Lr`42J[pC0se$8eR=+V0Rd"k)Uf-g7[Mkq/F1D:/Ui%s\'*nDG'+*d`T9;(_c3<E%K?n&o"bje2j$Uq^0+:W(:6SJTaL=AUC%@7"fBf8cCraPIKB2hZ'oZ#H?nL(fBr]Elmcq@aU*/.G?7F+`F:]C6rZcm`eEOP7f#b!Tj:67Nu0EH%Bf>$l8Wn")&P;bLP=+A[Ok%'24>&@=qt5[4osg&%nEP\.-B'.(1>,Ce.eI8"rCQlpt[U1GK-5@HL[D+[[_?EYtSge^\/ad6Pp-\O7-Y)/:ghZ3HW=iEqTG=FAmK%C'g#hq,i2"jXagq[\KAb<$;EGHs/?o0VQoAr__a-i3<>BX`,,<74iIeAiY>M97_%eR)Uj#9X6.l'*c$>'0`ibn/U(Xa%od%T%J,*%rBc/,@H'bPGuR=23iO/u7bgCR$t.aVa^2bh+U/c@WX(Y"=E5m!o!6h;''Nd^2CYsPjAWDK_n^u#(CW9dRE_:mfe]jEFH2OM,?;GA%q1:C0Z$<8e*p[KM6G\Akl8e)70Msh9N+jN.6bfu%6.EaUMQX2&SEP#sCd/bP&RJAdZg!O87EQ[O(`s;7V#H3u)QRVcL[^$DbQqrI%pZBEo_5E=S0QTF($n%;T`IJ4q&]J,$O<d"`@<'3kSCi]=8TO0k-N/f9'N+V_L;c]<dEggF(W".VYit@pA]5>!1KGosLOeV&f5!fl%5UJn;6]qUl+;1>^#E;PIfjl[qp5*j\pp%mp`.["*El*W[Bq4G(<!b<kZ(7ST4.DY<J=%oCD:&e54!WBPbLR$13\>'OZY/-9#>Z!r%)8(]:3&gn*Q1ICG<l$.R<XWc?N.$3Z-bVK>Tj4'BNOPT5hCd;Mm'E**s0-C-h&+$4]k/\EoU)PQP#K1#62VC86rudVBe=&V68u#S%K[:#"*'<+jll`;C7Og:U&`(Q+'L-0?XjP!r%Dq-n7ViV+F2XN?F\SH'""0>Tbh0DUA<hC&,@j>S)IU5\.g99[.?ifp)#3$TZraml%lL&0f!rPpbs++#MA3*.hkSc^]^#M[[)&,SQBJhdtl;U9nHkZJbc4,:A$DT(0Pm:'CWIk068U[DC1G8ccm\.ZEkn%ib(m-V!7mVW@%5>uWUIRiIs3(.7'mLJM'r&-l:,gfDWVK##"/^UB4Z'uc+Y)4VIKG++];fO&F/6VNpi;felZj4@!ohgAe+E3+/4Y`=c0q8<*iUM8]%Y8*RRO?aiPQplW%LqQ'jUJ4p99X%^IhMIJLFU*4](d3[t>S:2*cs%+B(->OpJ5L^4*[^tU6^@jl"Be$<G*'Vh`,$PON>@l)E1VBa%^&t9bYgJRjT)lCo^d10P8,^+R8UM0cLV+Nq4H)t5MN+:&-a6d6_J=$[.5EXg_Gc^*+.gI0TpBa$h\^r`Lap9s*TW_83<CQHl6ae,%B:tn6(mXAHUZ9<7A5!QW%ZVJ0U[06K.?G-MUhBVDgp4QrcAW-o\&A.`,YfG6O<GAD`!a=DMg@>iO\H,PCY@-=3*45'9Vc#>.>(B;%JcUZciPLOF^@R_SlVMh4S7[T-iu!#L[TVO38#W)3JjhDieRED/SPV!,F2SVm<_,\V%WVWfTZ[Z0JG:og1TM;0A-O5ZfY>]d;pUR*%kdF6PL,TpR8`eNl)3tIN@p0fEK2fc"!]rD&W(R$c+AU`6=*Q!t<h2333@8r">8A=eZ"23YTY3]p;Lb:_8`.VA$S_,"a>#q5`5[&n%KBc\1o(&eGZRp(7VdWt.%@Sb4BRu`AIM=k&N9,OQ9m:%t,?t[JS<p1)3P(SB3RoUmk;oJ3rMYU8RS=i8dg;A?kqo>?TC^=[$^ers%&6EA^?T+PUqA;scrmadA)j[,\D-hEeh04_C1U%%mZn[%'bQZ76)oVh,o^MIgB^GRF]W^f6741^/j(LQ_".'CrC7o5nad%;n./"3t%E'*ke<_rchjLu:<M+8O;85>!E]if"1K&S-B00DlQe+qe.mes*D=,((;4aZP:C@"\+To!Thn>\li)`b%E(%s;fn1c;ZF*ZDHc_S]Q%>_6u%X!X=rN140g%Ja+WGUB\":/3m9104C:DhXT&jUO&*^9bioM1-W>1Ylf\oj%DF1QNZq_1`4Ir$nb7U"kfaa]7,l#^m,UgTnEd%UMqs9`gD*-'1OAQ$P15fO5`sP\,e;%K\.RU`pH>JA"/)Di_*F=(*t/X">XG"^*;e'q=Ge\'T!\]^K_Jr]#)LJe4EA#6gC)7O[BS3%S-I:[#0qJU4M8R9B)/VpH%dJJL$(Z7bI?NMU5Upe#anKCb\f@_WT(N+&rD8&1BmLFZ#'W=JTD_mk@QOMY(J\KLh,/9^164.?(k^@%\/P*:bCF\HYkf7aT+tKi#`I^7Z>S%AZ5n6TWtXk+D\_;#JtS(W^*B)/=kQJ>a6_=D`?E+`V6UCY5KCj&S.,=]"st\Bq*gT_C[?%O%D=);4$B&'PZW0Fp5ak%Z87"Oa'd=@3.7=j`M.:tF#M`>V*,m<F"C\-Br&AX.I2'$%JV+IQ<isG"5uXIL>Jil&P(&un07eT/OCY,'%Gm+.TTn),QdFdC1=6?1mEdfEq2Rq*k`uGsP;$3#P7n,&2V,7q-<^QtYBGR/JrfL&GD6lBurN"IJ^b$+fjfg[!+=3M@1_AUuQ;5Cn%_7q:136[mgVe$Xi,]s,C1i%aTri[SUG)h-6R6O8ZH.-\bBd."HKWa7;G[W:]C,h78bY8P%X`YH/MH[kD$)ELD,qN1t<4rFK7Sc-]%>qc$JVJAL5-<\.ndTeCAHkB8V-L_TP'NW`dqn4P;'!U6D^HSra*XAM&QXQ[r[b4R=r:)&h*-(!n@/tn6#rR`OZSpT=7npTbG.TVt%@5TBTT+*>2TPYK:dm-i71BMW^*2_,0/J<1lb*FQ[>H]#>!B9#>;Fk6Ke]?D*J1gIP`dPWRn)elD/:=6F,tUR;mi1i@+:,P;RsGI;%'sG!a=m6nuoTJ0.)j6Um=jMnoRm2H#=BNcEN1?0ZiAk#iaDT06LuVuP1l,m!)4",;nL/RK<Uo-\76*V7,E#elA8r7M2ol'*6>!o0%a9%WH4O,&W:d/u$)7!)]%ELkMX,r&#<Zhc@.pn&_+@g#N=b(Ud5Si;D>_ajq_ZBd6a9"qN@JpO9Y^AaE9,Y'Dl%4Xm5dhg/atO4P%A3n*ai&?38E,_sF=Jc\9!5g7r)j#cBDF,,#?9a,p@)Q!bJn64%.Dm]=6D@m(/0E7n$e'2c_^o3?e6qGn-\)4rbQ@68\E0A?-BkZ[%:h]`)"qB9PWI.IXGYfs\]lHr"VLk/-*u*q].gMp@3=2_k-#hSA)\7gbI<&02gPpi;jP/obJ`==_:`:!;=?S(R&u2npGZ$YNc,t9/%&?(Fa]>-`5#a*W@('6`T_l#3l5iq@4+%$%p3LiPQ1^!ecX*:QfpD<lM77=>a#6>IX!5]QU!1%79"R&r#7TjH"Q"!<77p\O&OuW+=%/!e*_[pVce+Yn-jM.c:-lWB=k],"GP,k1%cO&@e@]ShS"(n-,aEr<kE;)AU-Y(F[@$r%AeH1*e_jFLg7?9=Z&kQ"`b0fTK78Ob[r%)oRGFE"_4<9u8T'9e\JKifsXY`^q&K;QOL@hL(LYeQ6bMXS='UJ@^C-MgkWT`cH//*U?^]+L(<V#SLl=`hYQ(!bX22VpfHQc@\T8%V`DUfI:6t=R-e0)-cA,UTGnen\EO@l=@eb3m-dlL*Z(f[rX*gCZ9,it?cBgdGUL.@\pP:]KGPPATnPS%Z300#iD.I`ol);RlQk8B%hB6Yeg^,+RNGp8pd"+@()X\k3iTusRmY!>,>kblelQ@49rR)JK,lYm/_P3S4=#ZkE<AX;oZkF5*9!f6m(#6%BBIDdoO;8W!KZU&e%!iH+tB!em8g4,0.(/'k[&^Mde9d?7VI]Di;:H$9lZ@HRZ[feg-(KLX0/7bXZ:WW<=]$#V6PLusJ0*@Xa*:"Tgq2im,BmJri%jjku%#73t\S)d6oP9pnu7Y$K+X=@'pV!\LLJkcWrKFe:"0\+o$LS.Q=(^..W@!A8!-NP>_OHZ92\P@aL63D;[nJp46!mf&`q,\m\6gaBG%X<?K(b`M<J`eh`ZOF-!2q,J\&,'5NcXGfiBPU+_MR@eo"_VhQ?;"/-#$Y/]"`'D;OJq9h`5!W4RR>o`>nE]]1W>5F7qZjs:bcb"f%&b*J-Om?_CZY@MS(aZ(s$@`T5=,,GPi!fh\[l4*W#pA'H%(0ti(p)QiR:>&j/66@m[5QV!1To7m:LT&H`t5-sDC[Kh3X<Z7m@\Xt%3F.On^j!:ELTq+63_3,R-LCU4PMV33[]V21W87<;^troF>1<e[c`^((hj19P,F^5$*4!uT%XWuJa66?R]n=4ap:Q!(L[,fp&&Z*0%pAm8]L3n]"GsE?aJpZ[neDNCUh')ANkDjoPB=skrh?1X;V*j4pa^9,0]jigVG[A;$4"P-,/%Bd[O_aBpG7V;JFP&ZFqdNc\]d*P4%61?=N*A#csdUDV6pLdiN^tp6[>>)$$G:7/=Yc&DPWPdSTVNXq^5uBG.XjiAXDq9[&hFUN&[$V0f4g=;j8)-1f"FQ,]L"qO:b$jL7%,_h-i-j.1.5Lu/^,2[*S3K\JQ^-@-/*W[69:gW-<i&&:2d8?(-@6,YE$16!XNdYQF=CT=b@fYm3kW?khXFg3[V]2FliIbJL>,ag_%TFAk%"n4[2n@cpRY]<N>,Z1H!pLr9pXha\8nl`+)@)3B5M'[<24-mU_>umV)KF![["I>$t0P<>*!Fa9PRKS9K(klamCo#=_1kfI]%&pjjoK,,<;X+5$50jbtV!G!FqW/65H3A\b,p-O+r)G3,J*c_3E!83/m'Xn.aefmIY,H5*"j*_M1(Q-J>5dB;+C_M%O!b<>fGO*J<%^JEh9]hBQueq?>jXd^aLgP00K2L&qED(<QAnK!AW'S>/a'L%M@;/f0\=5sW1[gKpJ![i**AV0Jq]nQH6!fXRn%`$XR$sYBt9]=S]%%P+l*=psY;q6rpE":^!"=O/U1YI963L9oldEj9,X&Tpf3Y<]9'Suj2k3-KgC3T<.*]LEiH/lLrDl[WfRO?;kK.SrF.RD>sMS8#gA%TWT.g<+?/=,I!_eLKno/^E!34\.3nq<p>EU<o8b5)rd:u"-VTTK",Cre@-1.23;lJd+ORpf#3JYE,-`n6hILUXl1?AjMCs#>=5S_%_SYA+'1SinY;?QKn@F4YL9HZKgY2TOc;1Vk+Wd1TXs``_XC"c?%^O4L,`GTg>YfrAee-K[i#*@dJQPF8Sqkr1f"eZs,e,;=)Nef1%YY@(-@u@Iu"e#-YGsMjED%!WZY.!"XZ.1bGW@*n9`?q0M4S/RT=A<<8lCPekX[M^+!IgZ*3aN^YF1F`46`N9hJU&eVQfQeNI2ubA%>%1$9HetFDg;Ob$D54<j*Mg*I3fAJ,HXbci+gs7u!qap&E^s#[B6o+<1Qn3@]BIBEOrEl$#g6//e-OtU8mk2):,e@e1-1R:mS@L[%MPN`5;,Y^W8KEm+5-u%M23ikPA4'6^gc+/^'hQXs#lFc<,dlgY3GO=IF5k^]4-CK^+%B1(&tY2c98[3!;+!6Q;DT"W%7_BJm1`(X%&Y'6:j/=16?GUb$2,[0\d$g]-!>5Gm1CuEs4Nn!3;+#nLKDWuHW563ql.!NepgA7R22i;Ygnu!(U_1Qc3eePE3_aWq4,03Q[WCXL%C8]BO1"7nN\4d!ta<rHVFXW!UJ"L,I+^6s*>qsj5[Cckf6VZmjD,)8(Tum),#\lmf=sQI3YHPmZ50h=8n&S=s+K0]$92H5MCn<QB%&_'?W7Dr_oTFO`@>X;12pU3Zi4<pee\eSIR5u9qtn<2nR#\jnIYiUn<7V'*-<<tHua<FdS%&)ecjDp#PEuUgU5c>\i%&kJM3CR:Q%eN"3H#AN]'#(db.4gN2-#\jnF?5k[1i&W,X]Ha@h&L)7rf+HLlUc;m`"Ehe[PSo'6E99OR#\pT<,jNF"*'k$m(0$bPJ/Wkh^+W!_%.f]bbJ?bbD'7u?q"B9Ge'UKCc?pMkr4O-fN`D:-g(S@G"fs#7oK;T;j7[2Q@e&XVic&blj1aIO5]6uZecE=J:4)u6*Q`:m:"&>VM%EN+hbc;%99"VP[9R@pEUP/+$H5Xod3*A\/6*FC9RJP8u_Q9,G@VQU#7;MpfI?f[c-Q[D5h!fH=Y/PYRb6>\Q`1a^H3Ugg0!laP[f%<#S",-Y<`6r[!4i6L76WjN59%Qia)t7!m,u-Ok_240'&BSO$6'XeDONa`h\E,`O3Lp)P?:A'A8S#st)@e\Fuk"\<9#$o3?TB'@!:%_+,^n":8<;O%sY>qe#&*+;Rjl2o*gt-fS43d>?>K@u!N$Utj/l8Sg+:A-21Z.53g!i5og>(EK!<$k*orSS:,G6XgUB95OhHSb0&p%_aJ"m*:Hp%1f,q5N_UbF8/<5%iX?D>mJ[h$7"_kWRh61U;i7F3Tp^rPTdQj1VW#%:L'C#!3i6:uQs-K"NeNK!*g[g:kYsU_TECmM%56eZ63,%sPC@3chl7$3pV^Q6BY-:n8"O4]\!X[$p@WFj2rrRb+(`4Nh^E]DRbb3,kq#r?mBQGR7]pcg1Td7Oa[PBNT3(p=^q`]]Z%pG0]>>8mc_[XP+;B,cbop$lf:lgli(+bK7B?qc[.<bB-[2unO`,G:Ib9/3WeSq/OFljD3.c;Os]94?/<':@2T'H&?E?3%11E`jUk%BXXM0W+R'0Q1ZRSk';AI2H@\*6!dL.F$[`G,&]"FOIDF\lG\l):8-2gREQjJ=e^"mGE/a_Nd,1th?1-L.0pgeV(MKQGNK0nhRSR^%-MkP@VdO-U94:Oab;cm7\[[N??D#QY07jf_S2^[6ZU9\f[fUaH$uniZljT*$M;HUSs1g/dl(MKt.%kR!*UFbJfX;O!1GLC9Nu72Q%U1!X&l5YqX%$]9Fl-)_UV"o//1H\>ceW+_UOhps`,+SaNWi^B91W#dd]p!*E74VmC8!n?_+p[WpK/n9(+u(?DCcV"QSDjn"3=b&T%',kYr+j><q0L$1J0I@Y"^oE[c(h^e8@*'>,3C&F5@/_#7L[CTW+Mf6$M#<YT3lIG8kC1toc7inHAu5Q@=LNdXT_N+=/^E6MGVcS"%=FkU:1DEX'2l>Nq$o4$*Hd8(7PmF/)Yg&\L?2P.F1NitcE/JIdUd0gH!h1E0QeYrf*m+arLX4;_28e%hB&3[A*1B,A%Fkl<(mFE]%k&iJ!'La+#6L:to'1ap$<PIB`&C"%>OiD3nk004QYQAK-q?kg0nB<SCWu=`1nuW)23'f@LDhF+QK:2<RqdilAaVbR=:hHM4Ju:&\%)28]%$A1+'5qmjF-RSm\6S^$NTCX)EN2/ok.8q@1JbMZbVi5,?N<Zkd_3bm&0XrWDJmu`n/$<BLTkA=X9;@KV1RWBA$%f^.QnK;,%)9H$s'cVT^+d^H](&0OR#rfGhQbiQm$5e(L!TDnp%Ic."HTB"ZlnZL3/4>+C6Y#Zo)8VCX,DrG&*Oq'$$DX(*[iBt#nuflrd3c6)%.;BaI]\Hs$/VE'Y]4.'dj!!M!a>.jD-TPFZ3+EQiS0=2lILVJ2eH*ho!OEqm^bPn+I)giuQ.$k$5Z>15MK0rSTp69(MA3;_(u`H&%i&Y$Z`cY$o"g&cW)!coW#.Fa/`R)b!UQ"MHjcnj*TIEnZhBF<q85?WeK@i&9</q;S?UlRj-'3Q*X!rT3_>d)!+Btn1Pe\DUdOQbt%:ltLi\HtqiB\;-Kb4(i0@VR[FPJ.9V/ZlmS*>!2CXh^0`]YV\i$<(Q#?2SRKHpJr-RHIM5Z7DZ@)bM"A%_`lSR59%%>hEK-&6%Qn%B:(H;ii:eFc7ig[r=M2]TTg&IJ7HMob&BoHRQF+ZAlfu#$;)2c.Mk3'8/^,#P55T_bfO?HY(2a",7'0XP`Z*b!'CE6A#TJ)R"1DC%nGNP2!7Rl'&m+,SWc7a)3593e9#Ifsqh4&hJuU</Tp/,Z\<L#jb4(aKht5u'U@Ben4Z9;b-][@/WL8k.SA@$J.3jHG_.uCeo.<E\%Fd006dH@fe;F[A]]85i,XFOiPeksSMT3VULF-!;QPUf7`3_1-^Eju[X+D#)J\.2AZ+?LZ,6lDRdN^HM`b!@8ZL>]nMRu"+gLb`ml%\d@:DiglQ*PS%Lp>.6e^3M"m3%T.s!6i,CDLba,jpou9P(sYq/@E"g>Z5BY[ajE<(s"(5g5eJK\;25l">>27P$s!cCJiZh41#kSt%2LuSj[STSO'gia`aVsBa+?3b4/h=0coeHC1_2[dSQ)[S!VD(h$Qo_aXJVo"!j/^VZ0ZBD*r*`Mp0shA!<X_h6#T_un!fE\D65<VC%'5,"<CB>m/K3ZR!B]=t4#ef\7@OPR([9gld_eFl6(ai-hGU`H_>X]:3qkpe2,fY+M+l:!HV^?TK'LrSa+C:7B0Oi[)X</jJ39dj2%lR663K.6r/UPS`j8CYAILtPJFY+pe!!TuZT,0'Rn^hce4`)&!f+'&q-]MP>)Fpr@uJ8XWhiZLe!.>/PX+;@=u&;)3n(fhct=:nSf%"[\/1$NM=a6B(9E<n[n6(bu]`2$bq"P-Sc5:+io*q_>3<LtChbmf;f$"#*In`/\bZ1B]F:\T7-QHQ[=9%b0&YJf%OjQ`17\X[m]g%&B)?m3<>hW+Ga0^k>_e-",=Lb%O&!DWFc_$b/)E2![3:.L"dRV1<^Pn[PIeVS)eHPLp?$Na^PE?9W*SIM*ZqX)EgECBiq0aU`0kS%8:j-`UdKq=Bk$*u+iJc/!3kYq+U4&OXLsQ:-8r`0irh[g'WPUR@aa!8\AShCN2C@[2^$%pMl4"8+GQmo3e#`A'e7LQr35A->J^_r%(k23+-D%#*+f$,JR>6-^?uN-_LUlm;=5^uPf)s!$pgNr8U0tSN5OA1tKC/qm(bR$dM'a6-grhOCa,(RPs,_&CPu.6:IMa2l.[^tk%5+EAY5Ihhh?e7*I*X)ba]']S$3QoY`djn-pN_HW5iJT/]PpV"lY![uN^0??NQ*hIG<SS^mY/&n+fc1m$84j#[H20m22pejH[A4PE%/1d,1aBM-W#*-IZNg>quY'^='b>L^D-O,l2HBZ!MA`7?Ba`XO5FHIo#_iBt8Xe1?pJ[2Lg$8Og\-Ym&8.81N.G**eW[K7tBG>pl6%M0#WE$:YeF7I$l3r*9G?S>6fQndec9.rGM6M_]P3$m;&4Jka/'6L00([LSA+[@-#!D/B\&Bkq5B86_Q437?BtY`Z@P#*$!tR3Ekm%D%%7qCLakF>FR&mdalE7Og[0&MR9dZJg,&K3[W8j`upMQ39uAkEu@^ROleDu4J]Lr%1_&sL21HnEuD-2+jFZPZ&j-4$k$cE_f[B'%-59.9OPkGhFUSSuWLnPIN2E8"4UB'76QqTb$kpLNOB>I?I2*(q)$EZVJqQPWE<+66&e\<tdQ.pPq:!WU)aHrQ@W6Sr#RP#j6Ap_R%"R^+L%af9Xn8#oeT&Ll$q[]BD*$fp[@dgR<JLeL3\dj@GJW%?>I3+@)QFg1#,![f][9q0*Lq*9_)!#O:6K$gKjW-Epn9,QAUC@Ea%P5l]R3XV%6'qJP06*`u?bK=[0TSLX+?ic*5lZRG]!*WQW5iNdem$JOo,gn$Er!%_Z.*)MmBgE;_5["`;+HR?AR6i#J#bhl$$\B2u%dXiT?#c%Vi$it'.&-G1$&7gZJZlk1`+"[\+pd^6n9_"/Z"#9SG`BXk1BJGStpsEOn#(EorLk-X""u6?H=q!g(NtqsTk[T[+9TY;N%#>sQWKg?.CBOQuOo[1MuL4$?^L]JSL$o5db"saDme7"DO2p!QgRD0n#NKi.>fH[:Y\$c?bKO2e5,Xjl57g[M4JK?&nrYKK\*g--4%=NCg20f(H%GK;!3:_r5fR!AeNV!\HFEV2#7Z*>[[ADTC0dMF\=6go-"o#patqXU&^F8q0)Zh`kFLfi[&)e?Eo>gm?ID9]Q)X-qkp%r#dhha[e3tA8$Q:i'Ad$:lD)2^%c!;(oB_1>hiPnXfOa9[K.nDZd^d$Zu\fFrWmc335eT8cA;>u>U[*\$46;VnVmRf(.^5('6V_[%^^nQYJE_%4J0=9uITD++WR(\0'P&%?+qFaG1'n2F6T_+,/+/gI<Cb7JTcJ+7C9RCGQ6=m]pK"Q7)7!H97o]+sk/D&t`MpV$3m-]]%lATmE<pN)=$J`Fmd6V*q\2jWGJ]"mX_JMlqaQfk6mS@WI+6u[f9'cJdZ+?r`%+Fn<UKucUSW,!9?YnAgpd424%_rE/^PKtAF@O5=%lRtusV;V(Ab'EPP/QSU:P(Bk"X%[j0_.k]2dY,)0*3;'hSDpf9Ihg(Hl_Nq-Y*)s7JbkUh[=g?sU`01!;Fl[<R&pi8*qtOOJJJKY%*h"@*+bdl$Oq_pbqUWrsPOnr`AsJ;*em'40j(9ad/L+jsbRoP8W);hHF[I>#ZNb9W_%tt&%JkYk.7Sh_lU&.I\IF!7("nQ.Z4*)1%4HK-&Tum?p-PqIB3g$ksFfR.ITT1R/)g3N!EC=9-bW,30l(tlik.e2_"4F?P/oN4'BH[[4D3kruXR2`AfRhN%CL-0'>)963['4.H%F83=m",Jo#"t-Tsfc-dt<%Fd9VhG*OoCFY;T]8XEGQtQp>Qgi&8tgm<5R)bJKN\JogF>YurW=b7Hr!o8JM^jN6E;)B>^4j/$B\J'%'.]`(C"LN[FL%,"Qq7B"I[<BOUU@>Z^rD4V]]i$)L9rFu6^5'QbEb(-'dlF!EJV(t9"dt"3=<'H##^_kK(/GY,q`^Zec'rHlUa\!%g%1`F+C08b[#eS!;CK%W'PAD1D1H!',)*;Dc89g7KG7I?#%Xj:cb0@R8D=35&$e!1AHhI]"&`#fWb8Qhl=q-GmQ`gcP@-m"+Ft)H%]QG(G--]L]_&t*SCr%NV]rricJt:?sB;;9Fc=@qK*F<Tlb3^q#4E-^V'LqGG1m(,P6H4(;"$Z?ho4i3l/B4:@AC72,F;Dq[>73T$%E/O`&\!,fRCb#]X\#$DhfESZ2.lH"NUcTH:^:68=DhN1PF?./s2'YSY/T+OAq4k:@\e.,^a&GM9GF0'[gqY<g%d'pJ[FcA?P6MlI%+E`;F+A,+WPi6.G@77aoH>7Ws;2bkrV76l_Y\iO>N<Z[I2T<[l28DSDUJlmFH%k3**=/uAHLiica_FHNakiYH&Z?7,@C2e6_dEr+%IWoao'Sk$=%aoNr0]PJ<?.`K9@^38oQN6IlpANpjL'%r!9P?=sK<!=PDKSE;5b7"#Y9m3O5Z6d/bS$a+[q^g1@:Tgd^6R7aieG'+%G%ouj:B=ILKFV-d`"8cB_cp\o<l((*g8I_<`$L<!.Zat$?8hBB/sMIZd'B5'+=m_8EZ!,\nil+hK\@b_Op3CVK'dM<;-Ql\mC]YV%muLY=6Tuu6[,!'cnk-,dbD7=rGlst,^)A5[XkE]dgm'a^5+L>7Vh!5jXarA547dF<;dnSqAQND1jafdm'^[@Q,lnj?_$7[T$l%^<%9>@og*#bqf_@!+?-]sORd7YYKlEX\LOJOW@/+Uk%aM+\Z?oeNrbb7'p!tYskc=!0@L?3`nV/%X-%L:^17^=B0i=1X`@nf,G>iSjY%4gLmnlI)$hi[%l.=GGK(K.a8qb@G>`nO=!gW((kh8$2*`.<?J@eHW[#@KkB$8ctS@Bi5E'q`p'rDcq'TeqE;1@/cn0+^r+.):jDA%?,h'r.3Lh[Kue!bZKGI\.3re59s/eHgF1ZSN!#9\&oD?GDA]:,RJ:g!p?+Ha3Jp6S*(;qrbG'uN/jRIjJUb_)qLKE3VM4AbQNdXE%oX4>.S9b8^M%<,e51&:k>T)'H.:[JX\;4%M]kr%JYdS/mi6p?1BX3gY&;24$Vcp,M;m,fu,k/p6W4E/F:[mOe+hr[AKiqbp.YXb@%:bgiBTFD0&8"k.[L*\T$+O/D8*nKARJJak/JZ63HmkT$gfG)u5Y9Vt%V_iqik]dR+mTcsYVTAE419@-b!Z^!"=.u6*jSC5U%_,sY%KlnRi9Vk2o:c+c0rF!6fn<sY&%cV802<.ll##XUN,ZJFQHVd."VMjd"Zk,."[#34l'UiH_.?r7"i)Il7I2(qHh?qqA.>@]N"'o&.%:AE)qG49b@[4p5>af=9meRg0S7oR4^4S;hri5ne=*3Pi8ZeZgZUWUKBRG7e"<Oon\E-T'Y4VRWFn[6r]&?[--oXY)Pm/jVGIii?D%%)t;0N(G1>.qMi"&lFt^q;Qb-hFtpIkhq:f(tYe)p>Aeb7R3fN97kgI^6ob40X[dQ+0puTFS8aM1sl%F`mf9M+$AC,R]QTj`?Qa^%.p4Qdbsq0%E=K8Nd6P"j7oaH:JPL#e22[hB\O(prrC8aQ;"fF.>pch"CCO6]%%4HB&$.b[iSaH9MpfXBU,$!X.3.EeE(sP?%K;CN%8.&;2Q+'F(C1H0/\n:l-K:1:Ulj@VeY8<(!bY)qQ.Lrb`X4n14>e5N$=M+-9F#ip)2F/rI*-Xm\9C/uB;2&K3l9#Ab\1!;llZ_>.%MAGK61J3f7@^h1ZgqjCXc)hkE<(dVphu1K5$GJ?Y-8oC5LC/R`V+0dPaF[&;^k>3M"$f3jhdN!I$AYe0fpP5(TMZoJ7BA`29Vh0S%_G]Up_;c5K.1FHLL>SM0%>8Om%aN"X63d4F]NY`r_kr$c+$=rfRZK[m[MHGf],6cE3MXVs$,S7E!$bD7g]XaZ0#tuRJ2.5?DdnqD%niW"Yp:Mi]aJ2NX;0\"pYiTDI0"V$E1$S+g&j7>IH/8mDeks7UcR.5,H%_9gf/do&b8b1M-UXr-Oqs^$"JaTlY#N+F^jH7^LboJU%TLkBFEXE]K?+46Z<!ng+],1P4[F,&\$>Rd8!s%a@H6mI4N[eT+4$0gETM16T<SAqR5j:='<b%8s-_5HB'2nlKpgE-6Dc9lb`_CJ&%V2rFa;oWC.,B04;`=[Z%q._Zk(H'&IcX:8E0V^L5Ib<5B*ltgLSKTK?_%_c@XXTaZ"lOM\jXNY=/`O'g8QB#:.u!91^gr(sj!Ys8%5Bb-e+Hj#BW$;@_iFWE1^[jo5^u\BB<J=KoBQ4a"PIZo++UON^F,:Y)e>'7Kdk!P^h:N0rUr$-[Z;$'"dGtq16pm?gS2:6'He51/%Kf9"-%dPJQ)/>^<-8d97>7aI;b2((P=nf^h4#O?/=UIMPp1[iNA;B/E*'1DGHb6'8Bn?@qaC\BcF`jN?EB(6p[K_,``Sj(nNhFRr%VPY5lTHD6750p\[Y%XsHdP3o><*t<=]>Ui-!!2<-R7!ZI;:JG[@M`mmkIA,XR,X<'g8$R1%@c)-89I\Tl=q^QJT)^S%:V`BHC^X+%D7,cn\>^[&_QFn5"76Q-Trh0?)Q6pCZp$$Zb^/p)!T)DOVeu<r9HhFg;5Xi_!kRe)X2^aW?&3I*P88<jbd()m$Dro/eN8cY]!g;P%4UgR1237Q,0-4\B+)L=jraZ=*[fM\dFiHdRAY?Ola\PVm.9+V9lZ7K_=n6C*=RC9>'>$&nJKgqPmgi7S2Ou\pNN/P^>LSFgI`)O=%(:g2IXcfJkHterdSE<r5@M>q=1=iN1fc"3#.qKA7:$nZSbXoWoN=?X1_I+$U<a1Z5DdEo-8#b^#[l1fYLpT:n%b1L]bb/<?gS@Y?%&6#1fn^\]pI9i>Qkje@cn.I22QN41&67<WJ"H-h9BQ@gc::9Ye+QlLAH5%R;a:/.=i;.1IE=QS.8imhYFkS#?>bYVB.[W\bFC6&R%qBf&qRkpl(!huo@mf9FpH/-Tt?Bm?9o0m(G)`DHH$[Kb;4;n*:TsT19Cp1mZ4=O-_1Mk<R^D'U9OULWYd^u^"b8=;a_i;O\>TS#7%ITK=MG$tnr?%.u#2^&!TXRj8O@#TZ1C6t2[%7Yl$MsGti=ehg9=%m8S8G;dAN-u^[l%Cf7mA2d7^8gH&'"6jfZ^RYZ!i4b>@]a6(%h'fF,eJK[<Psa`3:1Q3hUROjnCEV_NmA`iK0"eD$$p[2#J1gMKjhS)WO9AA.-09]D7LA6Q%K]t)jR(1_D-0t?Hku%mWpYj,W)3S7%6g-X1rUE.Ek3cf\agNAQV8,\oB)(CMOD&*oS^C=pR4V0k1f+@7WrqrZB*OEoD6Hl&;q<(ZZs/2RE3?aXG)M(:cp0ML18sdNmk/b1%(fKm)kX%0:dC]K_SW'RPLdI"N^(cRB26MVU1LYQg1U%'_:$"eTpTD2!8dVJB/S(tY)3<Ip-l,O(ZAN4tGTB6r[RqDa'Bnu`15N8?%f=T_r]ZVf=."f'7bp-g0N$jqqeq"T@G]IgqRtTJE=E2p[i6:jYHL?\4+XtDD=hCKj>0P38)H7V,dV(C'S1W=/2jWhnpMmprhUJbX%TbadjFQ59>UZ-NYRe"QA:S",W&R"le/N[:a]NW:B9]Z@k<HBN^,<'`*]5EI]X7bA];_]e6T[>`F8At3eP&ddhN^Aj5:qCWsllUA*%@&HZ"Wo>A<+EeKShhu(BD&@R$7Y2C)69XMuBEjY+c[223'C/78m)<-*W=@;sE,rROjEmlS%Fg$sTT)qY]sD.PlVnel(A)-p:Gr:I%P>*$Ar5.?2$/O56hqP")Xf%(ncn]]4@aE)0#(%5%^mbtd#(]]giHVra)F@>E0W!NJ\^%B&1C!$lT2^DrK[<l-U2%X/];8Y^>Z2dR%C\]'nP-tPD,Ja%&l^CrB%&q/Y-Xl=8C5rIa7N53'W_OHFjL^2+YrKqc.?iohX1?fKqh`FQK^<C%^q42![q9qVf(eX.@rlgYW?*bi%A6'`^_0R;[W&nE/(!\m"C*"T).#u=3_%$s^FO\_jqGF!"Y>kp.T2k<-NBnEr43M=hlIS@2Zt1uC'.kWY4P^VP$K!_BgJPSi`1*[!%m@EcXH1dC6SiU`Y!`nck&2o`[gN#3_cqJ@E$G&/L=A\a&d2PSWoH(BoV4HqTH@Vp!*M,6H$`P76g#nk%^c9#*B4_KC8`G>`RDH%h%_X'aCQaBHb"*hOM.nYs)U@Obp`(%qgI.H&o=OZj1hV=9@@C't8M4/$:#Q49YgN3mAEQ+RiRA\C.D"B.AP/k2`K8CAMXQ59(2BH7Q%IO)M':/<_#9M+<dM%li4'IEsCQ_PD>R"#aP)=HdrV3I8iZ$=f)o/M>Yc(6Mk?N=$i`bg`*U!j];;r,eU'$!E&fm&EcBW3AaMjK$r%7P'.n:8,NX4Z0F<VBb(Ama*a"7M5s[_H[V!"eQK0BBk_8gC(/t9Qf,[H+o_CBY%\rU>iDd<=79[[Rr=2<K=tm&Ho`K1)WI;4&i"P%K4,UI2m](4(MR*n5"Y,mfdUhdoT2LS<pSrri<D?@daSq\Ar:GD5NA4'1)^qZ!(04TpZ^/OUR,$q!AU\.*=k<-Mn1pO\Hu*aR@i11%kNJpmosmm;BG5$Y-+"@e0.hbuFsk$ldbJ;KU]TUQGO6tA>ON>JGGg8Y>r434"^($88(XAO'"fdE9L]DN'i"uf]qIqH9!e.3[MFJF%%FKirVO_[oZ.UjtLM!(`>'A%1BJEj,TPPs7`L7^g*$t<@8ISc";0B+q>15ldmKp@"8Qma)-#Knr0hd+b?%j&`fqGF?1qC:j(96P6%<[c"h'"mL6*4j^qI9.)3m'H%Gntlk"MEXKTN\;I$d-&oiTi9]*-f:I$`jWFad[`3-Ig9SfQmt#dI.KCd6O._84MIi6=ucU3lt9m'%9rUl7^*8iC1\\ORHR[1X(,^=))2d5uGpG.F^#6c)P,IlIn'srlNWU]4Y4;;P-GbnE*\GT9NWk`A>.,F&24&Mff+6_pfi!$eNeKX3%0EsqL125qQL77sZ=o:e?loIZOSBFASKQ5P6"KqPheX9$7a/$0/9M/C*:"TkR&ZfL-(E+,h(tAM>_ItA,,8[@T<_akpKC.9X-YD$]%Zn\<[`CUBa!-#M4H=)A;U!T3=D<=3>"kE"WSg%1J+MDn27,u1S07%`E'693/0o:]ABnl?sFYV,VO;(H;p-iL`%25]sH9h#KHe5#9%9pFlL;ko8\lE#Qa-'l,8$k6126OQJZY2j9(d9]7Ml`M53,\peHjsEf+_.[UgA*'(ZpOY3MmNY9b]5lSr=)VRh;Z]eZ/BlG6??n_,%'RRg`;+"+u*Ks>tZQB>-ZQem^OWej.'Z!k_j\U:2,$qM?`dkYRX8HF1,D)R#Ngf(2Xsd:pbA=U\M9uhC]N("_>K%<C'Y*\t&hW!P%0Mu$4qWmsul>W\Ls(P8X864C>E=#o0Y>Ymn)3d[Z1=<(Q;[18RoU_,Fa1K]dm'16qgnAI3QDWJH)uS,hlYWTOlBo/!!GW<\Rhtr>%XP#=JC+p]7,j6Vn;O%YJULer,B"Cc,rjLq`AdqQ:$KMYC_b')jBH_"_+.!1Ha#`Hu&%$T*4QB)`:oIGs93neORE2rH4`Wo<UV6:(%J'rl`O*&I'P@!$COpqH10%-=YYLuUNG9r_^lpM6TDG(ak;B7eiL.k5)fu1=B,a`RNp>g@DL&oNFCsSZXFBi/$^?;Z&0'VoW^u33:%PZ)X<G6r'.3+=W;A-?*jUk;kRQ60&e]lH.8N=%sGf&_MDdQhtl(#/^k_IYT+9l4/9<H0X,@<T>YJc%K)hWTuP(J5^IkQ(C\.k/uX%3snKoN/KnP]:Dr&,t;MrjQuh!$8n@5LrMf%ZJnGg,A,0X-o_WfD>.QD^d)%8Q<-pVa-TeW9.3T`/a,a%>3$`TOgLpGG#65D27^Ke%bn[P;4_#4L4%><K=tRsADE3VRR?YY?\>BWY:\;K3gE^a(q^?#XEFb<UE.blObaAE"5M=`m/bYXW>=Y8E/aUuX`-3\bUX#)t#\1]0%e&@oJ^J`,s;@5pZ#E^`&MJR#LQjcshA*N,'$Wb/_Qld'0\Tc'0TfH%^-L24k='\8n2[1ddWS-!G(8GSrr8-hGh$7D;\DBIiD=*Le%NR]4LL$pk^d+"^K$#HWqC$b4:[E/'/K4N3aY*/*fm>`R?@V`J&UT^gmTu-918ij-#%cE'Y9Jfig%W2hP/&P#"eB=Gqc;?uJlRj7'%"HkiR\grNOa]to=,]J/H@0jgb0]:C.e3I;,o;MKAR3dU'-TDr*NPdO_`2T,_:QDX_G)Z]A=7^59^Mcd0aKg]^Y]\X]eJ"SM3f_uB%`DUA/1^Nb`raO0LcrM`3M3rfC*_#Eh']Q]\P\h":&,7TlYXi5=%h:)YTnoQu6-It<:5X^$+%V&adY>PZ/Csmrj9;)@0`MRL4AjA"%Li^J.]P<=5(7J`iJ8gLa(;X4]\E?>NmCkBpP`r3oLL)'AoQ_]#e+=3L*pe^$*Z3#(B.i`/\?jaD-pY%6,bjiil["P,4mSSFA6_h;%AA/T#"q\d"#cahEjW"EH="mlROgsM((A$$u^)FmZ@F]PG/jR%n7PMiPO>ES&SU(_eE72aNDR'Gb>mI?o0u/?Uhhi#5=d$::>VT0f%HfGbpjGK*dkQ(\uQ`<,ZEUM?;22p7Up]th7\H3e0h2ir%DQj<r7$pr-;Y&6=U"Ts.,"W?o5jbud>caC[2CAF)2DE'E?,l%ea2k3N%K)j57'thM/OgEo?J_WQU\T<+&1"HMd;$UaQft$];eL^@>D<^m_dPpIV)G3?J+>;l=1-<]o"Gmi7brF)0W6";['*)JtIkaL3EhN)*%CXR].QYpEX1,G#5+31Dk$<pD+`k*DmO"'\.$g/_#2b;n(N/BTHnUT)rM+B];)4s?;Zbt`YgkBqPBNh#Pf!V`H@]-Z0B?!(+,,nEM%34n!/\0Gi7l!D1U71<%-+QNH#gV[&CB:e`//[UTn$MtU9T)OIfPI8TCo06X8J74h&jEX@+%OU[l%Krqf*bm@Yr;7fK5fm+5OF$n0%Odj1`J_1"$A]1SOJNLqnBn?e52<1XHXGXpVfZ+I01*A@/fdN!f:o.trPkl[1N*rsNXF_1@hV/H<c^d=ob/?l&S"dj5aqN5,rLlR]%X1V(j$HG:X*S\^Q>\.DbL/&Y5k&2-r3_0K0`ljK^DBQ<XeQ"05ak(!i"L`,b]P_GfFmU%Cd,ani;-a`titsU$&p8Q:W&q>99%W`U%"_K[CU7Z`S22e"8:.'LRQsU/Yf.>)!"3*iH"L."p&kcPTWr/Q(,QJVi8.HdWH&^bX&^$UIjM;;`]tJ_>5j=A&a7'p-ME]ar$3ooM%K!;Zfr6ST:?I7(\k,S&A<j%gL6[-cmc&0sej-%lJb9!+7QC.mR`qj)EY_P"/c1N:IF-"T:(&-"@\U*:UgTk!UH'0T$(V<1A(^1bL%:n>=q'#iH[G@oQ?([_Q+;a-*qikUGH(lVVW+'._5gP:5J#N"BPj"6_laKN19di4.>4"i%#>\n0!!5T^N/uq0qX)Sh"OXDi@+\t,k%+K6#AlAhk!?*Qb](o=C;$'i>N(I@;R)ZsE#Bk"J@NlL^o-05_P!6'+9^hBG!]QNF2\W-s`dY[RGhrQ6)XK"g>]jD$4SnJCOk!*$*%fL6?]U($p'SXK;ahj!3&<s-iFoZ\!39h?)!+?_M!9_?hl;b)d[L-#3]HZHD%Xn$g]b^nT&XCu!8`&>)HpYWD6OUHlrOpQo8U/=!Y%SO9=.4OC3u:K"Ap\2aY\RQ!$S8&fb]CN6Uu9HSq[j@=Gh0Lm+u>L!8aH=?"1Fq:st@BpSM?8F"KV5NpNA0IA(/9Qa\9N'MpcW4_B%UCO0QEO&6F\sgHRq%1"F@&K&ZNAA[MZ&u"$ds;cTquAmNQX@<VKs<#kNEA:L9Nd`KK:(l'>09\,+gABRF^R`qW0Ye7j<AUrFuHQ[%=H7rn(,<5T?7D2Z-kTCapr>p;2f+C;4Z'Vq>)L1#pGT0g\k:C:-+R)X"0C><DaQ0WV&;i]C!9++*<P)KSue)+6R`>?6F1p:A`g@[%[`\OqV6s/LfeIZs4Nu%0::3'h%]+]m@5,OfC'F;B*8KD,[a))$[_!YaLH<spA*kM$'DE(1*&P8_+e.5l9qee)2HsR7:mEe06)tdH%]/]lI,J5D:j6B`$5IKM%mu@BKiP:>OH1(I2KA.>*i6)+mG6QnhH84Q[-eJ"Z:EG##35!tT^NFYtGbI&#IQTia5@#gQT.H$=bLc4^%D'hL8bYLuoT.]:Cc]/ODk3(pj-P'j(G&aoMgH'\-Z8d0/Q+*&\T:F:;T$:T64kR8/XhOCC^-"NMTA6M/XnDMf@^0/XboU.BcaelS%((XcED>#8ZRG,E#M4QM%>)MQDl)USij,R1<5OndHo:HrcD/2Z%Z6eWV5+LH=/FqcD53\*>(*Ch4oCuT$RsrqlQFq!V5C]odSc3'&%2Io%2@n$DS-@*#;9+C#r06NIcBV^]lIQCV:DERjQg%jOOpri$+NVed.c&^0Mrqc!?mqHmM2`Ddq*F9cd\?Oj4m[TnUS6qm/m2qtI%fu4W3'usrCW?A%@o=,lWPrEW.kg@rYn;"Utg7DXm+&8HDinaEdkJ'eV=__5WAG;IGIss:_r\St[k&c(Fg#DLk:AkcRP\N7efur5&%au,3Xl,Ak>gTummrCJfK;mUDg\C]Eg)mb<lcBhVAb[ou8m-+<@l8d=\555X?pKDK;PIhpHCR(jX2NdOrrYLoZ]cS&'T,\k[QFtZ+%dc&d+Q[WSir2&k$7D4tom_-?q9$=d#?(PEIN3_9^h!a8^q.Xo!HpNE=7uSoKoEa5ZH2QXaa&aWAUb*iSboV>BR+&o84(&!UlYC&r%/s]SBbNaP$Fu?m]Ge#rtmpr(qSb%d8iH(<rUk.F;S8iOoi'.FlYPi/;hE7HHqbJd8jl+;oS\&=7nJof?5B)`^`5VY!W<GD@a!YLn%)pt7%HucoJc:6XhkPFmhT.J9Jrc-Y?aNsnA"$S?Sq"SoCZ12f%Ihmgk(]s`Qc`T(SDl@c,I<,#JKWdR#5.rr?I.\R@6(bhQ*GiDG%*B9mJ:Pm1u9d[fAK1*s42dRn[5+S;s8AAY`q<?q+*piiD5,5#/YEj72l*mkf[XJ+h)scT)T-"!E'taLrZfA*?553J1LhM;aeTu/9%"ha58V&Od>ZOaKWT0[ac7l"T6Vp?PSWichNI.E>VP7qC]no4:Ka0sDfDeJ12&!i-mR6Hj?Bjp+WG^'H`CTGdmrp7p+F*k:FJ4T-Z%$mR$>h6O,f*W#!nagE_!c[<4D^i)CS_Q=b3IIq#I^sB1GqR"H4CI%T.L"Cf^P;)QSj`?:V#@;&/nWQUjM]_r6CZVtGG@Bifn8;pG%m<<(*q\:?jCSd0XjWh5V4MNS0`mj(WlLIP4#2[o3Fi[0Bb(qn?Bdl8kf2l]FjE34+oL*)]agKbj3?b0=VC]K25tAQ8//<U&DB%/q%V<,aUg'5:6&:('#Vn>Va<GiRJ13Yugn5jNDUW#<.W81lufCO@H6=cR%^cS]\-89;gh@5g.rYrVD-90eDU$X08(W5-Z2`5A0niJV)%XTV/Vj_DCBY$([Us"Q7^.i>g&O4=]P]YTC)=g`Q@n1m>;ikl*p<F+BpDg5N(ea]6YL/1uIK>UnFpnbPf8?<8V#>CR\;/!JlimN,s%&P4E&%TnC=_.IHupM6UjPL<VPC^p/f3o5JnB'aLL$M1REdVRnpX,^@8d1.AgMe>*TDZ2$h*uC.uS3XUP'9a@j-&<('6Thr9/]tLj%1`\b\!O%#`ZK.>liOBB=*^O:U^`oMsiIjoE)mFq9:/di2R\jnS-JqF$fbeAVgug0M5T1*::Y!#4CrQ(nr1_Q\@moN,l+R.TMF$CK%0+6`4o<gkr*-mm.nP$T)ARJp2m;E/NGSb$-QB0#FW%7_,2PX)0`ot)V9tUItf*uXh9@%%*!(T-5]LD23aWOm)+D\B5Blj?/EMP!1%-H$[2.FZ(Fdh-M,qJhL<VMs94j36"jjLIbuVT9"7IH&jA')V=VU;Jg5L$c5MBi.Y6*u8f>de,Y$-dREYa?>]mfS$1dr1>gtOoOt[%,f#];Qjbt'Zrn66D/sGAnJGs%8;@7[+V^1TDID]cZ8?'Z8[cd%?SMcRU)cI-BkWMS<W'WXieH`cCD+;^@=YJr>K6sn)ZXe?GS`/R%S`dKi%ia5Z\7GuaWX-Bp9LANn\9p%q@lE2pY73G_KE?]Y@r1Gafbrn30Q>$*-+>(A!q2"j-=_I80*WF#c[l4TDC`:e0q-4G9^&\+%R?e\3?2:_sjWhLcY76K@F:\MOa`3f<o?5M_QSQ=4TVT:F#ne&X:W7<+S^31r!OsE@'!qg_,`)sgQ3CPNRW&O2d>6C&OD)QrfA7on%J`D%GI5MG071K^P+>'fU'fo";?1PkWV9t0ontF@.Y9kX9@i1n.GtCLAAT2Tr;A2'P0g>$N:GrNRJ/08=5!-c*K1ea)![5*(Hp<^#%A=@6JDaS+b*Nq^Bc@aNN@nPM#389JT=7t-\p-B/lZFA4PN<:014;5c)D=T4L2nb+4RE@/u?_(DU`\CN.$"2[[T]JR$!*#P7&Tl>B%[?RQDl?7_V=Yo91%.-pMB;o`N=ulq`cI&BE/`\mo-=c_5deOfJ[UB>M@;T:[.Dd59?@jLOZT(.LR1;>4UURKh4'dL.A8.=\2)$PH%1U[1+_p@`m*1nhF92_MI8&qEi^962).J<9#mAFL:Ci=7IW3,HSB6="gRf&+n,RaAnRp<-[%W-]E[$Z8j4ql]4mT*BShE%`.cfWE/%)4NIh09;`s_*E?5X1(9E`pZ.'3*sm+/mht2>!Ch;Reh2N1"Q<6esD1gYe_r\I$17lq5n^sBl?b6T?Bt4Sni/UXT,!,'ia*W>@"sU%^=jYK^k&`Z[SK)kM$tRTU[]F+g7T`;n<7D<3N#\U:*_S&=@SHUjL:-_>EOI?)pe@&dV.U'"Ppb5`^d+oon.qPb;"U%$nGB1#0sdp%;(V`@"Yfob[Uf;gjEP2n%+`eRoT,[kQ/ad(ofoflchrf_+o8[=9@*&H"rAr`<lmV>5D]ecPr4o`s&fpS.BH,dZLsS:H8='WkV+<\%'n`75aO^C<L5UjJee3kF%[%ElLZkC8(&ihA5,KYqs$s&!Lb./oK^%A@fkX8t*g'_MR-I5'/pYtSZB;9h@A80XRg2@K7jAK3"_._P%-]u%$+2))on#QIGbE(28LeXdsgVj-6pOff$_b*"+R^nHc%XT.8X-Ml3fj,0<Jdm);g=/YDXCin%D_Q2ZH0N"YC3;_rg9))h%Y@^r%-aa"U0?-%P;;Z6B@cb)S_dJNmNjgoN9M>('iWg`oP9++b<O$>=EkAUcT5Jj#R/+=B:?^ftq!r1b)XO_q)pU@Eq0[[][_$m8G^W34%@s<BU(V;o=n$BLugVcfYhsZ'dn`&d-qK2Gaiq!$.>$Z!$LetFaqcb-TD>+5U/Zu60B)<q]f:FR[ZVQpGbJi!?SkSoJnK(,p`JP=r%`\X);Y9'=^QUeC"o98blM1N]d'QMYE:>dabXG^R,`VaI:'c1LQ1k[q@s)<.1pquq#ea2Pkr;&a[d`FDN1Igm(iptdhZh`_5@X7md%lnP$S<1Y5uLcF(/#OSL537V?<mW*:m28cXRN_cg]/ngo%O2Ogt^08h./hcA1`S'3G1kOb_g#_c(/m`Q4j"eAg7jaFH@GO+-\$@)L%#0S)[k?.Z.eSO^<phKg'puM58VnRH1j@rf=R%HOTSj-N)5!?Zb*F'u>@`re6EP*`#U.%`#,rdWQOOO$e%r4W*PN0ioEF3%B?g0cI%:s?oV8>l2?#!:SN^,k^%G*?[qliQ-Ng6U4RPPM_FIG;5,(5nr?`KR>UkC#GIF-fsXccA>V3jr-Po<TP%Q]LtkVTV3JT(MW!G]J0t%XWa;*5I=QhBhUSX1@FJN'2+qRK-(nb=1#l+k9ol-_o:mZA#O_7_%Q`d4ic.!%Mh8]:@91KL!dm8O,N*'=Om7+X?Ag=q1P!tfd-l$%[IS_^2i0[nR*lLL+7<L.SCm+S\QE1d9^1/ubi6(^YD>ehVmM4`bN3".,SG@/3;Mt>ML%9B5Fe?ra^+K+qX!TlBuq.6%sOp/Va#Yp%-cUmIocP3UHuO+$MuVJiiqha,3L'13q8J#K<e(#5q!#,ckPi&@IW]d^3r/Sgr7lp7C[82G4'UC@2ENuB[rZ_?`oM;la[XCA0-sEl%N6]up11Wus>^$EP]q\R*g%2/2X3,.)pna)Dp6;(KjFYl>1M\m54&SAL`fO8h\3'np&,@7D&2UulLL*HGmX=rqA_00s5CX8_f)7uC%rR(6S:"N";^%>c*oq/j"o$iSalNP59&i6pQHq5cs4FV[+[CCTTh",'m/Zc#qcZNF[o'0cW8=F#I>q!=p]iES5C1k654/uU,SXpoT%:<m0l#T#uaC@grkP)aC_8/eEZm^1um`H(SFPU,JT#t^SPX*JijOqoM;GLg#NY8I65]B_Xm0!iQI<]1;-s*jt.$.8U-W]aReG%2u9%5CZ@"H$T>[Cjo<4>-H!dq&&?PQZop[(!iKlT.F<ChYcs7n^Zn%ipNgEB=UM(\(*Z)=`,:PT-5E^lH(&67Es,2+*1[jk$N#.]fb"2%?fL:p?SDJ[pk8F$jf,J3]!W;pr0q`l7^"YgPPN2[Z^7cfj7C<7nauI/c,CR=kFDj5lcI6d\+,KYZpe';j3aGWICb]d;3am/f]q@T%O05(f@%\<X+HFd>SA1`NEg"N5JuYms5+XD\moW2bp_XX9:="S8]L:l,&mh=#KIOQ%m3u8\c`MXW?iG#T3pN'1gdh;UFXNr5M;$EU%ho<c>kBMEc+Pi'#XZK;FPI%=7UQ^VtPOl,m%ems(-?L`s(mfH1`T8Fd8>s"1<-9C9Dq+]WMp:?E"(DRd>Ks'!_lBZ,EiN!)^29:X%HD8hP^W#<^noFDN]A%LcX-lS0H27B0%o5./r&?h;l%_?fhH9=GlIfWla+BL['$bM&>u2Q,n4IKa\RKWs88t'eF)!jBN.cPM<$C6d%8$g6#c$#Go5@V"/ZSm,K<(65:`[e^gH*V\"Eo:l=+=aY.i\#*V=h$5_>GW7&W##bujjP"R'WRqFA<OF3?L*cu\qRQb_KpD3-`M3-%Eqn*("NbcrcS"Zi8ZHiSHnohkh9L9u/J[f93m=.$,ZU/M6#R^J0W^Nk\[B`EojaIk\=HKfX>gT*X7>s%#/HebmVME8NYM+%YYJ*S%cL.iVikSsb2WWUO*piRQr+N??>i*;X/qb1']VsV_1(bI1ENM?a<Lt2fThJ@<o8CLJ<!odIH,nFF_U8$L=fH2_h0j<t.pnnhhSfK)%derIU*,g&NH4cJiSip!5r@^&ND9fk!4=9ZEIRVKNchAN0ouX+]IXUpbJ"FafSj-*DDmLC]%]mG*Z`ApYOI_q]Hu)s)g$$ZU\UI:4%Xj;1f*H!Y+4ksf)&'q<Lq<`X6RjRk#))h+h@dHnZT\Ij63k=:(UXnN;`tr9fSD>?I;/Jn;@X5LDB1UTHF_d#e(Wmi#3184d7KK^0%r+^6+hLBYHpd<Ks-TaQG8_J[&N?"PUUA=_Aq?.np)Y%(Vc]!4b?mfl^c10Ht-^RmkU$Hi!rp]90)+$rr1i+Cb2#hRc1$LF5(FP-C%eJ3PCI;C.\HF3;&LGeJI.#sD7IP:]_P@&b0`]IP@qs1`S?bcD6psg`&[bkG@E;Jq'Ve<d>B`AlehZ*8onU0s!QhcQsmcE'WHN/m6%hYT;3k,j8#s8(dMQe."(J'WULn$s9B)huPlmrtD<3W/IH\,Wc0hs\>Ok/HHZQbW,&2t"BZp;&DJ<p?B[mAI_t_nl6=`5SLBj*0BB%gtgc`p!Xjc*?>$?qCB2TpYIBLqVZ,_qert(T,tYUFaALU8^kA!p;VIT[HmeIprfkL^H_Pe<u^mWT*uf)^9t4QQM.,%q1inf]_2*G%k*OE_FB\.8Dr6'-L])/KJ*V.HoSqZcmp5D>s5<+_`][Y0rP*gUan>(cDnddV-h![TrRR2"B3.1@b+IJ3Er>T3]8,h4DstI4RpUXk%mEgqJGQ.1*0B_uZYPu!-iR*FqfR?Z3s5hh,#Hs]?(quR`?#SM6hqrqDE:5LZiVq-/pta]nCu#K6H=QjHDuTEhpNM)b`W"0BqS1qb%ntXg.]mY,brrITi^TmOoi0j6(L55B+4T=GLh`Cb[7n;;]pO;`"#Ko(*I(a[lkZ<8Opg8ONm>mimNI1Kg0>Dpblg4,mVf06Fn_4St%l(?ir0'2'RPH_GWr6W.I_cs:QGe!Xujd3>jjk#F]<>^bQ3o5-AVu:`[^O-!sRu?Zto'*-ti/\-;hV\.uS_(U0HaBPAg6W>bafiBZ%G0^-Y`]INKIIibSr7\X8m!EC>BL;1Ls*bD]nkK*5s5=CPo\T9PYNH-_RU7*V%.;m%52L]IJ*0o1^Ned79D"D;_dBngY-N%cGl1nj%7fN:Ep\*Ll^Y\d$mrqZXkKU]T8n7j]r^.mcYD5'nHZ/@I^\aLumqOpk^&-+08)O@G0>*Ks^sq3ggIZac9%tH\!IQs=^tjM71K7OG%/k`t3hYiJ$H?XB)S!a5?^H^NMI/!LsG+Unph;@qgo3_N<4$W`(&+BF>pUg1.5(@a#[Irc;%mSqIg]uR3Xn(j$?__7orj;Fm?[m.Q%QUn&uKhVO;_q8'Sfj+O-2XHLf]2'L8*V"GRZh)f+Gji&L^QKU(b8^3L^2n4?\K/HaB`J%mo%=iLXcL6n%I[+fa3./GpYTo'Z$kL.%ZG)R(';)G>XcmQPRbG:Gp)EI,hr!<SESJB$kq2b`#K*gRo3Qlnrr1ZE?iAU-k9!u8hd"=3SXcdnD>`#/?_Hb,ia[Jm4Pj7KVsD[_%@fQG2/mdF\Q9Y8qhW*Rcs5%$4QZ!@l:Z$T4%n)_Y0?1g5>MjkiR+gDBnCN)YeDG-2Ie\>ZbLr3kXcNI)qR`k*rj)Lmrm$^glJR-c%ph50?kk'q[4E&o*&%5:)]3gP7kGs5Zs0VaZcX2$CD%%BXBG?A#G!Gc\hL`?8_`Qd1@<h@o=6DM4]3arfrd+2$K8]bUgtE]ca5=)&%aP.eCSj1mg^-'^!Q4L_*eA)":LVFjBp%ICI?_,V:rp4chf>hgBqpD$"Z;.%kRJ9mW?gf$5pBOdW*M%(2qWgY`&!,V]^Fp$Yq=S[t%f&n-I5CNRTcTdrgn'sXM]lEM32ho"1pZ8p;Hh710IfELFXflHbYM7pm%tFJAFhe7CA1ii:=5WrPJCro^j6f^0X13a<>keZ9#C4)h%N1ea(<Icej6@b28#'h7DLqsqH@)*f]k?Ro+kKR"Rck[J-3>#VGdF$c0<P)uT\T6g,k3&@SgjJ\j`8YhsmT_L:pM'&6rc-rI`jHn,%4[!h-6%i$`^O9P"s5]ZoSJSnHl,l!Uaju*(:OcT[")`!ph`h%U+.@r+go'o68<pdlrn;Of^HZ&9Bbl/G_Cj6ZcRtdDh>>u.n](<H%Y^cHCZh'g@Uq^g&3dK]Kk+bF*mP2*[G[u$ag9iHsgZL2Sj8(9IH$J>J5JI$FKqfHVI+b'"YC<(8c[PZKd><80]=Y!<lW:g3)=ILt%m7-s5K9%\)iue<0)(ojq>i8uPNQ&fuh>Oru^'H*ID1447SNh.:q)A;KB`.$^K]8kXW;is.G2`u1qRM&<qnOPcMuK`9F6hS/=l6e.%Du]J-&s&P=REX\&[Uu/Ca?s=\hrA)&HcrV&0H9rcfe:Y9&OphI6dcff0(tkG*t$Kh#r<u1B,B9)]kmZ_^#Ir_1$$59WrHlc`Z&hJ%0;a2>QG7/Q?d+kb+(fK+MGG=c]eN`C>?]A+=3`DAA\NHQhn$5a]FbCWiQ0CK)r\P?Z0(N+1pg$$bON,T2?-IcCA-c4o._4F]"FBm%%qE/ZDM\m,s-h3T5<Ag?kHRAliuQd(LNd@:R^:.&T(TY,ENq_%RHij,bOPCUc92$L@>fHiU`MNW>Je\s9QRWhB9lop`U[\#kJ,PS%%t(bObP^-IE6Qb5StC)+*bH]V%QQ"OB-Y&Q'->Gp5*p,gUL*i#9>*$6\+5HCgif<4SA"gt@008(RiTb'a+i:Z?a4[Y%qpn\lO])+%UOW+1cXtn_mnQ#"!WH_HpYNFMFQ;M9LY#5%]_;9=Ks@o[h6j08(IE@ojQP^#QZ(WIP[ei%2gKi3kdg*8YBE]H387a=i3Q)6rGZ>Z%b18d`:a[$cJqI+PicE,](^@.WfG4>;JnYui1K^ecXIksHGPpV_>#YCQT6@Y%dc6D'PT?tjU!I6l*'$&Bqm,N@Xe1!&\#t/L+tnE,%ipHU^2kSt'G2q/SX8A5IgGs[uq6*T&08rDn:I`=Jj)a8(5B-;Yh%q$fCgOc7%b%ecrM>3&$PY1/H):tl7XoUMgRB/\043SkqXUg'%^E<0$NH4.4WuK[)^L;G/)qh\j+('Kmc2GDGlF0\Fg9pn&WL<-mlKu$tgFWZ;Mog/#AUXUGYP55;4h1%Qf',]VIl=_1dYgiO[o<4o%kI2BtD`!0.**kCUjrDOngqs&!j.#G<5JOtHq<6.NqWrk5UCU)64V;L)cMubq2t&n>E9hTDW2[&2T):X!Q#Uhkg&F9>(A5Vi+)l\p%iVN'tqu\n+q;4nDqrZAP5<esaoCSgLT:]hE[Cf7-[`Drgqbu6j6eLJPiZ;@>U?/kFVN5[;lo<<Mk$/bERuE5#c9%ZE&&@ig:X$,3%li5/^s2%%Aa7lcSg4\mB[f-*joAeE`+8Z:TNaIZL]UZ_tpt?Z/*<5,NOlAKHC&72b2mscTqq5PEe(\*spq9=L!bJ?O#E1:FIQR;G%j#<O0If$T]:OKNtl07Nkj3_jrBY/c^jN"0J*r<R@0/)1lI_k1;j8RZT^jl=Cd>])Phth5;lhJ0X%s)?4p.<k#IXUs:[r^s)o=9j.%d,tsiH>NJaq8Y-1SGDOLjkI6lcMI3umGOsZ(E\/"RAoo3+3`'t)*BLc?$mVVs'Yh]R3S@dF)V(Ma!L:6X8UN&gL1lT+l@b+?Zo0.%lc#Xrr7$_P^A.-AMs1>UrIqT0If.R:a$2aiIePc?[k?S8e+Vnp^Z'rc58^d5g4@S2]oMhq\Hht`ag!MuGkkO44PhccC1$f(NkJor%je^_X_qb]5^]!fSJs.aO-Qeq.nG<!R)nY"aq9_BFk"3&\bCsK%\["D_c3G@,7uiU*[\#^-'?>dZPIo<.?$t<eT&-j<;1/9:m:+oH%AF"-IJ*S1Pn%q=L]ap*d[uXmGEcuf1r"M@Ws5U:1<o<Z^<rTsOG8<sB`LYb5BK^3>cIX^VDk4IbDuIP@YQ&u4]:sK7LYGT`RqpB<%DuKKiB90Jrs)@\K[%<oH5Q/Y$hgT3$?addVhYOlVd-j1P>k@LFr\s$-(0a[!^<RP0H(BDiV7ucrdUsrmK7t7[c?HKjrV3-(_hBo(%^Nako_3MVC0:_iHHgt)gZ/'RFmiFKh)uJF4+6sZTHf=C1:Nje&:4KZaqtJRmXo$GZfo\<m5MF4$6&St!G/*lmrqZQ*-Teq`d=(QT%V;'hT?ah*CDETt"o[:io?bP;E(H-`V[!2JjnH8&So1V>1qUbr9pgO3no[hu;m-\-:(lmp_K0OSH_I)Whl](3h:]Gb'd;Qo)g[X`.%fY/o82gucqIbHbnkCb94^O3YAqs5E&%t6@,J$Ep]r:#=H0>?)N5Q:h4om1,Xqu#EPE94]qNFlC2qUk5V0@mUn4WBG(pf"]7F#D6M%0tUd1o%31DTBpb4N*dY+<6q34k/RjBT9!E'C@+%T`LcFO)p_9lnKC&9k2*e`0301jBmm$$J,486o6u,#Z+G-+>^S;S1j&9KManT/%Hun>)2Jb[rXDj<]';+aln?X.(XfjX#mTt.Car;G9gjJbi="c4sffj_[ISkU)]_V6_G@/S$_qOOFrnO9^T=:ukh7S1kIii%"D#A2n%I:/C3G@UO&QXB*<=+8hOeWf"#M5Q<[Y19l152LOgp$e_`F+<?JWD-<H*hA\58m3;iHZ9!&9_\.hiu]AV%<nGVFSGE'c^-M-+5*mq%aiCm!Dh%E$/XtX1^KgX&cW>Ja6*@BRj]@f:?9E5oaO)eNI?o?=f\QMeK-b.*ip,m<43^FKfODmTnFW?f]R`AOI'gStnZ/XF(U!aF%Ebt(&DOL;/IC/%pND$l&rHRqmR")l\Dj.id^$u[eJif>la4HrTgmtEWAqfW$pVl/#kKZ<lhX8N6:V0C4H,]`?O$A'cji./XLYlG6%r0R?G43b.3GtW'9G3TmXo(_M%Aq"!2[Wq6*KkK1q?fLCYl'Ct(R0Z$:o2hFg_ZsOe+91m-X,UmZL3j:MrVYC$pU9MWO!b`R(,iI.%-KW!fr,=9<>mN[lrK"7';J4Ab(V$)crTqk4#NM.H[dK`3FEH=6rNC:s)c*&S.!OkUI^.]VP]u9Uc-sFD?+Y:J[&[s3`i\q$9B!^l%m5#\?5FaY(qdUuKG>Hi:[l;T>X@JnLXfHZ;**n[k:TbeK[JBJBZLlYt[AtBeR^?<`5j(nV^Ad0dL$mK.g[h=e[m)il17/CF/\`0u%SXf>a*Q'ObL"E18a,[cOg$eXL9sL`,8!fuhD%Y'2+1o,!1&g^df,njJ?2s3@p<i'VKZj,a+'qJSJ'.Ahf[M&@f3H-i$u_oUp!MoV%rU6!ZkLNEL5P-HgoZ:[7`P:%mQdY.:qrmQ>5'HJN9?1Aqr=qU2%PCfVo&NU#!B[gW5JHY<[rsCDit$;DI7<r'bBoW#f/B6!n]cnZ%bNWjk<GXm&HuEToRIgAi702&A\96ucj^0V^^&72(r:9XU_S`R#[XY^@^[SL-&]H0GPO!q+[SD8Ba12AV4^UuKgHKWTA2Q4m+#R!V%_@m(lce]c<^2"n%qW52E1L5)gHkEj6T)<PF^p!7[ijJa_hLk3*f.N,BRk.mZn]OH#iQ9*A]?_S/[2A4b%km@#3;g=[.:'ISr5Eb-%kP'nKnpNQCVa#OgS*M$&?@Nnq09l%Zf%'^h0C@K)\8NU>;R_/UlKJ"T%H*^3kAK"2I<BJkUVjQfdOBq@g$-1CGFr/Ds+fc\5Pb<1%96Yj"qVfElcTYLATI1dbcp#2=q?Pd>7gj>6"#!k<G:PK26@!P)2Y"qH(T)4[rHc&;,sMA,ldHra5C*5*rl+g3U00NhBeS-"H=['.%?kW+]V'd)Zr:Bc=XfM26]\<5QfWf;1TN=9o[.35&^/Uk#Y<KMn_=ZhB?^isfWk@a>VSP/Jp90PF_077cDOe4R2rrhE=;8e_^4+U<%rV?#p"6ZB&`>"QMh(rF<G5(\'n%ZhiGV%*kks$c*dc^?X/r5#&\Z`oumd\VH3W*i4lbOsp5H:oi^&!-Rp6/FQQbN%S\!%>>2dW*>%ci!Li/`K'g*Sd!'r+Rp?+Q(knT76WQ%,YDR]eNc@q22N[;s:C@q;K36j$.q$Fm[@Z?YnO_pY1Jp%?o*;HaYI$_/g83^RVH>mXFcL%]De8VNb2O%\[$Y\eZ\;n(I#OI],Zd13[cUh-H"cQ?-O2:rtt*L-SJj+C"WCGdbW`=n$a@(:ECO<?8KDTafO/Im;f4DaX->nOeW7L%DZ91t\JO!>f.T6No@;%9c^%jh[Cuq,c)n\(4--jG4?C1-T1bO=?i'$'eOq^mU`R'X-iV[TGLN+B@K"]2pd-T+Ch^kks4$N:Ic^4q%f'<d!-#]0jn`fo$p=##)m/Gd'Idus]F6cOd3Uk%D-K&dThRtjDgi-u[?@(YLMrja-Bp3'$c>5XKOI#;&]-"F\DJT"6`m&-X^Xr'1%N^$i,R9AR.T:XfJFRn%AB(+?]5BkCfZ0^oWjcQ[tq%kEmgq*C#rL7uac<n-[j6c$E91I3ecPoo6[Q2T.ppg_#p$Ih*?T5-8@B.Wi%-DI]W\>UQFhU-T.fIQa]>lFBm^!h.&^HK,U1`S<`q8U[C>@2jKTNdq;5Q!Xnmp8-/d$:h`FJh?Ei8(_pNQ8Ilq<?keXU!1$rCjAh%6iGV2e6a3b%e!_QIHpWH)qTO"50S5C'S&t4mCiMg\)Ef,Bm35u^HB,VqrDs6%a8MXT&!&c%U@c3n+hD'i?-gH'(m<3L-0h!o6P]B%fo)2pamSq9ldnWkI^BroSdU')?f(VHX82[[big"Cs*hBSl/e\p=8$9=OVp^IIsc"sbKi@%MdLr(lJkNaG>I'?Mr=L-7AK:#p^%mh%)h%,/P,J3/rkd@GemE@^DYCQalF^aFp?D63)p^G1DpJ[ODb7u-c<`L-laI]-VcS)[euoU6NFqY:H?/!:oJ2UHfC.DgHZ[O[]VLEk%gA^1(cLZ<Bd]!a@)8E6Fb=<*/meVu/`Ch;S?Te;-dsH:&*Zok2Q]:YF[BLIbk+`H9rm]6:B.*CZCipi'5LoF551ht0bU2!Bd+&#4%mp="TH8MGtkPQl8/s>q;p<@ZAmp<-tXjHWeqlsALr`abb?Ei8DLTbW5[ouSmNh6&V#HM>Nh_;6Ir.i5*_[A]Mo!<8krp&1cB7#.+%oka[-f!GC%qXP+rU^,'s%o$;XpM069E\s0oT6KW(.\iWM]'ajQ9^MV^-]b-`q*ReqVW!$">/4tos2JELro_sAO*B`_NoeXKm<:sI%Gh\lM.Ce)2nHsCuMhCsEWRK<1jotCks7;5pLDJl#mbE39Y#8rDEVJ/DDdW-\K*8,kq.uPuX:"4GUSi%4\m+$*:sDu]GkIZqpnJ(T%Ar40=Sa5CPmelOCq=EK`aN]"P$8$>u@Aa'NKb%IbL5bUS?X98g^\R)H[B["2f<`)5?L?PDhtqo:2=L>_%UikaG7ksP1;pr^Qef.$%RnQ1d_n5ben&amJBC?jCr_O;cIlGT0s%r^(\;tRfJ2buC]JCDKgV/$%5bDu:gQ1"gNaG4.\GF.0SZ5YQnaEINrZLqfHigepHgg*f%k7/F%kl+edqWpA5pIs,'$`.'Gr8t-5GM1ba:LDpgU#/a.2Z7(hgsV4'H(1ac"a5l0D_5G:]RB<'/sc%An^2Mkln72rrUU*:.M(D4%I\!c_?f"jI_sTk-fs0?tCkL=*CMU-Q\A-TE):r^'fV=dKs7=;0Ve[sSr!an+H+M!R*p7/L]5VT<m_%V!F,agaCHAk8TB*]ZIp_JR%9<\<OB<TpYRmsYpBApQ\Ka-N)Hq:T%7o/fa[0?7a\RqJ)rVid5gtJfA]P$^4g*6W_gf\uE7mHlXOJ;/*Ir<-A:Ya.FH[da'X&$3X%,VX_7J(MGI>k6T<r9V7I1lktG]mfepAH,SH^A#%Vp>Wd#*^,"^;gfPRFm%<Rh*567hgKh6d?D$SHS7,>4,HrVM_1s+^*lk9b(D%7%^;#0l]1;Vqk?WkKE:^e\Y("A39uTBtFM\O$HJURNS+e"R75=Nu?K6ftd5QUW9L%>2ld7oRq#2B#@qW[)DY^=h:k4%l8A3bPFQd$"%esZE0DZ'1YP.X0WkNfUC"4!aVn5EGah>_nPs';G"2If1GrWC>L>Xfc[=8cN5])MDK[rrGbqi=gKT"am_N`hp&]`X0fr%lmks2.Ub%_B4N4G1[Yuc?T?drZ'/+BPr!0cL1#_D_%.7]Z%oHNo3d0W#TXTgJHVeOf>b."SCE/CI!NPd?Z]ugUV[lR%@Rka4GL+*YE_LX+Nrr%ZR6OT@=)h)lo)6*8%Q);qr5WeWDgrh`8Q*qIOMUGhE*dG0tblkYuW_Y#\u/d)H'h@+b3o]Xpt"k*QGKBjATRVnlj,kK5gEQiA\0a%[7D61)a^eOL"PW9("C_GMg(smC?A)8a-%E:HS(L]Zp\"HoQ-qpD@WQW:k3+N-EQL:Q2s#fL:+]>e_ZM<3&'9^B&ki(\4RRhkR1*P%^m-@rpTN-TRf?QeUMLgCjuJQUNP3t4Bu/TtCQ\%HrQqau/q[]*kEJ-!l"G"=$VqL[DGF=f;Q%A8MTsB%_XD(n=u2J-f&glho;Ro5%_WMiRAigH9H=Rrc(qe>fb.RFaZEK>MPYPfB`V,3B.lQ2eOpro(hH"na<Ig^$ZnWT4ABPrgjj(k(U[0!mp:/IaB=-.nRaTMh1ai(=%lph`.2DEVCErMB0HLpIu[jK8SOnjfF:X)?l]kM%m53(7bT]\hXZ`!k3NVc%UXX1j:45TMWA#6V7#+Ut.(I78&O?&p?V6X:(O5:?_%>3q6pR$,/:raFS2:iSWcA'SVT2U[Lk;nji/8fb5);Lm3ELB.a1Jg$(0XA>f[<Kjp;oguj-D9[<hIk>]=Lbd[=9Ked76_b&N%*;VM%B+:BN;1bd%R[q=#89M/=La(3XSmPLdM@M(fA.6H&-:=LZDm5:%H^ZiVp/='O;1g]/U8KZON[DC90%/5nV;U`JTiA.j4VNcCofF)*%kGYlQBZD"55\'P!dQg@8N,iIHTsRS6bQXMX+-d\f-o&^-UIrLTB7dD_1!q/9mg\nknNk^`muBN#5i<*(hNPsZ-PEZQm!r7[-Qb;r%p7cZ.lLVG"=[*ki4iAI53fe+BGC`d>U*Vma:f:&@;tQ.Hehp&]+eTDDmtN%#n@^YF2fc"J1o(1&IbtuRN104BoXtQ1)R_sMCWcM0%Li@m\e7I3\2tSf+EFB&b+%h9%'.r)"F<cI]?dp,\MH+'Sbb40<:BOreANX`aZt8Njh!FYMKgm233`/&q+INXF6Pro+NYq4h3HNY(%I]`S^`g+E][d28*H+D*2Dc0pG*F@GLdj$0dG!'kgYt]=ikBNo':A/6N8!op"'Ulju#c'unH.u9O$E/;.1(#1oMB,[MK-ZYdZ#H(g%*@@6-Vh([qVsMu+[R_$m^$RH-PbhRTk,]"dS@m)4NSWi#%]'Z7MJn5J"0E]u[L@J+l='E(SDS"6c8-eTS8eogP??O4P:(]YYdXl#%DW,-\jA2c8"(uQmln9C8e*GA@DUH%beE,Ic[<dW]_^!qm)R%LuJ=@h5fttaB106&sTX@e+Q"=[>`C:[1Ole#W=&_qi%_Rc?jQ^FI%<'P,i>/u`kF(=l3>2H\Np!7L"-gTKkj(gl,0<)\83%itU\"u7'&60`D)FN/S"`?Y2q,=ZK0n'ra-Ncd^fm.5^D;(l(N8!TkB4UWJ%O775L>41Fh&<T8EW1F\!?(iK2b4(Njrmk#9IOQ_t`ai=t'&GWqk@IA3i3_6qYiXHh)UuYOkX%#K/Si,gK(:E=`Y$M$;k>tt>WQAY%35(bu_er@s`*RO4L:m^?cAOFXq+-$49U"2[5oGSu'GLKeHu@00^<8W=BJ[!#G)'tX[n"F?g[jn&gt\mNPr%Yq)ZeDa3c6,/S;qa\%d79/9a3M][fqr^HTnFT,rlO"ZE0U-'p*7t<>Xjnq3.c\Ip;s]OonDQHgYH3&*GIRRmr[4e*<KE\f_92Rkqg"6cF<AD]d,Y9I5&D*%p1r&[/M-OuBjG-ODna2o=pq;LljCfR&,Skodtb&_%F-9/c%R3)`jX_-gb-lN1aMZ]O[]sX/Yi]^WDXa`b+35bGjMIa8q7)-KdcX+%7MF*;0c`cq,>6\jM927,Uno%L-(n(nL[5"*>MZ4-]j+jbeb*NML4k5cBkIpplH\o_UEPsm17ld^8ZJpO$=.@6U!\ftqE^(WWt=Wl%"b1_a$p^b&=SpC`KN3XA2Hh-UQt"GkD8GIA"Jrn7'!Yr2ehO&!#^!L`*V[B0GdHs#R]o&QZ3I)i]]19af`g.)+BiCs];?VChjNJe%,5.*QG-jI[RhbmVUap*0ppIu6*IfJk-4;0[9GF8[+(V9.0^lro`Yq/AHTGB!P1Gp<#YZg_e:U=E(0p4?O`=6G),?8+&N--\E)nC@%/gt3I[+d`eN,=a&2.s9RQ6FmPJR\M<S\ir3;pu!+1T!aPhndjU3s<1C+Li*q;)dV%+?0>84Nhp9g:jk`2BZ4eBEHn@Y]_p(gIIj8%=HVqoqM7h<SdX3W?)M1q6U,FhnYTS,p6=An""J#?=es__ms!(eT7c2KX!D2l33mB$LOpi:BOV*7Z<CP+SO`S&Kn'W+(dg%#*eoc0%jgKrmN=nR$p]m;ldMjHPi-4kDK'((*SY\``9\s)iHH6PZV53[6<2qRfO`!`O9I\&i8"?7,T[I?b-_nV=WF[jk6e=91bANUi$"m;6%/^IP_1Dcn^NHWY4^_KQ6R?m4FY#M2^ekQuP<7r`MRi"c=*4n*BZI0GAg@r<2G0EQ;87dV*A_G"T/m^?FE,+u5.l%4)1TB2B2cOL4%1oWd11KB'n=jm(d09^sPPE?YX1l%slR>c-SL22ZQOeRp0,hp@m20NNLLe=N.H'sqr`YK:.!^]A4eNd?5,)U8f>W0tefSUM'L1Y0,%*jR_JLis%)lS$d[ih6_R=o26-<><\eL),3\Gc/J'MGK5^^GaGBd'eW\B<g-&G+g3227=!4,DS"bRU\Cn)[pU?UA,-aBi]qeQ)2m^%;e+DQT_+!g9WjBs:oj*884>F/hsn;ZkrlNgPK)5p+*H)6m*t8P1QHNVgU.!2d3.8[j41R@YohG*&($7>jtY':2`r@&Ji^Q0[3&*W%fWNZU:$a_-\EVQks(sXQA>1g&=T!KFd<?F=04J-')oli8AZq%;a)3YQd)g@j!(ZB\r=66,gXB8KIauj_9%s6*3`ge\.KU;GS%0PS%M%%c5rX5K3e-7=Ap-IpJ)j;[^E_P)RJ$3>-RA?OQ<UbdNAgW%eg[GeqhFgq>W#Ne)8(e]8_cfL5IpdN,E1mDYUmZ3L8S9k3\]b\n%c0Y:"EDII0qPlZ,X![Rj^Bu4[E_S<F,ib$a4oF;[T;I?Y4>d8%j!<d+&5kI6Kq^5pc+`Y9jrlb)qRCBWb@tQis2M\?i/P9nWuc<S%R`Gf*%s5HZ%qYBmXC:6T+/XqjmlDHoUZiDC&p9dB_gLAJ.:`PsW(G10_O/S'MIqe`gFXa@1:ddAke4ENq5mtbLKpT)GO;*UnNeK^%N0Ol_[oK<d>"\e+U7^,eFhs,M+1129H0$+VY(,7sS\$*?#WMs3`p\n+\')2EP3B1AG'!i9Jcj@@'78pbRHq$8,K$'9UR9i?SR68U%RORpt8sHQe2jI'``*V&\PThLna4BC)9<d=Z)Z7U6d9gFa<*17OIdaim;5B(&?2d?@N?hSB9Y<,f<'5P/B$p;jGu$6*ID'Fg)`#j/%bu\=mO$'U%6/V"R[>jb31'E#PU+D=?7]Z/rFJinE!/LC'rSjk38>i^m86G2l$CFd:p#sBm/94sPinp*:2%eV@C!s`@T@*"I%9F's%/5YIj[6u7^Yd>m'd1'lll_N(k()k%&$Oq>KOZ<e#1iUg]72GIh5[7]j).d5aF5"Q!]Uce!Eu&3jGt:RZA@*2n72?dI3Zs/h4>`t[%2etmPE=m,Pc7n:QK2ZqG.bM2Q>VrC]Dd;:rU%@#_c:*Ap2dP@9).deq1YTc9]Es".c:(+Pgt`?C`#*/\5%c)g@0goid?')o2R7s5%gQFT:0g/cpF#KIa(>*;_k%qE//<,W!0%?bG]-go,$#<cF`t/]ojjCV_aJ6Co\2cYH4&)66KqK*l7'h5\8+J9ej@Z\i"\oG'CQ4"B%Ce(5$O.C4NcqAQl0P"[#q2-,";#j@eM@J2se[]nd/M_)I[u='92B1Den)PTE)I(eeQY88^VhHbIB[_$rA/D/@$.KhEV+)CsUFEY1%1fGb@9iD]W\6,2>7MnW3`,^?$";a'uCcd!"rFiiAM29Ia9+kl,OqB'.><[uq-h%oh"Tro=OIb5_k37hCfU!uoJ,71a!j**"e*\N9%&,bXO33Ln`WT!Ou)1J(7PNm0/<Op;4G=mblY1i]kR:+0dC_M^`UFZcP)6LKZ`a;\NpugEpnoZ@pW0Q%Q3X_7ij]<fK@QqW"8BMQV%[]BuX=,cP'BP2m'Zs,JK\qg1FEaP].M9sm/TQZ0Fa*q[ojZDjf2C!]SRFI&,fm5Q*>?\L/q_>Os0Vi->Z?1p^g=S4c.(k@!bai,>%=s`=gFadj87W&-Mfg7b*BIqIBXYrVUa4K:o>H30jGqt2R'AlRU8_9")[Zb\"$a8-m,XP2%G,=g-/if[f/N0F,8&1/>nVT0J);8dZ%/e<>!S"6O-IeilG,@n%JhsJk5mGuTb0n"<:N"9\"*p8^%0+IZ0/P$;tb!_`Dd]_R4#rH#jV7IqOQ>(&Zc3'JujP/'Kg91&UiXu&A%%V\4^c7'-)_F0k"@tH8fP.Y,S\BRTeoZ\ph'HKiR`_ZcRgnm5lnYSIOFb)]&_S@<IE:BAQkOU]N3Xr`9N5NMh@6[E-Mlc.$SW`16%3ZmREUCU,?osE#^IFA4@oqW)&/dMJTC,nPAn"h'"`Z0$h9.n^R0uDr)GFE7`)FNf*m^lZR\!X-$5?G%qd51SX,:k?VI9hrA]Oo7`%>T!(3eBAIqlqK^0;)-EEfbp]hS$4%8n`/[b0AI-qb-Dr>BTqq>SYEc+PCPhVh'P)sm'D0VWT7;"oYW*'Sh$$n+&M*YAesL,dniOc%pP<n9,E@Ut[?3oG'o'6hWkYC8g+OWob03fVaF-JXK7_Vchj\ea3FW^c+pRU^P6<F+`5eQ&K*/=R]4o2LRhH'P.a;Wj&i8;X`I?f1%.k.>O8&<>$rI%sE9HiU6-$X([-([!$fOdqV)(;n;bXSdo*a@oVjZjf1Q/5<8]Ls;J0o;TnZS*r#jP!?\lE3oLW>HE..9e$igZ$p>%$7i6klYi3Zj/UB'In`LtAsBjOMRKZH[A"pBRF!"]Y-qcP_R4L`DG-+$bI$d1\+2.@H?cUP3Z0`LhCW7g?G*eQ\+b4Kk-N#jCW]dZ%3_l%?c,80jZCtil&GmN#S)j.Y1.o*M^XFi7.V"r@9?C=cf:,9%k)AQ+h)c):YUq$=`8n6CV"_b<e2b1%F]?"$GG^nq#e.^o--$1a%Hm!U\G,XC`70_[<l3SO#)_I6m;q>b4NL/ut]/lG9/0T?E4MMUi&n)Z)4\V-m.`-'s\=\).^K4QW\A'3o(\5jO.?V9$;]e[I<pXt!%L^L4l3gt`q^]j6G.G]>@TT*Jq-j#k?:SCnK[2H#\&!d&4R$];!?$;ulQS8Q"JhKLYaZ^]5_gh$CV(//D>tH84U@RSL`4Dkmi9rG#%?Af7G_RTf-bhQ;Ve`2kq#,=cG:8p_&r[&XoAo\ms)a_O4Sk-WCk=G!a4ia@EU4R$E<P7\^4n^c$-.5kYP/RW(.np[TNas!fp9,`@%.?0RJ6R)(o0W&MTHMmM2<n`nbVBlh6ni8*=F!*?k?/W^c4N(LFjMCN*mM9+C#)/WQ=8mUQP\<?nfCl4Z^#LfR8>bd%<BaAqY0:S^%D#V+0(OOSlpmQ4oE@l>l5]Mh4CO'OUj[-03Rb3&M1t-7*/A77>&V6rLnll)dlJtE:U.+UF&Mi,M@5-hGVY!'n3R,h^K!Z#_]0N(B%BefT6U`OYZ3gX)u7s`#g,Z!F!*Ci1/]e()aLdR8Co5Rb!G))ff:YumbGneqiOu%5tocQlmRpX)_o_A&>Bk-+0.[f[C<04RJ78>Ja%asDbCa3X)Y7)h$S.7)$A.E_l6NrU7@T<^U[#Sj5p;5+QPoB)0uaj>jHR_gBtVTJka2VZF_3I6i"_r/)/j9cFcp+Ks.olcRW.4'.0%MS`@O`?Gc>N[4X$XG@k_i%[_k,$lgKn4\sR#>datOD!:4U1[Ai-`HYs"j$#<GF:5?gJ]H,8;lDkKRjIk!b]@K_]q><ZQZs6;\W[t%L+2=%,bVD%SF/-8\a4TN`$rm5=qh6Ga\7\X7l6HSBB/PL<0YU,]k6aKi=<-C24C)9hUn\JAWU=Y5o).fN>1u;OuoKS(0'G1MA1Hp%71%L5^:>)g&CMCd@3<m5CaBHQKW&6,/5]#!23R[R(hI?LhJ*IeIIa-q(G)j@^5Rjb<o8(W9TXia6L]U^&e*5/X8J>Y,SS1/[qm=b%7Uclu4f)O^R5A"=:U_TB@]pmZ[@!>[.JcZTUa<-rS-Qa,:O4rk41Yno+c!L%g1BGY%>oY>n,1DLh<,K[2rgR0VWeO25_ir$1CTo3%`E%:I\:`,:,N?P$H;jOk>"TB:k]2r'l"\V?G\M\"FX=B#\Y1F'<KR0hN/M^oR<f?,31.;H6?:hj5$=c!f.mep9aD/sO`(bimQk9!%M;2GNnO'VBmG'_%&jb[f*ZA"'@#IAl\CXY)Y7)USD1T@Kb&_*Tgs(PS5b0][28EhH$&(GI3@!b40(fdKrQN9WA3ahAh9qaL[Y-.=%7DOXqk6r+K;/oEa&[[L._oX]4oqu20li@e%hNKGp(QhK>`MS*]W)Jhr4<mj&#S@dGJ4ZS-cG\`/2-)$CPS?5[Q+bZ^6+KJ*m12Y:%<`,O$[/H"WW[eZo:?](hZL3UL/"o#aR*=hq$DP.5lrA0sW][(!S5W]5E-l/u&gGWX'=cAV8+jMbq\=*jSC#W/SSRe!I,>.;Ar8pJ%0]bQkZSKImaTVgL^sq2m(>]>1h<=PgZ7D.=.O`K"?fc9D"+h7SoDTubbVfsuo?io5V:.^$6)#9RoB]rN!b+`HdVK52CIbo`pQXu/%\fL]Td2Xr&'h#jjj[fA=7Ok.bPV>)/m2`G4H6b8,a=QICTU4/SD1o>S:a?#gV5S0dod=!/pjH,hemSQTYnq!=1T)MEP.'2\TI#FA%0lV/PZ2)@*>ajFtY%,(aJn?M;P)"DNI8,"pRQO<^%Vj?Vm5Y7o/,A:naiIJ-8ulepRKPQaB!e*ROuf152X7Rc8OcQ(LI-rb9V^>)%3Q8?@S#+`Bbap:_;@_Ap-:HG3@nh0g/O,u>%UM+^_jn.[%7h^F(n<^a'b0/@`BX?%i0Fh7o<7*!mTg9Y_5"rqWn8j2b3@u=:d%34%6,?@:[A)lN/R"eY.f72Zpn"JJ`eh8L?tnB<Jk"A[74Bm=,[F(m=e)6tB3TXl>cZ"`LS^.D.5rO&&,s0bm`p5BGm)u`o<kD>^2c20%N*\8@7OS/RBEQpQHE,Si3k&]h_:XM%A'-ArF0D^1,Wl#k/s?41!GAbj#np7qUncQgD4d;B=8AZIIoYYEfk"3WDUK5%r0:R?HaE*u%H.^XahT7>IcN`UuddJ8<CkGbInW9;J@>@jK3L$e1`2IL+q[:dgMTX?=rIOVOk`j1(e\n<'iQ&`$$UPLLp;i/V=]'4GPR_8d<Almk%eQ*RYrG:,lpYar!jGmK\1.j<%E\2.'P`(N?<07bZ[;2c9ATFFdad%j<d]%nJ>CoVdrug.MCdW(m@VA=t_p;?(D(u&B/[T],#RfnM%ddRR(9%o_uNer[lb&]9###nm)oMIA#rHHE6.Z-.UQ*,?5Rfp!<%oRWBO@>:#`$hB.b_aoU;&Z9I'Dl(PPTa$t/7TAoQ0kuEb"]G7%ZX5%1:>m%I;/B<rs(J[;%J0HseK%Q5CTRB#X:uGhfj\M'rdX)NY:R>ka!'3DZA"'OoKd(Ka=`6&'sp^h9%<L#8WHG"2ZlU=jl>9E%q?VnNaC1\1K_A^"iE,##mnlVAQB88I6^_GLKiZlCPo8KZ.H\7)1os$g+dqWmIT18dM+2"tMHL)]PUqZ/=pt\emEA<Km9[AH`&l4B%Wq)BlO3%nCqX'HM\#L]l=%WC5L#;:FXqat.VV):MJmf*Eq+8Df/(G'+L7Zd-8/5[5Q-Z&N$)Q>%?#c(#?V)ND(i+(L6R?nX<(Wi$%;l/kJSlP&q!cY2<Ag<0Ah:T7A`LFqfPH)Z?Z`0AcGdqm9OCc]7FdPPb`Aq*G`l;jOG'VH"dPX<VZCD,SC/102pN97hh!2Uj0"Kh=%7\?s[F:m0OFHu6OVWXel)OITm;:LiPV-u(7a&5AlkU%GfeQ<iU2b5)@DLuFKmTP3CNX$k%s5]RbrHGceZen]1r%O"U.7n).42'X,%A3>`eqR7/0e[S31@787&Pd6:>]K3M\*tK=kG1hoEF?8ce\r2tjak![b,HhKI*Afc"Gfm.d(qgtK%kYC-M@E+!/[us^(*l_5A&D=Q%YIaR589N%3)T)nE'33Ki/Q%W99dWGtf@>#n.TbXqQFp6?T3KmX%4%CZD[`2,cll24><E^?Fa!4ffi36We&CWm.'"RIgS>,sZ)BeT%_;4l^7.\W0AeAko7Y;-V.eUKQpd=%7OrhKtN%pqEnqAG6)ak[Mb0*O@?i*=XFW?\*NL'*&Ud8_%"$).aBbUl\&7]?'dqDBmitL'W%m[?*+Vq*+t,WD'_!`!6;0L^h6eRQbE+,5O"(d(l,7ctGY7<Edf<<O>rDbDUkR%/k+j?Ai`:?5H$jj97Yj_5N'>^1;1pbZ_8>'tYL%>sGbQ>c^dOGuRin3a&EddT6Ws(,q\D-lB@T)3%)mZkr#EC7Wg7GIW`XU0Y1SN;/uj0?f.qSJ59Pi.+DpjH.c'1TAHn5`@9$ApH(B%[,'YS&LmU=F77HkW[f*:O_0a%_5I&rkRjD39BARlRdu0+P$?BO'o>4#o3@DE'@lm#Tf()G0*oGSaWZ:`1?J3-#Br79"k.urXH7jE%Q3GK$]e]m;j-ir!M4>Bp08i]u+Bn;eUPtd".-Y:8FX/FZE!KsC;nRW.G@0Kc;Dqs+:O_;<nq,s8bGL;Zeu@^HeZ$l83T+fnW"UX5%i-3uK;E2RI>j+#W7/S@1R`NEiCelXDA&hLRrjs):>KJN>a&!E(NZP'kUJ"R\90;^bC8p8iQ-G"U4QB87kZ=?Y"ThLi]ZO@nF7-_V%'GF1i!BZ'a;emtLL!aZG&fC[cB_IB)<E=7Ikgp7kJOiq>Smk2">`VnM!6R1P].Q_>7G;4Nm[-ti7*MJNai#fXg:m]m4,453KB"X[%T):tk'r%e@:B7e*iKYEHVq;(UR\4;\UM;8taI/%1d(knH!N'e*jPEp]D;sX%e#Sd!l)U&^U`TJ*7B*@dRdN&cYI%GS*]^O4$%BpT%*#EMcU*K?Z<<b+qKe`I\rJWp=A3pkjoWUe1?)bCMV&O^COC@p(kra/H;]4GmG*-j=O?GE8eF(BY^n)+n[Smn4(*th9g!EXt,*+ug%S]]kJAXi7#\Jc4Ab:()0q4n5CitL]@:ct&k03+_cK@_bHdYi<;Rh_1A#!&f$ER:B$@s>DJghN2kQ=hj^<iN[68sR=_oRp!+,/U0<%LQ#a&oHc6"J#N-&<(n;Zc;pd51TUZR;RUUUf\"\**&,Ceij.Y5*&]alpJ+Y;Ka#OMPB(BK)_MqNS@C(/;L&M:@r[>1MoRHJZQE*:%geUVW4=oZb_';NsXH$Dg5GuU?mCV"O6ogCVN'!Pa22/O[aj%fE8)Y`T/5q)T\+"*d8MdcHKZH:6TPG=(\Qph:64T$n[qkL0T@jkQ%OfNB2i)q%)Ec@ufc"g2R`FG'$7=R]D]tAT@Pe4re8GCtPL.?NofC2t<O:AM%"P)J)-NuT25tueB<lV,dO+")#)TeaI8iZ'-bIX3W%4&U&$49XE^(,VIPb#BdC6[EiXo"YGdAT\^XS]EX?U2%h+@UOIaQL#n:07)U*b?"qGi?#WUpYTqR*cg9^E\SYVDnb1V4a7::?IePE%LZ:2I?ko`cPU.HAM(9+Mhu'7]-aQ.:,r_8LYDc,3\hZJ-<FL1BoNBFqaERpUK07lMgr?*DU[>.A@Ro."Z^Oie*@6!Y`N$"qM.X@I%L=D6,IO'+/S>nK4%Rett?tg5Mau@Z_`&(60p0j"lYLMhU"p[C,nA+6mZndZP^k9+P?V_<<SX*O>RWa[SgWl8;iYa7AX1B3q(!R39%9'#TZ%N^2'd-V.RPH6c@,<#4DS:Xn3MeOdl(Pe^#i@@jo+Mr\XZb]Lud0nW<`:'X9QSBXAXBp=1Q`1TU(;hTW!X2Z3mjKm=%P!II%G[?Ma"$;9cd^]_g*E"r>`i<n_iY;I5bDk2(ic>tJckO1HdFC42'_GTE8OH>bDO-,&n&;*UTW\K*V>3&M__g1(bN&*>2(]r7NYb[7%1r$HH>bUg=Z&uUHnQXa?%W3VjN9:T=kr1(G:1AZ#KkF$,QTURMk=VO2K\CO8j\bg*\24AXAqJ&KA362W4I]b88I\2bUO^h>AY-2G%<5TM"RYi;"G2Wi3Yu%924fRF84c'LK/d<\#'1U:m=*u*l7`\20"6JP4g/d4OGMV;U/%p!4[*_m8Q20X&'3IZQR0=2s4g9a-ZkuoH%JnO]'BB1fN9i>q\!$-H"0<5SS32>.;PmO5^n!:EaAOK!X@4dih>oa&C1j@8ir?=u\[!p5*Jh<JnljD/EW+55MED)$hmiYGTQsFMq%*uATP8,W?Z?='\b1uVNKAubTkVk,$f<,]Jfoj&Kdc5Ue@?T/D<s,<Qf9UJ>^HSn<FrqdlgZ&l5jllg?I:d@<qN$u4;`%9tc,aAS3%qVI?j)FNp2Llo,Lp<KaEo24^U$Mm.AFjr1t==\+#_f8p\SK*nK'<-?HC7;%MLG>au>\V<^cp*U=>.*d`6tmSSBE`CM:p@\i])rn-%SK3P0e'lmlphd=r8!9605p2Q5nl4]Nkf-F>T.#hRBM6;EHP0#_<_Yf8-n;75,Lf7"8&Wg0X8]amjPf6`-kmg%3.uQDa7!b9dkm%i%;$/3VfgGU[0Ag+^a1G1+!eL]eCt)0[]L&,t(^Q!SZ$+Q=luSO[T%%'%4H<C3"3Ueces4R(?>V&Xb!AdLAuG8NBJR3:f_b[69e7<c%K#S^7-fP16A3m4,8STQZ!@ph;j-7+l"*VE3"^*GXis7EB(7?!=M7X(%>'p@HO!eedX<P*3EY$i`&>AJ\YH<sr)_c>rb)A#q9Q1+I%_?M[G;!>cn8ubOHo-nrC#;#&j0)ALYWe2[($r&e!o"b?fP]7(K9?a)0*g4@jS)+k$oBs:o/-cp`8+NWK(&h%X9'JHM\:DeDp6,5B%*gWgFdc`tdq]''6%SsJ-_;FYDSTaCh6=U8=%b#q_#ePdfM9:r?L^IE&p9:a=2uu-aXcP'em3bE=pa-.D?$+UgRu?l&id__^CQ_eX%J:ES>\u7#D]7ngE4:)ROLG7+A\O?iRr>S<O$p#dG/1#=EZ@f8?FHh"R8P]+$*t@U<#(&TY(].3/oOO3UPo^/VeV5"uOQ$J`p+HeG%@N\ghIojPG3'2,aQ&%D/P2Ng,k8URq>Ya4no=Z=L<gin\7q1`<r%.run/$s01)[hGJ#i:;.,G7rq^)lkdd)trMDt0jW3Z)K:2AU7%A0Td)27Rj-LrLTrj-B2f$gr3)5WL1jdZ8]F3O]#JBa>3?BW$K"$93BPBa``"8a_fIQ)H7=+SS6>W43n5$eu'!+l3P67hiXbD"pJI%:U)@BL8Ene/+/'^ZCl'JqrnN2UW`@=H?P@%*2L[BRB8d6n"d(L)A%S6WeW"JaB=bkaEd=WqMc[kn?h2*W^M`UO@kTO:`B=;nTk1a%eMj=n]cD6$g>*NPS.:@X7##n^MQ>1>j@R[d8-Ul4'd;r8[iQFmTkd&aI(FQRi^/]^5Uc+ZKd$]Bd>r_i-CNGH0[PFBI+glCChZ`:%YMR]J1[V-OSDmJah$p6/aNu.dD+').;@o40MQ#7taKY)d[5E99^4(hG`^bZe)GI(YTZDtg8\+p=n_h3pSX]tELdY53KVUW2aR["j%eV?fPU_9&X%NH02l83c^+AR\R(:U[RnP$bg+e6*[",VHC)7#%p:7te!.h)k0.[:`S+h@cA2cUmc/AtHC"G!:%]Z`!B`LA=Q4iqe3%ZNIkkGeHZ4OPM8ue=rEoOS[-h:EH0<Rt3XdYRWY"\=FL&dI!OI1KO/K1dPL-\tu&NTPY$%Mj,l8P'A5P>7Ob6F^/*`MA\]9<_Rg3%nTn&%-chGQiDW9DS,P8Xj*=2n/gF[oL<Z7N&Vi9q/EKFP^oO]C7cJ39Ib4JX>)`ZL/g^O&F18CW\a00;!6hR%.m]Zd@^Q$If,fkX%7MSOI6fTIq;S##J-F3ldW.L-=hujS1L5c\^AN(U+4%c[pmFD`P%>8C&&tJnFJ<Ck*Kk4_a<+h4mkItPoI#MleD&8%Je@;mf8S4O^%8hJ3X%4'JNd2I72*"6eX"YuC#C\hK5&t[O^`:q.hVF"g%nM4ulOQ;\(,b`(L_Xe@5892Pj@L@d@^^!=sa='c=Tb8@K+=J0cqsoXA%3=*/=C@fjS_$#J!IeYTpPn?pa>?7\2b-'o-%[@$o13h;XHgOe,ie8VJ-EQO4`fo:gC3GWV$!pM+M?"bhGl%LB$W3@RUK/lUc@/5G%8I^]&Xb:[B%Mb/2rKo79>B%G%>Be5X$A]gYr:hn6(db8gf(X,/YDSUY6U]1_"6-7X_+mHCmEs%0S(J22kt?@LPX8ML"452n[!'7"%Ohm(Og*mcVZ#UeXF$T[?;F,1c9*(m.!NeisN!R:IjD]Hp1_rMF)QObo%F*OkQ`E`81.1s=p*(-s<08e.8Re+u^l.&p1kH5s\K+Ud%+PRHJj'o?NDuef['quXbGJo.74]-e"$Zggf?;p0q,BHAi!iGT2[R)/%co&3t)^bM1FKLiK(S;$[1_HEbJ9"E7J=i7Tm5pBA$sZn#%q!#k!PtZsN_Qm,&[W*%]<dh"p<^<+73Ds7$5f)gad#-7KW2XM>.ch;Wm-$GLU'U>rhi<$ti5Qh#_O,F0"L)KZn9[HGdJBDQ2j1K!%e+>dT<:9Z0#6b6Ci.(7h$D2.Kd4;F8TcU/mW,=s7o$O)V26h!5038ep5)/K"X;/I.ptoOJ-7N2:qaNpe#]R%fs!J][r?.G&e&LFp%gp2Ub"i4aGZI0QN3(04/`KM!jaWjboe0!3$TmG*snXLMskCc=c/LQ<(.f#32DH'J&E.tt2%5W8[!4R'm.(&El]KRgg;.4ZjgNdpf%XcC]P6'].@71_%M-&'Bgd28F?c.Iaf$Hn0Y_5[P(JaJo*bpb,_O"/BZ-(#X7XcJjIE_@'O<p,:e15Trg$>5!*n42Ig0XSD_d%dD:%QUQ&L%p::&,FO]3pLNJL,6+T@8RJ9f$l$p3`"br"-e,ekEWrqc3,PEe#WkP<N/DjAE18W,=/U88qXFO/Co4X4_\krLd=Bo5]Ug1e%^dK@6N'`38?]H:j3`cJh6^2(.lD>XN1uKP#VA3JC0,hp[N^A;6#`rZcC9[r*gVQ"/C-cj@FNh2S(8Si[oDeF#BhCDF=(n(cX&sTH%84/-H3jn_#BLC7jL=X7O?aM)\:aU^\/>C3`)=^DYZD"!(aAk)CEJW877lQ/X=O*]F`RH$I.A@TP\5"*n(>k2DbXDi`6)l=%"mc,+%\l1CYG^2X<Pf^bB]aYIB@B06X,K="e=MYSl=!lPMlp'@7OaI0lJqUhu!nl0^K#3&W!@OTsG!QZE%2N'%0Xak/,1ShX/M;S#Jhh"<%\2?=YFpQU&GMa"H4/Fc+V!2@)j]?[F;TA#;$%tb_=nep`Np:C6qFZN@;\OhAlfd.u#3T['p+S)C@!-5QLWrf&ACjj/fo9.fM@h>[%_*96h-:U$T&DF/OEl02h4D5C6HXmm/1^)[Fe&[kcY4?Ina>,G3ekC*I.0mJWr1/j9_f;LcNCE.83rIW^;oh(FJ`651dV84t$27VN%O2VD0>#m\iK\O>B]dG/5f-u)CO=5Ce6W-MG<f@:3gMlhbLb]?4R'VZ6^sn4K2C?=t-.SOR-X:[hp`[T!LreLmJm6cl8PE172+<EO%?tapQE\-4]O>SQl!_t_(P?;,%H!__A0nh)WJPd/Gi91ic%Fo=<IUAZ$qmlc(iX"\@EKOe<YIdb1/OGYoBhANkR1q.%A(7p>6If3K%="4%;]`KV*TOhWmBGAC:E*AY?ZgUj=8"e?DW*r/6M(uHn7-l?&I@+d9goioi8;)+b(4]b]!Yttu>[[Qt[dmV090``cbjPEL:(k4e%\_+,]=aoREFrQIi&6.C&Q'L0%']`V^WlE=jZR??L?^h*<#.)+_0[u#[49B@B8Xak;pV(<NCl9WaLLXU8O%!Tem*S7*gS0\(?)3,Q%NZL\^R7P.=UMs6L_>oEom-VXB]r0mN8B^NKAN>#/SX-+"JjI5D,j;Moj!2,^8g'SG!53d`C7Go-g%g6mMeEgkY5g>V#si[rWX]IY%8\LgSoBa!lfY72Xr9-`I&(?S3p&$?97eS*M8(Ssc-,<YZBj0'cJmQPF]e[(k`+K`W0oj<u].$RiWe4EW/T[1+:rgE$IQN_@'G\Pb%6EHu,g_88?@[2R[P"<L;RL.H&aVNJQL`D5Id)92@LdRA>*ZHEdV*7X!c>3uYdYEuQUR80T)OnjrSl@G(SKYd,[@:o]-*+A!:Q/?)%"0T2085*t3/NZk)C7#P@.e6.$0&cI.)'q3eq5AVY#X1NUVj2Z*^+Gat;;qO;\o'".mQ@9`M'rg89C6l4XADn1.foB72]njkWFsR+%'Q3!"$mQ>>']-Y5)"8X[ON0r(3]34^E>J*Y]N^KP5$37IJua:QjH.<A-<Nrp3_=*(dR(nAX!j%#RY)1i_#>MbV+AkXU+hJf#foYi%Nc(`4pX6dtEr_ptZkbCE8J/d43S!1OWKJJ'Sul;hi1Mf@P]G\9A:fk3,-9#V4l(M\CO=j/Znk=W@?p%1#e4a4DW04rod==+e;,uh%^i5]1!:4NSYNGnU!i1o!07WF%]T)tR]Bc1IL$l=f-n8am[)e'd/4kSo;cEHpAq1XK\A].0f<q%`TSoIH\\#7Xg8n';r<T2urB?M8%`D[`/0aV%=8-2hP3:9d=JES9%.$B]+e3&cB;=6!Njl3H)?J)\7Z_"YX.gNV"c'6d*>q)`U:-pG>X?@m/8-P92)#KCu"0&8?<l?GK%'hP\E1b,U\ci_)n:psSB8-5iUHV]SirZ,4@aG)($nTAd47P/jO)Np=*#Bu+6\3:87,I[l0UH<Se^H)q1F:$]9hG-h2UYK=&HZ7Ns%EG9k.QThApBQ+Z,oZA2b.8fbb^X,mDh$4)(=HS))!?)@e"Y\tmQc?9cZ1hf]&e[Xq7)ItU$PqMg'V6H8.R$&;h+Y@[f+b-AJj<#/%pUVm,5h/Smb?O]43$G@>Y@NcX-c;=Y+%Q3K=&*nCQUgHK8hYsCUT%3uko_GO1Ca"HS2W8]?obCMKZ/X9Bu\c@l*5'CW4i41Cf*`m%2#cGn3))q(=;XnKSKpr?mIjP?SDnBo3[0-_PcM>T#ZTf\PVK]L-a*SKlbT\]?/t\gkThArU2&/nh&:;pq37p-/7rhH'%IY2E6*@m%/hqXJ?m]H9j"k&1gj9W'6*5%S]nM12S00$,\p+K8.eY4Ep#*MUeV,<RWO;Q=jcC[J:MldZ;Bs^cp`iV"#4IN"e"'Bo\GCf;h9=O=%a=&8u!&P^qlI^JeZ#7Jj2]r#)!@a$\YM;A*9\6cA,XH""]!9A<-I0"S^%Wb58AObmL]gSk['F6VSuJ$Xo3R#WS>(=?X!g,()%o:9%m&.o[/?4@i"ZBr]@i/;?IDClieH`Zums';02mdY#UH5jWCFiZXf:9Xq`9?IlMMUh00?V<HQnX);ll`S^KN,gcOhA4c[J(o/#V\`*%WWb!],i-3*'i`5OSjV#p#*nPR$1@#blJtoh@PGH]I-[]C&0^MZBhBQuX_"]J5WeG`]9$dVN@bc2Z6dXVS/5u7S$;35ja\H:)j[/T%:0BCgFF!JU&\'Sk85Ni]&1MX8F`rp=7%jcl%:iU=IPHCZ`<8>pMEI&")ua[\Si9>f2Ced"H\\!X4;)R5MGHDE/\t)a[fZE+IVZti%>L)TkC/N6)B]0<VOi8_7jqrl1HW$hhagGo`Ao3MB%"YTr.E685r`H:sFEN&$Fdd8VJQBXE5Y>X-#Zu5t66fRAG8M7N:f;t[D]57`%m%iXnjLn;f^E[$FA03\Z(`N5]WISk`N%K>-?(??#2t*lS#n]USf9@<X(n<[klPthWE-jXs]g?&$CCVr3Xu9Y>JV%E9SXo4+R:3+'%e&gEI3#`u\%.'+j?4].&,*]p>N.OqGYA$.J^>gW%/1hN$SXP^GMfK,4`2g&,r@a/<WP(s-oa5\2XKB"&1:PtKgUk^94dD@.*^$m"%"nFqd'1c,&kgF3?0&V@\HU%67[:<s*5mKHkDId=D3U.0PKJ!uImMnPuk+bfU;Y2$C=jF2n"S]a])Egf'aR,W&$&3,F_*,AdZj\B?%=/2NqX*LifP/;kD@j'!<XgNLkf`_NiGe7/8X25%8O5ns,7+7U,9^b.#3s=@nq!iJUHF#9U;s#V`_NmYBnE-h;\UcOVEbi=]5+9s3%j]6DrE\AWGUc0bI.dZ6OZ@PU7nePd(Qlqi%)eV`6@[2QA7Z=H]9hno$)j;<+9aBW7oe>Ps"Nem(PrHO!%Ed6^35,((Cbu<e.Mc$5%mQ':%8m8/s;,f^qf5EtB($N7bN-Yht(s^LI[VEr;oaZt;XeBtu(s\3ep:A"=c@CEc6Yre=L=%5>lBrmR;E"cDJl.,FBROI3hQLh3%I"[o?/(*_:U9m#A_)PuUe89>Smn:de4Pr)-hdmNP#JmE;l'F-tN0/^Bi!Jm$pPRur+rif8/<Id5folQk#&gE:7O_b\d#F\9\cJ\M%/La91D!p0D>4>=J+>p!b^r5&S69PL8Wc%o%iK8FaBr&WfePeWjP@H*L-\U3<>WH&\hg<dn-q.m)V89jP@=k6G&/SJ31_7C"8m/,@%`W86&#^Mgcq12#iWGXYAbTeN_+Sit*K9KkFX8B.N8hGou?.-nc<ZGjn0d[05eng/97J!h^KKBF%+=+(9PXUh@bZX$FCF_2f:Zd)W%q@mQ7AkI*lEaO$J_?I]9R(8deWZjY6(N`_3lr<n(1($KSI-W?1*C]6NL5$<O@,7bhH>p'i.XtZEZ]6(>*n1H1>tXiRa--lnH6YZK%jE@Nu_])(Ea73qD_5a\A,XSas]?QVZcqY)8T(Oi(TGOVY=dp8OLK+uZp>X6c-:_ds@4h,*oA14nn(j(HX$N;`:hPGX1O,jO(kuk1%Y%rIUW[D5N<b/+WH5t.f@qG;d!gQ.d!qb>*JhO60MHh-F<_W_H<M$!S\OXIZNUSFVqB2_^iqB("DnLuqBcua:9*MaR(SYQjG>/Ig%Xl,G=0fHqg4+k[t&>1HIK8N)GYI[L>CgT;[X*=>fl'"[VU1Aa8$4(H&GkUn&;Nf/Vb*@#)e+s[+R7tRUH'CI,))m3T!+A$0!O5F/%OqO=0%$5G,Xbd9bkLjq='Vh.Z;Io7lH1f`M\Tg6_>M#)1'BA0Nm)RtP@h^WG<0e)q\(P_eED0]2UY]%IVL,PsgWHidAF_5$>.k`)%4KPTYoX^fslKI%YoqKm(#J\`PGE;'m\E?;+!gHV5$L]-DeGR-gRJtF[KQL!B5N04).+>Y<WctLb4V*F5V'aFPbp-!,NM^M/V`;,D%a8$LCRD^8*P?J&RHq:)Egc;e-dnZkDZ$!AafX^m_OIeYHkXj,U#S(H[7?I'n&hm"N<#25*NiHFpOM'(/PeL!%k>7DZ#uP78E@MJ1%3^+iFU'0.dV7Eab3;;:<<okJ'2=GT:Dh/b,\M"n8h<M`A8_3X4'>d>KF$6H>7W0e#Q)s#HSc5O(r:8S:`ZJ<ueMTO<-f2.9$[[2=%kBl[\erLl9jSLD/j/`X5J5OH@mOa@/g)Sp3a=bhCVI%TkH2A]b(VX<.%bn2;4^Hb9KA<`K6&4s_K7A(T\]`gL#Xh#qq@o9-bG:&@%-bW2NV+PL_9nG<t:;sjG%SP4JI)0g;PbZ<USPoB;:hHb,C<L*\Sh3_E8?B3N>4o?0'q_05=*JAW7tI%O:njC8i$#J3.qtqAj]/N-%UC>%OXBn@Le$c&-\^aUO$qrP0QCCm&]&boF^;q]W[4(JTe0[JgdV(tpp8>3C6;iq]/U<.W`HFZgpG-TM6Vb_`WV%X%3OS?Mn,4gp%.WI5X'O7FBh"-(&,m;i;QM9fST#K79fK\r(4^6aoe_NI*,-+tU3o8Ci*A[0&=6D/N\?O6`G9]#$LmelTGPA&fJDe[+pSH`HE1g8P%hT`1hRPPsIWjL(8b(PB7?IQ@*g(0L\#lRgF5p=G$3l(Gl`UsQt%K4ehZas&q?-f4oQBIQHI9eF2V[J=s>\Xd6[[KH-f;Nt#ouO^W%6`<VPoIZ0`Bko,0AFq;TP=H-S-m(cQ'.'6CPJo5_3aJ0#UA8X?VU?,+\nH\*=#jiLS%.@I)P;$ATWK#CLm!2ASVNo5f3nIA"E2DT%P`Ej0Q,+].@9O>"LJq^64=0tT00N#XGbTj,3/GPea3-P`:hQE#fDho*52]le*RR6aMYemb<LPB$98O?;FBtnBPW^R)"Wjs%:-P<:%^A[8LTRr3'!Y0mSP66OJSf4[scET7R<nK6&3@Ahq<3IJGTnb*VN90'GGZ\1]W(:>q0F$iB%=r),Tf1&CW[:?Wf,p!a$D&>(M]`'9%P<jR(;[VZU'f`7"pJeIeVrlj``,n!3]2;_2aif$)0R+qEJAXGBQ`Mb%PBKqQr)i<5`ERncW0`TNfI/];nKO%%P:pY46;l,M-;Pt2%kEUBRIaDPgY>''s\Pq$87RJ/+0R"]://ejN[%\='1^Ol!?]a?mDFLQE"r)XIW5Xg)N:Jjc5D`]PVug)gLPIp^aCh]jK.M31S(AnC%2eO@hRNI:0M^(ef*29_k0ag>lR5MC,-7l8[8b"t*-?s7&P4;`55^jM+9p,Z[C9F1;0rab+),],ed!Peg=_QdP@NJF:oH+SZGt,3&%%^DeC!W+>O<t_.:45mD4CD;Rl<\ua&Bskt_>8gb3!#A7BRA"bbIGu-BU\JnP3%n8kGjhFrjM]<J&CdZ#9]PDPpZSTe\jseC0^2lY%(QEm(<,P>YK<jFAP#%83;hX8XiDZi7ZUIl4_5f'T=/:hsPFE:n,UjTZN1fgfjCh+:6V1P"cjSNEP[_K^9Nk#Z0t6jB6C<YE$nG!I%?B1=,_XIi2_q+%^$4)P.r?03,bSp08#E"Re9$&\nTdj'm$_YoB<Ipo]o<GE8BsJ/\52hW\`O0q+7AYM#H;JCY1+Qd1bdKKASpFI%%nM1bmUV+cM^ZOS;H^#M5"[[O=SEd("Q*>/$^RQ)H9SDD'$GZ*f7h2@KGOHah*`hm1eBtb)Fr9i9@cPK\VM:Zb2iP=RNLnt4ZCK*n%lWsP`qE85mGl(4&4a9qLrs0G+W2prNQ)G4!n.ek3"NiU+ZKPH-n[ed3BRpA!Yk/8B.&.2U8W5SRTcsdLpZC,t$G&ti1!N:[=rL%O%`H,R@N^<gMcUY,d]+'UHE"6)T0E&Ea@cu)N/+_G!oST$k92bYG[mjeVK^&Q2Zc+E^o3?fIV74S!b$miDrL8,YmQ3ulZofrPL!7a=%dX05!Kgnpgjj5!?:kX%Wq2!X[$-`mn2UTFVFikmc.S?rhZVsjrA8b&&d8QD,;$)^aL*cFk=Mnf!StT;=kHUoh0b#d^/o'i?0Sh8u%NtC,JG<?B0QM-mdJuc-u!"UY5i2/UGd"PHQk#`j\6UiaZMPWlc<\Ubd1B3W)F18M.)6d5Sd=T!#9cqITieGt)I;c,TOiQ1YA4iq7%2<BR=ee7B+;^XCi1k/$%keQCPJIqt&=PVpBMUX&P#p`M`%Dc=jb$-%3aL`iJ'sAg'![SIhoj9S$:^e3b^'blG`M*]MoFC050gg&S%h@!?1KKFl(L=S2i[+4oRn.U$OWG/`Sg,u*A^L$KR+]<+5#fsl],1qq0GOgn(!*?Inr'PXT">\tCq;=Pc.Q>A5VEmt-6DjP(]hX,@%73u3"[:N:%m!Y:IZ2>fgNj+G""K87k;6hB*/Si8^c">%\&aM.Sq*]d.,$s%46V,BS\5?2F<n1M>FdGB$U*6t29APihLgZD,9qrL@%.m]QnFho7uX"JX!OpS$aGEPq<fJke-'^cPjbB7b^!IFBQkj<o_#T;(ZjEbT\&Y\k`"rFkN+"qKMKu`W&Jc'3NRNu:cA=$+.M/Sso%)PK.o[EE7e"e=$E-48ae"#5eLT3c?cMh;]WA!n=T:ORMHROU=`2*amU*L*aHernJE9GUZ3Gc3H\\tnJ6SmhqDN@nBg&;X>_d(feb%^D605iX4`(42-/A+qBrcC.Tf23s?ANH?1bR*dGeR*?[:4^jR(is)2)$W*G"H6e)L#T.+J[W']%>5,c*[JN3d/6[AY9`8TR86U^&;%Oh*#`Mqb*bZ$]AcY6q4.+grTW%Z8+d?%dgr;^DL%OQuJ8/kaHKX26"[;:2#UQG9D$\KGK=P/.2kdZM0h#(l@%KPV3tHJ0!22!*8H%8fk+iUY0Q[)>;RO'4;[4P=aE]-,9277e@-Y$0Y]$,h!!OK[`WN*4JPb;,Z]fLZKb.&8ZXtkW0i@gSOe>n(U^L\chYP]TRHo,+4(6%-Ut:X#J,cAP+[[Vh8#eXm"!j!o:!)$!KhtLi&U!XcqCUCga9tH<")%O,k41hKE4fgc`6>5:8oKW^_9u]ql#]8Ld^(_h3g0$3[J8P%KRbZ]]./&>AY:^mCn8>%J8QY2Eu[>N0*jfc1W^1PZ&N0:pW(i#ebN<!B9Xpl7eY4KZ6@]5?KCl,C8M9?HXW*FgW7>S3_u\^bYi11%(r[tWqS:Q@=)_=_jd)38R]L'ql5c_@R(X=!Mfm*o$_GGj2s3=?Q4b61K[;Fm4TS6O;`CIk6>]&We<d2IgcS"G0:+AjOT>$r_ldQC%Tc9KdYJQ,ni'f[L!dB`!\U(JG(]j[r#Ue)R%;M,&XYb&a<[0'QeDq(PfCGmuq#k0Yb,M]6%`rm]gF@*ECdE%S=k0g2Onnc'`)P9d%>_j6&$DAlI%6bAYM*_u6#iHPa6/:7:nc<.=ic*kt3X/DW`Jj)91DM+l5m4ifRgL/A3#\7X@g*8ER0(SggVZl!>]<O#_SHJHRq=s]%5;=Y,*E4'c2hq4ri#t5HB)?eW7S7;a[W3t%kXZLC1n.$N$dXYR09k*R:gM62+]lm?qVYb$YlKucqG[fmmAPZKLOp5<L]Vur*I]Za%6YDntY9P-`6<1[o<Ab,oN$]`h#q=P'W+6`eA%RDI$u/fa].ZW[R?<Al8BY&d6\$G".3pdW%Q_kO<Q%Ia#SDN`&cPg")4n+Le$!;o%E^'BO#?5,\3)"He@<**A3U/2V8d_4>Ma!/-Yni%Y7C!1*)o2n(EkC(ZfV4nT,V[]%i?B,dPt=YYh:*N]X6<1hW,Yi?F0P6PeTPk'%!TIJRHM=YEj+=dKBIIaEH@[G[5fk$q[,cK;6MMh+M.@\X;Q@1`Ekn6sHhJ&/-)WHT:SU(HQ;qWpK-(r#0L?@KM0SJ8J%/E20scb"%M_#VKr[ZOfAONtqXi/X+n0/Ufk5?oQ!h_aN*fnA4pB!XbrQ3=#A'qTUPH+=>=ja?.1<[16*CPq<?<Iq#O\?`,35MoaU9Htr)OIYS%Ice3*8ZZ.%n&Yc4>Z,%><s&d)+9cFL%Y@G=:$*A_3%-Br6%`8N'M+W8MDqI">c?M@8jcH5J-sWACY5DqQU_ASP=<ZscR10%%$9!8%R0]%!9Yt9X*7mqeLb2ePa>kN.,>fV01%Ks#7gY.bXZ6*X3dAItAeeBjhg&ihh5Y2tT0,6RNtd/8l6KY"Y*$paYdU:D,:Y$?>-q49%LkG3g*G:gd7:/2sNMKK^rl?*:G\n))M98-#/;mh+1#Vao*UMRGM^i#6)Qu4b"\WIN9\R6sD/tGCh1*.#fJh=G#e!6S;o"Me!6;/-%)OLqAI"C3L"WVCS?sF(s%6anjZPSOu>tJb/L&tWC5h3rA-k(gMS#f9ZT^hZ)Ad,D>m=koNbG>At'DEjk8gBFBDK8D%E_(/P=`s8r%B>IH^3)OE0%1nm,:f,91Z`iq=o,\;B'a@9J/34]CUptdQ<Ahg"'3#[#W#ZM]]fIuGNE+-m^/NCVSMj"dP,$Ian5L#`b&j/uE3E[\%7Ak\Z("KNpYGkh3HgjtF*s@K%1)WrrG!A6%/Y+5jXE1HS&=`ks`.:o]&1J3nFLt9h!tkfl?;:9;'!@Rj_lKEY+@trHdnnm206:*h%'V(K%/[W['#PU"[q%1T1;X2@<kaMViAVWTL\.YY_1*G'bS>$6Q1u0DV7WCu$@#tAS(4T\FRd*k).n0.relQtV$:uTX;,+ZaTQT'!%(E(+%3[ZBd0+(RUoaM4(kX\6cG]1AjZ`2i]l`9M0;>jF:'hLa8;)XU7j:uj;c(??]R;>chEb[KtY\ZjJB#sf'UYudkEY!.jS^sIX%j\A7t86E+E<'_hJ&qI__0t&jl$8D4)8g+hF\m7H6Uu@GAVFUbbT[>VXSO.PY\VQn`>+j,"<0^90`u,1k3,FblfCJL$A0P4&m,TX)%jQ[tBBM"G_XR;UN?8KL4mum37Vk[uCZ96dQa[64\_W7maplAIP]=^MV&-qrLFfu<aLfLSiB@TGr3]IN)V#tf3oiPIZ_\VXDV*2?d%LM]q3a'g:P11ihE.fg'9OBXjW<:I-6$S=IFV6:#%,o+2'LCR<oC41LI]Dj61J+U`[.e=dWltX8/Fp^h8NpiL:.:bj^F.l]E<-DoG%<AJO\b-:-"@0:)Z5q00F4Pb=)Y;Pa\Z-]B6*#,IFPe]2PE4*2Me/'1r.KE`:?/7;`9aMhD%?o/;a#4#'Nq(PlW2W<89Vj7WNc^PU%(!(Y8F5s_sC#K1F%fcj'$qZ028YkBjS5(o0^,RYu^Cr(*&gSe!O@uq@jJ"+kErda+b#8Xao"-Y(?RQ.*`*"Y`bJ(Rem!=[S34L35%K*SFo=E6mbo?,XtT@:BW7t0D;gr[HWH^,sZ(h\Q1%ShVT1Y(2).\IV/CN8!QWJBQ=\>lS[J(XbQBR=#"6gJI=2(U[=&$I\-Ii>X<%[(;G6^Vld]Mr$69UWOmWMm"mjiD=.d^W$c`CD'U?#:O"^EYH)tV[O#9'gl4hcNcsX*h%/*k$OO&"0aJ2gn43EPC?;ErudqMp&5\6%fg]mi0n=VG;IR-/M`e2OpY9h"lZT&i)8Z(srmSI/W$p,ae>o:H.41!TSWjG(U#HPi%s6\!f>R]N-h)P,OX"@BD(7U8/Z_S,.IU"`%M=K)r/i3Bc"ugd[CJ$fB!C:e*]BITg]S>fA8$7L62>ECVr*ER4oVSA@.9Z_c,B`lXSq8Hm:B\CU9@fYfDPsR#2'/&FWk'ijNKGMu%3!7.sZ4IW3j<RQo(&@o'j+G*CA^h_?`C8-#Z=<([,/;4OJG3a/,QKu!;LZQ?\PRC0FbJ7!(;#mF:O2qKF(hOeBCCgmKg3TH"B2Y)%7Q'J9`$Ftrg<I\O$YkJm/47r32GoRk$/9<3KQ;4q,NG#g,n1G*>Y#PTWfPCIl_L"f8>bZsfj+]O<\HG'HX\Sb%!u4?c=:fcmb:[d%Tr9[YHk'mA.$VrKmaUMIk]]PKm%ljf#P'FL/id`MR@G.R#ZqEk&7Ut\pIb!0[/^QA1Sd([S4d1(V<93*[Z]g.hSD2Ge-&O]-SH.o%+UIY2TYd@#YSF_VWN/;?gf(\k8qnab:T,B+5&<-VR_0FL%HURs98@Qn.AM$L@N2`BOdQQ:,:m7n=/`sQZ*Xl'rAQ^jE3GAC8X-5O%0u-]I:hR-?V9@U3%%GNuNpkQ,]OG50/;.XhckU_?W/-)`bk-R*h7pU-YNE8[jFs8HDlQC16CKCcXA$?S@=0[K6=2"f/.j]d<PK@"%OB.13K87Z=JC,JR--8Mp[`ff#WBatrgrpd,go9:9Tqb,M*:JS77Bb78pQam*>1X;,*2Gh'(d^[(>m$V+T@s2O+p#SdiG#p2)@/HV%.l%k(D-,4B-d)1^PD=?B#hb^.A)^^&CJ5%g>IhP<7BS[!m.kd$g9:,W_&H@*eB6D,e*P1nGQCCkg[n6LJj1;=J3n&%K`%5I>+LZ3%q1Yfaa_hLEQls3JOkUPuSCRst#=`=kW1NIJh.a!L&><ebeoh.I>WMBr'8^Di[&`K$:/?pbhrfY1D_.'i59b?GRWDS.mN9u^1G2Y9%dSW^ASQ!_mUmZIq6S<b\M;MSc$eU,s2)[;"^;NEGZ?HA:QSQ)]]6V=VaHI61dPfot'h"]'+F"VK_F9:I9O61>&i])efK#[\jJ0)N%WHJ""OLLcn7X=H*LR&k7Fm:P)V(K(ZkQ637@,),32n^(M8.)GY?gE-X@;*JomU(Z3;Wg7?4a!8'_C"P1AQCC18+f#c]`-o8#X81E%XZN<P]LXUrMFZ_5"bF=p^:$dMQh'!q)(>q8Ue79e!=BL$7;"$#!lbSkWOC1\QD=cuZ?Ia6=.Pk&eXKnqBj/N8e7,e\T$o@rh_c=/%8P07#M704VTtYM.L;*?>;h?&6#QVpRr[^h5d.#e(qBo)Cb%f#ofMon221t@q)kB<*PWe\Fj#iXoJHiY`4(#VNQ7t8M31?`LLD$8D%79]Rm/QS,qT).$G?Iaa%C%mOD+"<##kCpn1<*s](opnV^c`u9=Yo(o`JXoGKE*^#B+Dq^95jDoq\H)m&!Eg\#YH`M/_F9"uJN(WL%oH&Hl2YcY68PnNS#MV/e/Q%lT[%"k%?Z9=D=:]j3B(D&EY+bnG,XGj7UbW@]kWp?5!Wprqe7uue,W%u[f^p,$>:MLHqG[nu>Fbu9%'/Fan"0Rls/![9^M2%t7U8D'pXAtFNjpP*To%;X&Fu4Qt(Y[kL7td?bILRd(0!kMUl8.^dBEMt^),V%/Rp=KLau<I^:f5`+5Y%>E%kdqmhGi7Aq9a43b/i/NgZ)%Ru>kt.=q./f,X'i"9mb6@X#>\IPb2jCAUu*/5Y.c:E7?H7p+&FlsU'D'="B;rJ)df<g@LkoDUu75Z%qaRRQDB4,e0mX[(pFF?6aB'90&tUSd/oe;pS4`qVQ8dQ3&f*@4@.Y^=+@ok/9,rDU#kB7+:`"j1KF4&M1W!D*bt1Y/c1e2/8=n0J%B0m;)"ta8HZOCG2=A4mf_FqR)-Bkg>Ua;/R2bEX6Ark^u0(Q%S'qN^SKrRK#da,'+F?$PmFLe''aUpJHJ?$2X&;=hB<!>OtCD5V=%KAbQLVL,J/^SaK6Fqm>?(Zjnee._*J1V6I6(!q?WYM<<Y^(#N9Y:-@Xp!!VP7j<OCkt\dP2K@fgY]UZlack6r8!7T;(/+I3?Yua/%CfCgl7N8Y"0%80L8MgKql<Ot[S"BW6ACY4)cQ4O[%\$c[,L!l4^REP:K7B9%7j/TElI34SKY8V:n]Y\<BhU0`SXA$erDto_9WdA2%Rar%0hd7K<8L"\$@jrue]2tlLg^qdY$6l/;?6o-?e3[?4[HTh19)D_SQqeP?Nd^mN$it2Dq<'(3LW5*+HY,I&krf8a[\kJ:7AuaJ%g!2"p+A6V11UDoP2$lltEOtcHf"mh?7Aq\Z@Gsp:b%q1gUc-HmMl*Jt5<#5&Hr./IAi#i]FC8k/+(6Q-G7d?=7]F-r(RODhAi11,%%Zt=OTF_R"B8c[BOX*F.52\>";4?jR!'&+i4]1q&4W8*Lp'bY'6X)6oc]#0F+#D@'4\_j+!;D*#T7:UMq"<hQRQWO#a7PsU1NWQZ%FZ1oC8#&b1>d29&6r6$hCFr3q78;@br$eU[C%4nRao[(:88Xac(JRhrIr7I/q4M=qc"8`EkeP]d*sg]&q@<&r;jj:?jtr5Jn6;VL%GW;pq@"i9EZFM:h_f'feo;>40s(=!R;l7mOi,#daWJF5P)RN6QS.A'F6kUaj!B9[5O7c"]0LCD0AM>QBch05p#hE;'%<EGto5aQt%d2Vt^2%pk1UcY709a&CVnI1J8,ct]mN\o((Sl+Vl>G-t9)CS=YC*lXn<&Iu-8kNgEW(^k^?mg:+:Om4=o8RLUS6!,e4l$I0.Oh$p%bS!ZTA;M:_p+GlgP#rKE68Wgk>^@k?+:O1PeUFA$nFBL(*i,UAniKb#QCfZ*E.F*m=CL#()bmbA)*NYmI*!%h&IpLt8.0gG=OT%_%.]m-IDq4QIgS77G6]l\sPXbJdi,*a]@a"1`lVq"$a?8]'5eg#pP;G3DLt[!&2:3Da<=ReaKAh+1:o#DS8Rn+8,,IS'q]4iV;RK/]%@Hn4%;OULCYln'o9c(tmj4LG#M&^3RCsB[V:mBN[9'Dh?DR]NR&8Z`-jJg<l-?r!LE%"XaK:EBU)`%h**a@[Ufi(7TI#&:uNif!`%VR)aA<l(mS4eZoqeCa<tAoF[l3@b&Ork42U*3>n1;fq=KIt@SDF@ANu.?]"JB2NJ;5nZd1#tAED7Aj4U>]-ZrkEPch/C9!hp7TKN%b]XciBeE!7.$P>'WrBP+LD0%])FC<n[J<bds!4!4?c)4!;CCb6J4q``^)c$5j@+Z6i^J`W*KX;j9fNrc<KeR6dV;pb/1CMd$mn9e%/aC^3c&G9JrZ[==\+[H*r-0!dd%D9FX,N2Z"Z;q=4(^6tWk'36J('pN-?,"L>4uLrKf<$#4ga^l3cuZN(tJ9.I,rbG<p%FP<<>N[%et:97J_%gJ\#PM=Cd&R6C:V.sB!!C*Bn;#fgO"@pAj*'9B0E.eA"CB6c"H!^ZWSr?CA-.njR#[Bo:+tlh:g+tkDp)4V_?Z=g7QNF%>PfMu#6OdW=lf_=f>6o(]-<#(/Q?=X&P@t]@(9biroW)lAnN4Rm))+r*Sa4$U>L+jEdnCA3i#dW?^-&b6ZO=%IIt!ZRD;4`%29)`%%kc5Z82;[M,_&*Vosh$BoI>FQ.f45XQV6f>(I_D>QGt2(QO_'Y'UTCFE!O6to76tjTNL*g5f]j3Ai<IH8r^A4N0HGFD>_7A"o:<V%KoqCpRC9Ga*ZW[E/)q;]q"n<j$?&B8[=`:adBeTQO`+0Ocu2V?oW#p1@/mc;1HJ@L3\aWTMD/iBM)Mla"LjN+:?sY2Oi5"e-Zkmp%R,0h)1K,-[lVqRp[=\9N22(:+D9JG>!nsZVirFoc_lIP'C4fl[6`=V-$3anCNlI*":oWS5L0:F@<%$&F.aZFJ6R#Kj\#%*1<jE37%#,*RV,1Un='6"f<V\Dprcsmp'e0>rfb!T94%0`#D0mE`WH;rnjoJ;F087!na>;d62pIrL@^fs=AO*PQZ"=AM%RP)lM77[,UR%f\I%pQThLb)G7k'.pX.=[_V@hotAcL-m[XZD!\iFJ.b*`I(e^HF,)Y<6fXK/$thH]N,]mCo4?[G9TTB@LPl#@.0<e!FpWi,[[Xmc(^5l%3<nSi?Dm<?$CuR+7+D$t,1`e'"q.'u(;@af(S!^ACIS,XJgtc[B`sd=DiVdC6u*sE9slBUcqLN?($Ot(LI;;AQ*)\?H'<I[V'4,4%r%**$pqft0mWFDBaA]^kiSrXOEG/bl8S3_k`7`Ps&XFi?pD6r)A`#6p:XA*ZBB&N2\Ph$"iEq3?m]lsCEA04c1oL#r&8L8DjiBg:%`r"gr/B6:p>>TCiJ"aANS+pt;_iVFY[udob6.T%5SpW-O/mh].G2!WBarh+d/S4W64rd,Tr'6D6=r1/Xi&fQToDRb=eAb@)%S`dK%$@<;s;q.(h&LgJ55Ys5<:JP!U\ltl,Um2U0)\eL:K,.PHM,<gkhZETsOX4<hN\&<ke_kt#E3Vaf%(qjO\HkmN2aO^*iYmdLZ4j8T%&&0ZsASR>E\>cCW'8egWE/kZoW`((r3qX+kF6`E.361i]I.b&6*2f\"Z?8^-M;X;[C0c-6HY*[>$Db[,&Wk%ZCc/GD3f"BFQ&l8l%R^WXBFTHc@7D^`_P8R(iIE[-a:IF[$'+"E;SoIhS\&;oY!(ige[C2Nf#01WSN/'0%(t&u6$Q'DcH/^f'XK(6IOoigJ[RMuqmV%DG%U5XPY8MA!5YqEg<76`1eMTOa^PRldh`(X#W*WEBq"gtKsc@j)K7Yr:o5.TE_DMlu'ikq"iA*KtEZkWbVBk:0(d^!B-kYM8n#3.56%BW,\-St_NA2Fs[-M9?XV!4i7H3U^,'<l2L;;eMi)</9Br@kgSKO+8@]g/C7(JRSg+70"j$]1sTN$?AP\jd8p?=`AG-iMk*c%sg80%!Yi&QB'u4Ob)+TS6f,D>.#2Hb,p+HDT2D=ud/LXHCFIlK>]gr)BfX]YiUIjs#3<\K-+ZL^e"Q"<gl\%&3aWU*RO,8Qa1JP),^d//%N1g"RKS'V_[CB?5$c2r=2UPi&&CuHH<+_EP%?n*VmJ'Z4Fn`9']oTI;EDg5F_7%Hq._If5>*'g][NVLX9dG_TgfWMbP*)I1MX(MN%l^eBrOM+uL*heQtdYT&.X-XeU`BL-H3G&I-\)P:Smeg!!(#hK&MC1[6-nRjL^MC4Gs7Z+C]p@GEG'a>a+)99JOu&O(b%5oR1MG\a%p;6]]k&n54JL[WBBu]k]pH9Ta`dR<T2cA0TB&64E)%9!)30^$?KTn(4$)JP;g94X7j9=JQ.=*D$gpm+c*8ug1+iM_OQ^H$/F,b*Q%L&&U_0HL&YHV;WlW,pT6ER;>kTtQ@inqE5WO$3cqSd$'J')Vm^f>>k6LNGa%:B@$gQCT\Z.CP77)sdu`a<g9**F/rR47.Rd<ij7f%E-9HtgVsm'gM8:"3MhbT0a/-q#TYEj(0Q6gc\=W/3JXf5W2+fbUpY`oGN^Mk9Lt)*DA$QE/apu&LXujE%E.]&Pi*jj)^9f]iTXrf%1di/\0Tgh(kR>Q'ED;T9$8E4p@"*(1?[+*sTZ-4WIZO^l5hJFh`girm^ue.s`G`]m\0/uqKLCVL-tpMMf5;0piS^2#Ne*l55@$X.%&S>\f#c4ge%Bp<&(9=\G)-?q4ndA++1&FhX&_er&Kj\L8Q:8R(%#D(H8-!d[&=@RhhZcEL&Bmd:b_Xo*h3\T)+!&ms3Vu.62;#0?%`I^I\E6ReS8Dg1h&'q0a$D8D]E$$bEDqTdn?-%\@BmJXBKSb'0/WpEn)TkJ9Tf.+#h9.%c0G/Sh)3BVfeqT;9Gp#&k8mVe+.q/ma%<f[4=:7>&D?\EEL>k3kNA&Gh`V\L-oA1fMg-/@kZW7RfXPMQ>Fqp_'"h[0Y@0_>\_d3UPc46W#e1YlX>[$:13/?fS_RO]BJ403/?%*nU@g<p^-/,cWelmjqMFAe<,3no/8hpK\U[;-6sC>O=q9JO-8*j4Y$l4oHuaQUB(0:2of&`'\&rC3/gCFbWcU5"mjXUAZ$gV!]S1%`+XSfVOu9d'i)G.IQWU*dmB*6]pKo@6Egl4krHQC!'lkdp1I,HYZQ1u'pt*CL[#:%8b)e-&H"_UPOt9S$po0HJfb98j*a1V:*3M(%"]u$(\[HQ(k``][W(g>>RX@slBZ"h*Xu"puUL4CBH[86P?%<Xb9[j>t5A86L*`]air6'BUk_kE8QTo\/9AZSK+NRK6#>nbG_/il0%<dJZ&*AJ*ZbD@W0dM4OTFf4rQ[)>Kl@,-Nb>L*`VI="?_=LkFBa5(D?OSd!k8^pn!IY]/8VcLK;^92LVSt\Xed4rM*QjssUe&rjf%Ueb%'+IoY.]K%#W'n0S[$i>h;e#+t8n,**D%mPIf1&$#RLZSX-A5bfkl2]gX1fU1RUa'E_ON5fm]5uc<;:Bf=Qm(0[bY'gVgejFQ%JBD;;pSR9e&Gtf]1u]n$RDFQ!7D!gm\7IqDUn_JmS/]:eQO;bO.sE)E&I#dq*%oEZ*aJcVeT41ADEA3S8#OHr`"!B'RWRRCPt^/J%U<l!XBJ?E:f]a9N*s1[b03r3gFD=+3_mTq/I3(GUT)L?UQOj,kdG-?oT47^`g:E:.3!4JT9P"_O_n_.kOKPc_f,8?:Ic?nPK4/4B%>21Rk'21BS$=.7rH?^SPf(7n*ds>k!qfcBoW3ZPZ!7Ii#6Xhn3f9"XZ0B'UhnBnAR@'n9.MA;F-pnqoo/sN3B.u2pIWet%*LCL"l%;(0Pu]0$WW%%8Z9?r]fcQs`mJAoJO?>YOZJrUWGL*O'''[H]4hi?KA=eok&J'"Q:<^)snMQ^J8D@piiJpt.kT$3hYETXZ?u]n^o3%p)BX)??[f`s6_C5C[HOc"s>26h!oStX=Bn7a2BG!.ukrXO(:[%$;FuoZ)N+5b3_STf4`BMPS5&I%5Q5XD[Xp2]BG>#c`#GRN_uX%%>@e)hRS#=5(@uMHGjekNheE6#?TT9Klg>$s4COEFH(a?$2A8dA@gGlLo,8E\N&ln4o)q!&PgDlPjTI6'pXRh+b)gS[TT%.Z-3N6K%:MWNUi/ajpi3PebPH!]T+p41?bifJb>:^!e@h)YCIV9g0YUa+"KO;QZ@;oM/lPp]%Tb*!n?>_DWo0lXiTOW.+c[)`(!$;%q`3[(b%/F^50:fYrA&MnUq[,atn<VWT89=$J>^/X[pj`FonY!_=Xo.VlBOGYh@JV^&uDF3d53_fs^SGF?V:&J:a[VJV*(QnU#D1T$^O<M[:%p!^pJ4mQoPDA,qckiZra(mMB$i:9&S;H(5(i$p``4j>q$%\Ob$_HAEPX(:.Y\#[W<Zh;6430\X!r9$<NbYBMt>_Wi+4gunuo$J&g%Y':p6eSY-RK@=s.'MOu(TBu]5'rg!_Z35%iW0X8HdDh9Y5tsBOQ@j5:7EHNum^R/HMpc%m,:JO_N"=5/4+\U-`T)A<TDYFYhDbZ%%!sMYPZl;%ld:Yk9ML*7%`ajT;=&guE0lXLs5hrt?MQ7&'4@@^<CYC`=:9A3Q5T^ia\BbV/ke'm+9p\rppG/;QZk.W<[J@+^iVIP]%r5+.#Si72n^?O,hI^uV51!WaGcU9D+!k;SbdP!W[h3SR>^pn^Tk$X-]6ng.JIlci#Jm.1o1k&,X5!H#F`E:V6nlT8=8moMIL;b.*%XPDU(?7OQO4:0<Z<rBs;L4_>po<u-_:Eg.]?7+=`3f**ldh<[0\VO?%/ITdq!+>U,5GFY(eY)^/l)t:aj8_!6FiP8+oRTh.O$TYg%!"q!JcC&sWCidY.^f`F['(+DjqPYW$!Q11]/g/17KKLB'L$6F-9RR#ScBpBm5ajI,h:;g7LV5<*n"spNC,7^]qeO,c*1&mNP9/BW%m7>'gWB.s`<Q_&O,tn(>nt.=nA[4_:%UsOYWPdDH=t)i%PW9=:'$/bj@&-)F1WS19Ij:\p<`]\U+X=F[^^`cikmHp,KTajL5i3#<%Npr'],d*.4k'7"EMHs@Q'&g<[#9fgXfGViM^h?$%@DFDq6Gb@m8I'c%,'Y[b*;BdaZ81)-iuub6D>/Ub('k#UF=*&,r,PL(0P?F5%)[>8_a*XfS#PAl.d9\m6:4l%X#0g]+A_c)q6[#`$&/2_<hD(Y#bP('9;)<Y*9UVXk'*Y`&oQR)fPeL0XGl<_b9@>6&6QWg,%i\K(%6+O'G^Q]cC^/jF7M*^A0Lf8>\C`j;W8JWN9i&o>#<HdP&[i0GPPf^++pd*ZPj=./HPV6^V]"N/3-/Vq3ADo/-XE'-T5X-e>ib[4g%cZ4g]-tel4kQ*CqmjF[^"6AfT=*a_:3^Zcr1F`^,o]#aIejfc4Ht[OC#/YFRQ%;p@qfXh/6h8Z_[H]0ONnuo1H-jO9l[r3gokBaS%kQMH)bT6auASTE6W94g\ijGrDR,0JB?[HFp1p+AT7U<dlA?Rq8I"ER[3/E(RacG*Q/"amqY?hq9Qk=S_lAeT[\?&lLQ..^P27g70%\\-JN6I.p\.E07l>(Lr2:2^--rM;qE$6+9f>3r11r)r,2q$KRI/tR0eqiZg*Kr%e_l'Lg2l(_[r+a>\G52^C2OYiQfUsR*d_DAAn%#SaaGWqQ"oQgCE`KF<O=f[lJ-:5g9ns)31?_h',#KoQjGlX9lZr'ReG+ArgV,N?1U?JL2$_6/R=9\2Y[M>Y4iZT<UUc?`)HQ"(#4%LbHhtc`(!P:ra@`!t`Bg86J<o%1';:"49AI?S)E<r_RI`;_-]=#e/[nOW,io7%0Ff@U6i(4AhZ8jfpEHprZ-M_\jB:AK4<nq/BbO%%-o$3"g/mY/47p`(f,XZ[#-O-8gUsZ>WV82WuLbrn>L#V)60l6C#ZZ@@O$)oZ:>b@j-5(`NF((?4:q6t?*WjIZPEMUa[I]u3]!:U%I;$-KQ4V>?lns;i1kbt2isif4\nkf>*uK!,_\X?9g@^g?Kbai/EF$)EpiI&`_!<FsF'Tr[1DMBHLc^;.Wne!`qM/5h3et*4rk0b3%=a%#/<?>cq]kEJE%bndV;(i2H?1nSBI27OJ3>jR/a8fYIYr,fF'q:GCNKs)jMg0s,d4$qR=,5\\F_-4JY#^mk#?B9YQL\/@gCAZa%@458M+=H383Rs.^0q!K&_lOE(m/hL0#Y&56\R&QsQJfV?i;?UUZ4"SBSnKn@Ea7$l!j_5uL98Q?-'gdGH18\88d2m2UnZbM_iZ30%?Vs(O+.8#!e:2Z'):RV&S*"$$I^Xg,`EZb?5`E1JgC0W.Z[_=^n4]1:gbA*L?]42-QsU">he4Bc36B'PV&B['_/O#MTQNA+p'tgg%A+n\deE(]ZDBGn5bb8s/M9(Bade+3a'X\k<a?)E-a\'EEYV#A;BEni1&KMmH$Eq%c?:%Dd]^%Ug`OcoBl&o1^Nfq.HqF;Y`fLfi=%<g4(<_S?45V:`[`2<?<:4)Ub+OCH9!pSJ,r+/#U"P_LE08NXIBIHaCiT$)*/2]3%&5^Yf(0^4BS\\s-1^[kL[aTMg$>9OW$q'NSb%>5CbfLf%:o/s_b&d3]]2!i?B^ZXjJJl7t(aM^tKW>kWpILF7`n=h[Y`WQYEnm[,bWjl/>\4MjG_R.Rb,X'*GV&#jXp%VCu6DR*>W%Sud[!Smu%ChtJ*daNDgSbaM[>[`Xk^pWX73kGAI0@"O4uLSPP(6NkMHAmnfL18%*WM)!$-6.U..=P=cCYcoo;Sp.HDJ]XQdS^q.u%;/nA1>?$7eVRO\F4Fs_DBtk4P>!Pq&Tro#M80*Ba4UQj!cK_Io*H9adf+2UM_8V-j5?Mt]7=?POmX:.l/IqPCk@GjCprgIA]LhSD%J5@;5&XWeoA_f@6':9%#8]BI49]("C1Ua7(5dXD@"Qf_jp_fF''kF<*WL1I`C3Xfh^c\?MH81eDaEo[pq$Ad.3FQMR"48/D.*Qo;%DDX;+)3:bU8PkfIi*?A+;OBsqTk^;U"2!oBOhhHVNne(t"#1`IP-jSS1UmuMT'0I8a:tZ;TSW6P(sIWQe_eLSe&(+MW@;Wf1D#[k%2hdYe=1rF3_Me^rn0od05h6QV$8\:/!ARN?d4%1KBa<R8`6oXghCkNXc%T:7Ak^Wu219qL0]SqA*=WWaGOWg;j]p_W@&h\a/H.C9%nLIX1!i]+^RIk&/K;"7*`#?J\Q'8T-bBUh&<Y6b<8PrKJ$CQ&W[dKBNq0;*KLIP=Filt'AQSD$'g2HgC0P5MEI<i1L*L00F-=G5f%2\u$sgka:gkf`EZn`;p-Um!O;c!O55$-YfY5$;;bb_3$(:E^46ITD.G87:;\3XEqp(d^gtB$;&4'XS.ikibId?m$'=-``CCK,Lf2%n,gM_#4CQ&L:PG$4aJE2_$k/Rb\G.]e)OU?k4eg`KD?U)OTDFZ)jdNFpeFM`IUGEc$mE@hGf$45aWbK?2t]RUVqr@&#m\>C$mXR:%11l4:%:-Fs#(b6oL6(BI^Gf+&o_L""ePL*]HL`5/+hcc8*^hf*.^btOU@,p+o/SQ'2&hA1L_A]Z1^@DD`eR;hi[89M>f)l.f:@jc%2@I<?a&6/7]URB:;sHVqC<k?l.aMUkQ:'4]%rEL.&G])f:eJRV!1chGiZd>*+T7>mDpcQ/=G_H;A"2&dhkJ9p;W[::3MY$6b4OcS%cnUQ531QlrVgi(DLHofaiOK5nOc'_bL.=K&;b+`=5:g`d+(9>`k5nOs&,KFS#3^g-11OUD"@/2J]hBR2X^gI$]bmn67JG`o6b?.9%PYq2C#RHE8hCh1(P7I5&KjJo_Wq-5*,2I>&==7Z>J^'k3;`7ldk9L.Xh)#CC/:J$0AOs1e2K_"dXaFQSYqRd%)&[_]<08i$)HAe_%4okWh)7<r6/*>?^;[A<qA&HZo''jp=`ZR#lFh1hpL<bG4SPF+rMFOf7a<kb#ms)Np*cc&(,d#a00o\!qF%(ArD)G>1Xc?fX9a0>X%c8ZnS'Pud`/\ZeEXa$f,1BJHD\u:%iO?L]D<lN<'e7<U@P^hVu4&:8EQ]to9V(T*".>\6T(?GN,OYP93A457JPXTJ4%5Tn-7+#PE%.ScL;9@]N^QSF5Rl#Sn"9>2`)L)?F/2-0..;bGA(du9t]<R,T?'hi[J1SR0:811m@mR-i].a"'?Eef*=7?EIV6VriZY]m7Ob!q83%8%pN.Sl\WS!P5#Z>5hdFa6@)Z:=EL[FQeH+r`uiJI;<Z*+hgYNk<d:bhSE^W1H%dUXX1(^,RD#JK0uM;R*,+4Ddb^u+5OSHVA_DA%PW@38`dI+rmmLLm(6hskm^`GE^EV84:Gn\B:qWe)/9d+siL!'&g;)`(;MqZ?)M%u_Aj0JSiA'9k3i"hQ"0e_=B0_ou<?ZH4'65PS%O6[S$'=iD[WK-=+BGZKI2.0Wfgk+_ZCJ:i^G\/7jp5lp-\E.S1="^4fBLGE1>hFk]00%cK/M@NhX)(N;lN95Ha+;c@(^D+C,p)n?%1Qk4L@GQbbgdtahR,1b4$bK0:c7>Mc3@J&b`0a*_[`bHLl[JB/@c/A5S*mCJ&;Iq^nORjmT,u,_FiA[Vc_<+'@gTuQ61/[CSs@Hs%#t`%'0V34cKXA[gW1jQhI?&&'"?=P*3"M6e`9E%,6sTodB(XqJ>t/?S.=?CrN\J'/GL\drJUJKpb0SLXc3Lt-BSn[t[ddS`[hB!A%E(,=]$kY4&+2d**b@jaK0[8dt$*G34.1ZuGU5+<X]'?eKDP^$TY\JaY-r8ZGq?*Ji%sP(F#N%,*E%9T4KWN4!R#-be*%p[Ur:p?:%;dki8><-HBS#RD-@7^SB2gc!$R[P4ua(6So>g=CN)Va4D%u$T:+t'ZC7$G*s9f#0#kjoiQY^4N*/deOb?&<k9E0Qed"ET.L,,cS_%&\t1jg5QGajZIP&B=E`im_o)A^^Li$e[BJJd+Pk'CI$>^Lqg_LZ!\[_Y:9CEB_WFE.&-*BDPapTF=o>D5ZE^JDoC&*0ccpj3rU"I%G8?P%HAl7l>g=&CZ<Kba.s1JON#J/U(bT.9l4gDcFNESfA%.Q?Xha#coh?r/"Gr*DpCaB+SCS)S2@;/63aaIJ7cS0ZIVWpe-!fuD%\!Cu%j<7R09'tkm/\3a[E5'U\eKo<gl\Zo5Q]Ln_F6*J$F+G46B`8Z7Q(pX*]slK8m7j-^+E!7Q=VC"T;\tV84f.&R>p.sP1:R.k%&\[&T@]ia%ON/('SbB#Wi0UW/JtCc:I=ED0+`FNUlJb2%hlOcSV_FfWEOe0%RXp@/4K%K)89!X@PTcLh#Fn*CeF%k+q7=kh4LB0W%i<8gX>>pD8Pa1j,fqq$o"j_A4]TrU'XIGNO.0V/C1;XPhjjX[bBB0JBC:&TSneCU[<cbVYeK=<[m]OA/$fIMgs4a52k%B4kWi?^D%U4'MbGl@I5a;@b'8UnVf#2q^Y%71i-Qr5$Y9?+OO_[Fd+&FK*WCs"P[U#q/E*ZnkBr-Q$K"0B%brZs^K@,F.mO-`SYV]3N'gTKVV%G@?<R#ifof#l)V/+PKOr&T_/^HH<:^''>k9MseRO3\]jAYWOUC+mhsV23:4*dmd%cGec:pS:qSd.?2eI2c?%Ygsn0!7n*,RXX[V2%WgHR0n`J8Z\KA;6$P[g4\Jt_rMum"O')7.8.L'3Ul@3\>?j/d3lHk:cL"BWTS:$"C<!Y:RALQf_pVGej5^5b*-f^J[aC3pa]7H4U%eRp]?;)4I#[b^4k"r7X2.[OC1Rr5upU\srdCrn^r4t?e$8H\\bPLN,u4Y%=uLdWYTK_N#.j.\E*8ftpl71LGV'h(m5)Zmm^"X9TB%EP./9H]WV:DdesU_0NLiT?L-br9;(,KTUD]9tu&]ftq&DO!5&hobf0.!J?+8'10C^k_+N-3X!CHHG?1n#pKGP3PKkZ.M1/:U2#@Q%Vh%pL:GG;'gG"cFc8[fFE/YiHF)*7V"%5J)M]shdV6C4+3N*d98-KF*_)9)e0r0R0p@;pA0Q+ir5pkW1h41<K'\eK-?31dq%Z8)-%-]+#tMS1)Cng:=UEppcDP?:DFg'!8&U)?d=^i"o0%!hB;>%0t'U?>VlI"a0R,4^]p7"ITZUIeTr@oG^P>]bl(Bn]eh6Ae?[\!Rt*%!,=PR8Kc-cLt!)Fm[=I0BT=mVWD9Ga9>n=2r^0flX2,d<!OXYBR>9H+EWTl$LfJgG%Q(X"9f'KTV3`GF"@Fho0!@/)8N:9P*Q$&e%'qt13lN"d_l]kG#L]j$nXJBZ`%Qqp57i9W5PD-Uf:!7!G$S/l>h`!uu4Ed[LB9Rr+X<X2Kp]I:%P;76'9UHN+!jY64/eHhSAN6HR%/^!"/OUR,HWQCh.be.agW9%!N%14e*(m[<.?*L_I:QUtiD`ZPb*elMW4fM9b(q'Jp:5Wn)HNO!dH;U_;;cY:aPbpfjSd\4icoW,0%Ao4qe:dQ`W)jI$Ijc_uernRciGbT&-deAAIK@2>[YRO2\;e-aR]PtL.-^0.r,Aght\t#I#-3XX"F+f`K!PN,g*_d":4cFkAPHp9\%;Dr-N;B9N+-DcHO68C"?r3U<=+QCE+n80chM(R%#"Tpfkh8/TcUhAGH[pR8nR&]#t,b)[(2mQ//\/@s.QVG;\A^,)#.GZI#fr./W%^a?uhV9'rU7O:'0@8nYEjl\+^Cdi7[p0r6b2Cc+h(R&#O4h.T9]/P0h+&sW9RpFmJj+t1b$Xp!qpqXuQ0\AbIiSE.0G]BX,N9'I0%+Ur?M]T>DlSSUC#aL_-8Hg'rWQT/e_(+K63,t-@IY-Aoh=tY:s*\W=-N0bfN(EX!"%[Y3DJ!E<ijmcs$*q+]DG=r<EcB#6kh)<G3%IuJ6*Qf##Q=*_I:5>3`(np$W1_9(_kZkJ?EQcBIs.b8Zo2iDRo=.VN\N_R_$[lGlJ@ZU9>A4[gqA8`l@#*tE`d@llTD4[Qdd\_Uh%gGlTL/mgAB3-_"sZ<Kc>e%SbeG"_b)?JoFMTfGn9iNlX&(hM>*9\?VQ>M)fQK[4`fbTrdVZ[NF*;krV<j/K'-KDWdNfW4t"JOfc4%]s(^0:[L54J#;+U`;(8GWL,DfHLd$5q^lXW_Re4aWOLosN+R-Z+BLa[42)A<</$j5.Bt.<e!c\t)p'+k0SXZ"NF4I1X8CLnWa:P*%9)"Z<jth<`N8%q?f[$BV)9Csh\5TFLNpO>U[o>ot4Y+.@Vs5m>gCKm;om22V:5D"!Nf)_PhR#W"*SVqKR]\%$0grCbnU?&QrR;4e%<V4eTe(`8sZN*6>M4#1,'OaJF9<O.A&f=Z1(LiS>]"iP)',6_!'kOFM>#Zl-;qk2u5cU3s0H^_$JSDo-7^Lf'AXHTHfrQBmlbrgY%.3#01d&>n2KRC>U/Gl,2B5tVf)r^`LV*K]f?nhQ.@VVV^:s)Q8+l-;]Cln1_XQR[Wjkr2U^b2^7K:(D9V`ce9,on*Q2WK8\H?Y;o%-,-<:5mptp'uk>.:=iDKNB0q\la83d((\SV5EJ/=K$due/.crbb%c+#dg;4s87Ji("nJLo--@&ZpiJY+$]..#F3c+5CV>0N]2H"q%V`[%3;3[7K7\+?J`K9lt6M`86lI-quFq9"GlrgACJS@X`)i/K)<Ycc2pI,DPdN6I@2/ILRQ601,\Ud9]Yg0(?NSct<'17_H%m@Um%40U(6il0FRY++/5UfR'lD[C]"#dW0cmg/6^Mj?^Xf,\#kgCZein:3?"3M5Glknb:?6CO$1[.*eE_XY-'0058\AKpneFuQd:6ir]X%R..!K:hL-$Bd?2l-+]/K?VSP6^q)XkEE_YL?@'\Li4-bbi#Ps?5ZE8bB>jKh+]E_\>pg&peg930@hPI[E]IfR0'&>W-.U?9dMI1`%FO/&b34W/n-VKV$hEIJo!JdZ56`laBUZ<,s!eI#Y6]tB.!)Wnqf.AO9`c:3ihR==paa!(j27F':YF5t*-c/<I892\5]\A\qR?.\I%TUU!s7&j8ndK_UXV!RTABqt.h10@sEl^<$3/eHWG&h(YM:WaSNWL^qj)kQ\b6k2U`bgENBC;dn%/#;\8P^$CC<=c>U]F+4l'XT)4%Df&r>_JGsL1Nl<hJfi$HbIaYlgg/u0Fb`5nCH/jRBR1CJ-4prcfQ$YMUe)L@)165^?G`t!]qJCG7;X^459:lg#:[*2UAY*1mWe:Y%namO&ZVf_C!39,WA;d[o4u`sQNVL^P6GAJm6"3I1F;I^S.["&4S\e`He`X-k27sok[V1:;c9n`<3sVMPoJn:Y90u`<Y3V%#^+8V>%qCk+fi@/:RiXDLf5/V@##9.PEUS9k5_3f.\A]-7&W5iXqS$(,`E+'m7E(p<0*QH=+cY;P^_k^\e@1h*.b*Z&0mt^Z!g$o+Q,,-he%gfWdd.F+#>r4o=J*+..%JURFRIVGbb9qg4ajppg+`eH6l09ddLUWq]4:c'g22LM)<6g;`:7c$XsTB#1Y%krC<i$5tP$AHrk%m:o4%QP_4aZE/<1P2qWGO\#0gVpD@.Um4`bGtLP'U;DKF3e(b@Q&9Z=ZB>C9o(BeE$V)50iY[f44S;FODJ2)GjE5YT"qR\R^$p%Y&\A%m%I=)5d(3&`)aH[9@`4O!5ksU*2Wm6.ZL^BI?6!_AF<>H=_72YW@c"$4Iq=_X0b4Fun!jq\7_pPa%QPa]D`7dj8$HLjn+E:1sJ\@Be%[hUpT?33M*.KZfe";h-7USPR+QibO7[$Lb5K[eAVQN4eYQqpom5`,ri<WYc*O`n=E&i1B:Be(p4&2:ZoI*bE3(aD3'Nek!L&iel_%^=bEgCWCtR[GmUPXi,<dHuC=H9-K9Y[Ls8:_&/!1_ujLs@;dI];Cmf2>CtfNJ)3e*J68A(>;:>i!U0Z_SHQsHHCpq&"D5a:LXJq,%9r#CaGWW7[Umpls4BUP$3m&\lqD<p9!7%tkFCQ7cNWHpl4+YQfEsk>Aa%ZWP"60VQ%(pB4>fm<-18`N=%\U<!>@$;4&VGQtDsQpo%-q<_(Dl?5hM&&T36a4iI2/`aS%mUTs>+Ul?T8\&1-KIW&6paA)K_WQR-X7MQNIab[!qWfA?tm$#&0f4D+(=tKe+5cCd^'?Z2F#3c%bB]"R*LL=I5DeCL;rsm]WDX_>55-NRako+2?f3a*3JuOS)6r<IPnA$e=%#!L8FP_P(43\6O@UO=@$E9K0mB/cV!V=gh18B`-jAEc%[Y+"XfBj-YK'km!Dep/1^EYCuK'rAEme$pu"$+'n<BQi;KtVCmU5.gfVcLcZ"VGmlM\G5%l@'PQb:Difou&KG=[Dcb39D8QRU,Yr%hV^n+17:,S9XL@OYT7c)ZVl[,L"p[\qjeu"GEKsSMR]DpJp*lEqgDUW,.>;NF)hid2AlT!]n"m-B4*^Yrben"Gr-gpOqY\Ds")m)%.j'/brI$2$E8MF(fCg9+eB-W:65[S72,[K!bh]Fhc3`GkL`.cg%)gmF-%lR=3Q7*l^0?7+G=!.67PHU7GB5$AAVBNT3-ELPhq_2f%.jL"*f-i]sg"q(CEO@U>3/VS(k;M*)m#:EsI/ZIT#iFBJ;aU8N&P@+2pi\bJ-\Tm6PYFaViRP[n+Uhd\De#%CL9>=dN[+,2p[mXZ%o"fRp]B;!W?<7Q)SP6T-g8%bG/@:22T[MZ/&>adD>qJ.Q[aKABjmgIu0-oY32s,KADKInUY'f`p9[Z`4i4F[PNI:6O,8_,ohRd"O%1?F/WV/!8=%EkuXK^cT,A`Yi>)s'(%]]S(n#N)JR3h50[;#=4FPRb^s.s/5K_8+^N.ijR?'.I.^K5XDdkB-2V4DUGs^.4QdaCFS.%f\);>($SMrY2Z-O3r&+>^*u-'Y"4m3P<qi?NMgV#&?k9*.6q"F.@UB1d7)3O9p*MqR>;i&,%Egi'O[9KD71l]Y-MmOJ^R0!.8W2S%Q$f&86J>l#U]=748sg;"VNOTe9a[+j]q)H#!Q'OJbf(?I>p]a2Fp.b<D307lX>M-GB.T5J9Z:"?;h1h1dP_8Z>bZ(6fQ6H(-=qC>%QkU%HjkV\/$<:*d\O4o*EjnQE.=BEi,b'D[29TUb'R!cc1UgPP385.Gf'6ADD,Ys:St9d+:,Y+*[OHc<S$Fa$'\l6RdU?'&P,kt*%Z71$s7Jo8*lV=!?^8qKF:R&4t;pYgX/F6D=A/B)]hL@#U0FPoFhq=f=mbQ!\!23rp1+>W0qcu+6UG&e'Z73`79K%Tgk&BM1VF[u%%-^'2O<>K?ZD_6g+YSHGYp1.$NnJoa%$8H&j<XImJr3gMP$3WR,o)VJ2QP4Jq%AW'`[\1ftK2f!Ko1[dk?"/nu4mqBUmJ@p+`Fnfs%Uu1#lakf6[d.Jj(nXZ'3NFDH%#h/_+13ucV3FpUc=V/S):/]:!S[N"^kjdGS'A(.c!Meet13u3_1L.537*bX>ol,k5KN#eT!Rls^%fn4`4"g+-E4%%">R6@L:7N>'5mu0TW0PRGGs%[1p*0R#QD2+HcbO"1MDYmpPoq7.&*6si"4'`=.7Lq8i:Mpm(s6/'uc!.lnC`^l"%$=:#S*n=;.]Yim&hPG%X8!VYkXVkHRAtMYC[&?-*e]a7b2X_(E]4CMP''eaAfK:::>MA4VAD=bMg#ei^&MKW/,FY*95%4%Xf=>^e%#J&bSdr6a2I$Z4ELTt)'NU">ZJp3WqG9=s_GtZ7=)8.p!QI.d`F%FL<@D6ntGJiY7]\/^CWu!sji`=7d@Ep\k4#2,,?7Lp]UISm-%5?H6+4.klmlA9BMT_0gfOrEQfLh658^$coH=$h$2q<1Haq)h=FZJhZo4jFV>5rcjo":.B']^N4:Qm7dlFXjte@NHqh&-=ON`8(j_%<FV>.6s.t(oLdDg]%)Adl",CC27uge\=R3".*;t)hOAeoq?EWoRk>A/4HU]62el"%1O]f)hO4gsVMMn6+/DfF;mK;P_TPeCF>I8L%H9PtZp#r9rgb5NL.:F1smGdtAFST'6he5_Na3.DOn16Rr8cV4]MH<g/di*HC+L;$@Fd)rnF%"_s8G9>1VXT8s3Rpsn2j#l2T0Ji#%PuYZd7KGd,SeCmp]@ETQBUBiC)uu.mKW4RH*G2')Hc*(LNgCi7AJ'M297/T)Rn>^#:/\VJD5ugOL3IDXV!Uq14@Vc<R=`7dQ'oN/%I(*-3l&_[YZdVsE9DLnX)1I'7iHD`-qUOjX^0>T^8q'C)M20%B2YS[ZI.q%r5G5C.s*'VW@4V6]rC*Or5/\Wi7_(s&@t+WX/#T_Z%+(?b>P-4``gM*r@N+k$kG7YpZ-DU!=NVl_[i%@c]nTJ9)q[f&76(Nd"VG8Zm^3?$)6AS-]e*:0a4Fo2)RaP`p@Z8XG8jBRKKS<R7%h$kl/QCsKjj-(#*a!a^fkVuJ/N1-0bPV71a&=n'rOuOZr#k;QI1t`r%8<Z1[:6VO%?YQh?ZRO/+,tkq^ZIGR3:"1;("X:@M*perZ%[?1!*.u#6d15'hO,D&F*VrD26'=X1*Se:X)A5-OE;m@gX6oVD3N_^K0Vu'6*>M?j$\Z>V,K&O;54BSibrAI`#pVLe_4gj_mrL&-G%AIt`6l`!^Sf^aYB+Pn`DeHP7sX..rThH%tA(<T&j-HZCRUdu%^#A`M9/s7KkOo-=.,N3b%.7gH8pGR/Z1=9`DaoW,mB"9_ajdM94%l*(B>c)m#>jn>5TT>cqBmVq0$4k&BFqL7jcXLARRpOR7i].&2Go2bTA"hSnAp[SF;gEgcHotbP-DV@$q4*GO)3ZaG^T'@T"U\oCK%D"uUsYF8?>4>X-'<CnHP-#@h".b:,oiNHP78nul)df)=:1O-3&:K8#qJn&IoI.%eJ_Ig$FIH3k;MPTi$K*RmkVn-8n9uk](Hjp7Y%B2)A=:PbR'"f6W0j:9na:tin[=M1F-%^m!.HrsBs3+9`!@2LRO2Ik96Y)Eg:@52l7>=@_PJfAl%0FTBlUFp12r_o"%iM6DJrB*Xq%9W6pL.k=&.D586O<"`JA)knKB!t])La)]Q`(-PTKqXP6<2=>-r0a[X6Jnh_QPp2pQ8Tf(sm-[q(G\RUm/YYeNjq^a[T.4/D0-A7c%"[f+O]N\YOP^m_'Yh5nO;im;a9%]dPl)TrY5_2=n@_hgoe?Vo]VO#<k>`*7Zp[#p;HP+7bY?M;.i2KCB@5<W=^En'?oUVfF!m\WX%r,%FD`t^qPe`>@J1cgCY-`^7r.=#I'^pRVeg2rO?lbK/7<t($L=IaIo4#kM1,M_\]3al>X?Tr1;WqQS(DH2HT#BCT2n:X`cNO[Bp%?j=$R:gQ0AbGAf'hS4``Jj!i_(K+7N[os/E&V16ZMcA@@n!0Xc<RmFXA'_*$5'3gk7^.!)2$B?aVNZLS-ZAp*U]l3#U:!tVeaFqD%;gf!4TD[>g&\d(d8u,eh`VSALh8]9DnbM#8]GptEG*LSLctRpm._qd=lh"Qp(Y`;qMV/7:Ihn!dQkZ'0Vf%1o=p4h2KHkej#<jV/%]qW?LrE_hA<Tg,06uRIs**:19&PEH7*nYDUrB5(KXnZW`70KPd6A-h7.r(0.H1(!S+c&]!*o9Ioa)D?7:*99T7[T0m.<[bE%?Gp]%Dfr)c7n3U`U6iL8H084J4q?A[o+pmZG&J?$mR>k*3BI;Y-f;W<q4om59EGfK00'+RgWi%l8akaLi"t^8!m)cDBi8HI1B?dOK:.9&%^algor]qfDL:htuV!kmPD%;]YQS6^G/Qre$5YX6Wq#VD^4-MUp&GlM:8dg,k@Ddk&?HX)nlQ^4m"!g,ZM%IC_%NYmg!8lNO)i-RT%`DoO;S,rD9dOF^acb8msncf*%G!<B4i^M_>]?-54ioAC\?2anAY%j:hFkmi(1O#de2lA'Jr<k:cr4)_0^oG4_!R)5:$CE3"5m,tW%3r#\l-X2Ms>9ttNW!GtXo"YL6c5s7#Ks,,mM(;s<bD>JP)dQ;XmNNJTGF+DrW>9DZ//ccl_3NR$^e2TH.;,Z*H'J_`X7sV?K[%$A%`;#7]4;Yg6E7AV;_/(:i#^u:L7?*;3Y?o],r+Nq/N&GP)]TA?gp#K'<mSsDm9S[!*U^bR)`hNfO"02W<6#Dn&A4Rnc"M>7+".0S'%\,_7#CEJuQ?ml+_6@f9(<?g8K5?GWs5ak_-.U\&l"&,1N7I/pU>QFAKK`Q]>pJp*Zp6f.c6UWGW$XecidpcS`6`cZpWrnGekTi&f%^^u@\WCpXo.3&p.RM,X\l5E^=E71(\j>^Cq=`CrGKbZ;kP`K8pbO34nDIk&]@$E_/NCqn`nVACe+lYO/`[VH:BWck'I+fu_@(Id3%Y(0*2lP4Xc!k%K5Y.)dW/qFm^<uimTG!AORWs"0\93p7W!qY9u71"o(ON!,W![CombE]<K32e%HLFO@i&$*f"E!Zr.-fdd"k(0/t%,X(.&X$0j<QbWU%i^?9CbZM.S;$+'5<E-f]:gHjc0Jj(]i'\.cO![[h\r0sf&/W/.bXF5Pf&!.,J[6bfr,!1bkRkBNVW_AL\@%c1%iPJY>;510R(_4UFKZ\$Ub%PjjJ\B_\GG$u6N_F,c..GeS?IX*OHTZKmbe#TYY(Mj;[cN5T`r/X]B:e,$A`4P.NjdJE_W.+&FA'a/%&Gu<e]!Ms2C?ARd[j!e"Q*j]mIVJ<aZdEKY-GIH:7$9lf]McG4T3#b2Em*1><U";&F>+45I/P<Zmp<]r]%*gm@[Uk$!Y?TL=c5n=%)=tt+R&2YRBKj4pRtPS#*5@D/ksh$sINB`MHp4,ZG]QQpnVneF2Lb-"&?gMi+EUGOq1oA\]=R>o;/!H1gK-:R[43eDAmdR;/'j2,%IVe$kC5'sdJPLKdXY0%"n?]C9iRqXaZCj>sWMT;u1#gggn(\p:jkOIWL_UCPXi.%r*'rZD5)C<F@R-LWR?8UI/.ALG*f&D9fV]^o%(u;G-L'&ODGf=!D9-4ig`Y$^%:A/q?5h*bMf]bkF&dN;BNX@gfYun-.Mt2@Tl>`js($a7\El$HMPXH#b+5f<A1kLE9g;Z2`CC)a^%omYiUCp0.4FgV:&A?DoqS2+:(-WDK;aGGMNW6#B0%QV&:FWR8S;,d>Vp/9j0&>=+pL>OBB4YWr-:$7CaS.:>":o@X\oqbS.=E7UA%n?FGb@9=!#W,63Gm>aGON4.1i7eNa[$ge4*FO?_];J?,'Gi]2mooSu,n4LZ;aVUa2.q5TL/A96'c:jXLIl2jq:eheUI3',g&LN6T%RBZVW:uFQf#NKF/T#B4Y5/N%@MSef&W9S1Q][5W.*5-hECH$NBDAAGSQe?sQZjE9N)?*'Tks!uddq$%ff2J_3FCD]Q^7W8Vdl0m\%>IjmXh^K@Z"Z^'G)09fG9>9!0[h%n^`ALr7H$?m^?3D%07Uo^CfXDCZQZAKB8TYh80O6(lld&6u(J7ReW$.5^J^bh.R-4T#lfPBE%%$Ik02hT!<<01df$an,E/5**[(nr.aN#FQqS*0q?3"m0jZJ_FDW0gRSK'BSF`H57,>#^j]H\q$>VkRSLU:T:)B?>EJ]H?<<b$Ld7%F-`8!Flt\!f4Dm?jGE2S0#"`,M!BRhR.3jXENkt?#k8bUaDM75"\:@N9iMq/(OPN]eHOsO&ShcSb7Z=3<0n2pWio)RhY)nfORq.e%?)Kg=DAA=CMsE,NT4+t70&n^XHnCK@;@\1t>o&U5/fP2$bIBn=dTi,i?t5I]$*MIM5=FnGW%JqB.n>KeDW9-JE52aFj_E7MPSQq/%<$q3QU<RdGdIH>>K:"8a9mna%0LkV02UgdTGF:Wt<50n'@Z'l'@2+(/CuL4n."AoG:\,p+*FeUpNj$l-5BF8u'&V4Co^/O>pSe6E%(\12'E2c@i<]m6Y>ECJu(;4a81oQJ;T'+<?;o/D&(Se/g,EW_pf\r4;N(UCnqX`&s<s^X>a(@lNcQIuti'\0$lHnJli>Ku*!XX@d%3qu]9jAamq&T'Z&i;UQd:`bdSRTD"UL-5BD&1oncqp&"\%tBI,(aNYWaCeef0P0%=S*t=D]VL>O*S=IW3UYPV&(UYUFBu0OY,A2#%IJE>6NIcHC#%qgQHoqrU#6orq0uLKgUH@UL$,N=AOoUjV2O,lsdXn^52"QVLKaW5>(4lRY.4(?odn,2Vd$<UX@m0[qVOQH[Z1c6c%T:UaLC_2D9Nbb,t>91.V23*P]hZZ==oF@!pe=dRL"pI2ikpI8\.jOG;b8/V)V++N7<&3pcT*s83Y-"kmiS="N2@Z:D8*'*4>DC,U%im@=#9O#"IC7%YroCd/Q(qf.5aV3MgTKKT=;nTW*bK:l%f:W)g(ppG$G,jnjo:S2;5`p+1AsrH[>WlU.,se,-atXDrQduJ5\Srf@%AILj?&f`-LM->b>ljiH1&T>qOio-gB"!c=pGES4;#TKuWIJpsa^:Y325<o2<n#UROePQulJ%r&*5@R-`c8dSurpT7nBjLTJ[]fYe%kssoVHp/UdJcEGHrn@t]+6`\;rr:HFQiHdD%tFLUqt!&PoTtmds52F8^3obKLHk^_+9231J,SruhnFO;jjRRdrUE+eIfAl8T76e,%a5=W1rUDP5s8'pj?[qtKQ`m$2rV)ra&!4gXdJT&Tq>&p^rqT@I^AZ*U^]!``UXbtYGQ7SJJ,B)cpV6\!\A@@CIf8[*fDka@otRHe%YQ+U^?iKcJ?QZE45A9^c5C`S+QTonJr7%KMrs'#5ro7pXJ,AL)J+R+Jqk*o]QcDmNrTUe@E19qAfg#9+DdWP9laQGs^[d.Er:Bs`%QV[W'@8#74~>%AI9_PrivateDataEnd